import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { memo } from 'react';
import { css, useTheme } from '@emotion/react';
import styled from '@emotion/styled';
import { Box } from '../Box';
import { ButtonBase } from '../ButtonBase';
import { Icon } from '../Icon';
import { getTheme } from '../modules/helpers';
import { getStyledOptions } from '../modules/system';
const Title = styled(ButtonBase, getStyledOptions())(props => {
    const { disableSort, isDisabled } = props;
    return css `
    align-items: center;
    display: flex;
    pointer-events: ${disableSort || isDisabled ? 'none' : 'all'};
  `;
});
function DataTableHead(props) {
    const { clean, columns, isDisabled, isResponsive, onClick, sortBy, sortDirection } = props;
    const { colors } = getTheme({ theme: useTheme() });
    if (isResponsive) {
        return null;
    }
    return (_jsx(Box, { "data-component-name": "DataTableHead", display: "flex", children: columns.map(({ disableSort, key, max, min, size, title }) => {
            let icon;
            if (!disableSort) {
                icon = _jsx(Icon, { ml: "xxs", name: "sort", size: 20 });
                if (key === sortBy) {
                    icon =
                        sortDirection === 'asc' ? (_jsx(Icon, { color: colors.primary, ml: "xxs", name: "sort-asc", size: 20 })) : (_jsx(Icon, { color: colors.primary, ml: "xxs", name: "sort-desc", size: 20 }));
                }
            }
            return (_jsx(Box, { align: "center", "data-component-name": "DataTableHeadColumn", direction: "row", flex: "grow", maxWidth: max || size, mb: "sm", minWidth: min || size, pr: clean ? 'sm' : undefined, px: !clean ? 'md' : undefined, children: title && (_jsxs(Title, { "data-direction": sortDirection, "data-name": key, disableSort: disableSort, isDisabled: isDisabled, onClick: onClick, children: [title, icon] })) }, key));
        }) }));
}
export default memo(DataTableHead);
//# sourceMappingURL=Head.js.map