import { jsx as _jsx } from "react/jsx-runtime";
import { css } from '@emotion/react';
import styled from '@emotion/styled';
import { px } from './modules/helpers';
import { getStyledOptions } from './modules/system';
const StyledTruncate = styled('span', getStyledOptions())(props => {
    const { lines, maxWidth } = props;
    if (maxWidth) {
        return css `
      display: inline-block;
      max-width: ${px(maxWidth)};
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    `;
    }
    return css `
    display: -webkit-box;
    overflow: hidden;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: ${lines || 2};
  `;
});
export function Truncate(props) {
    const { children, ...rest } = props;
    return (_jsx(StyledTruncate, { "data-component-name": "Truncate", ...rest, children: children }));
}
Truncate.defaultProps = {
    lines: 2,
};
//# sourceMappingURL=Truncate.js.map