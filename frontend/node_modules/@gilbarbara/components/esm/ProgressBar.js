import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef } from 'react';
import { css } from '@emotion/react';
import styled from '@emotion/styled';
import { rangeLimit, round } from '@gilbarbara/helpers';
import { getColorVariant, getTheme, px } from './modules/helpers';
import { baseStyles, getStyledOptions, isDarkMode, marginStyles } from './modules/system';
import { Paragraph } from './Paragraph';
export const StyledProgressBar = styled('div', getStyledOptions())(props => {
    const { width = '100%' } = props;
    const { grayLight } = getTheme(props);
    return css `
    ${baseStyles(props)};
    color: ${isDarkMode(props) && grayLight};
    width: ${px(width)};
    ${marginStyles(props)};
  `;
});
const StyledProgressTrack = styled('div', getStyledOptions())(props => {
    const { backgroundShade = 'light', large, shade, variant = 'primary' } = props;
    const { radius, variants } = getTheme(props);
    const { bg } = getColorVariant(variant, shade, variants);
    const height = large ? '8px' : '4px';
    return css `
    background-color: ${variants.gray[backgroundShade].bg};
    border-radius: ${large ? radius.xs : radius.xxs};
    line-height: 1;
    height: ${height};
    overflow: hidden;

    > div {
      background-color: ${bg};
      height: ${height};
      transition: width 0.4s;
      width: 0;
    }
  `;
});
export const ProgressBar = forwardRef((props, ref) => {
    const { hideText, step, steps } = props;
    const percentage = round(rangeLimit((step / steps) * 100));
    const stepLimit = rangeLimit(step, 0, steps);
    return (_jsxs(StyledProgressBar, { ref: ref, ...props, "aria-valuemax": 100, "aria-valuemin": 0, "aria-valuenow": percentage, "data-component-name": "ProgressBar", role: "progressbar", children: [!hideText && _jsx(Paragraph, { mb: "xs", size: "large", children: `Step ${stepLimit} of ${steps}` }), _jsx(StyledProgressTrack, { ...props, children: _jsx("div", { style: { width: `${percentage}%` } }) })] }));
});
ProgressBar.defaultProps = {
    backgroundShade: 'light',
    hideText: false,
    large: false,
    shade: 'mid',
    variant: 'primary',
    width: '100%',
};
//# sourceMappingURL=ProgressBar.js.map