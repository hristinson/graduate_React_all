import { CSSProperties, JSXElementConstructor } from 'react';
import { SerializedStyles } from '@emotion/react';
import { StandardShorthandProperties } from 'csstype';
import { Breakpoints, Shades, Variants } from './theme';
import { icons, inputTypes, sizes, textSizes } from '../modules/options';
export declare type Alignment = 'left' | 'center' | 'right';
export declare type BorderItemSide = 'bottom' | 'left' | 'right' | 'top' | 'start' | 'end' | 'all' | Direction;
export interface BorderItem {
    color?: string;
    shade?: Shades;
    side: BorderItemSide;
    size?: StandardShorthandProperties['borderWidth'] | number;
    style?: StandardShorthandProperties['borderStyle'];
    variant?: Variants;
}
export declare type ButtonTypes = 'button' | 'submit' | 'reset';
export declare type Direction = 'horizontal' | 'vertical';
export interface GetElementPropertyOptions {
    property?: string;
    type: string;
}
export declare type Icons = typeof icons[number]['name'];
export declare type InputTypes = typeof inputTypes[number];
export declare type PositionX = 'left-bottom' | 'left-top' | 'right-bottom' | 'right-top';
export declare type PositionY = 'bottom-left' | 'bottom-right' | 'top-left' | 'top-right';
export declare type Position = PositionX | PositionY;
export declare type Sizes = typeof sizes[number];
export declare type TextSizes = typeof textSizes[number];
export interface MediaQueries {
    [key: string]: any;
    _: string;
    lg: string;
    md: string;
    sm: string;
    xl: string;
    xs: string;
}
export interface RecursiveChildrenEnhancerOptions {
    componentType?: JSXElementConstructor<any>;
    overrideProps?: boolean;
}
export declare type ResponsiveSizes = '_' | Breakpoints | string;
export declare type ResponsiveInput = {
    [key: ResponsiveSizes]: CSSProperties | SerializedStyles;
};
