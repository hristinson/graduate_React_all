import { jsx as _jsx } from "react/jsx-runtime";
import { forwardRef } from 'react';
import { css } from '@emotion/react';
import styled from '@emotion/styled';
import { getTheme, px, responsive as responsiveHelper } from './modules/helpers';
import { baseStyles, getStyledOptions, marginStyles, paddingStyles } from './modules/system';
const flexMap = {
    center: 'center',
    right: 'flex-end',
    left: 'flex-start',
    stretch: 'stretch',
};
export const StyledContainer = styled('div', getStyledOptions())(props => {
    const { align = 'left', fullScreen, fullScreenOffset, responsive, textAlign, verticalAlign, verticalPadding, } = props;
    const { spacing } = getTheme(props);
    const styles = {
        alignItems: flexMap[align],
        justifyContent: verticalAlign,
        textAlign,
    };
    if (fullScreen) {
        styles.minHeight = fullScreenOffset ? `calc(100vh - ${px(fullScreenOffset)})` : '100vh';
    }
    return css `
    ${baseStyles(props)};
    display: flex;
    flex-direction: column;
    margin-left: auto;
    margin-right: auto;
    padding-left: ${spacing.md};
    padding-right: ${spacing.md};
    ${responsive &&
        responsiveHelper({
            lg: {
                paddingLeft: spacing.xl,
                paddingRight: spacing.xl,
            },
        })};
    ${verticalPadding &&
        css `
      padding-bottom: ${spacing.md};
      padding-top: ${spacing.md};
    `};
    ${responsive &&
        verticalPadding &&
        responsiveHelper({
            lg: {
                paddingBottom: spacing.xl,
                paddingTop: spacing.xl,
            },
        })}
    position: relative;
    width: 100%;
    ${css(styles)};

    ${marginStyles(props)};
    ${paddingStyles(props, true)};
  `;
});
export const Container = forwardRef((props, ref) => {
    return _jsx(StyledContainer, { ref: ref, "data-component-name": "Container", ...props });
});
Container.defaultProps = {
    align: 'stretch',
    fullScreen: false,
    responsive: true,
    textAlign: 'left',
    verticalAlign: 'start',
    verticalPadding: false,
};
//# sourceMappingURL=Container.js.map