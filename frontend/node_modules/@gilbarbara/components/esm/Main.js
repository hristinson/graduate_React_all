import { jsx as _jsx } from "react/jsx-runtime";
import { css } from '@emotion/react';
import styled from '@emotion/styled';
import is from 'is-lite';
import { Box } from './Box';
import { Loader } from './Loader';
import { getTheme, px, responsive as responsiveHelper } from './modules/helpers';
import { paddingStyles } from './modules/system';
export const StyledMain = styled(Box)(props => {
    const { minHeight = '100vh', padding, responsive } = props;
    const { spacing } = getTheme(props);
    return css `
    display: grid;
    min-height: ${px(minHeight)};
    padding: ${spacing.md};
    width: 100%;

    ${responsive &&
        is.nullOrUndefined(padding) &&
        responsiveHelper({
            lg: {
                padding: spacing.xl,
            },
        })};

    // overrides default padding
    ${paddingStyles(props, true)};
  `;
});
export function Main(props) {
    const { align, centered, children, isLoading, justify, maxWidth, name, textAlign, ...rest } = props;
    const textAlignMap = {
        start: 'left',
        'flex-start': 'left',
        center: 'center',
        end: 'right',
        'flex-end': 'right',
    };
    const shouldCenter = isLoading || centered;
    let textAlignValue = textAlign;
    if (!textAlign) {
        if (centered) {
            textAlignValue = 'center';
        }
        else if (align && (['start', 'center', 'end'].includes(align) || align.startsWith('flex'))) {
            textAlignValue = textAlignMap[align];
        }
    }
    return (_jsx(StyledMain, { "data-component-name": name, ...rest, children: _jsx(Box, { align: shouldCenter ? 'center' : align, direction: "column", display: shouldCenter || align || justify ? 'flex' : undefined, fill: true, justify: shouldCenter ? 'center' : justify, maxWidth: maxWidth, mx: maxWidth ? 'auto' : undefined, textAlign: textAlignValue, children: isLoading ? _jsx(Loader, { block: true }) : children }) }));
}
Main.defaultProps = {
    centered: false,
    isLoading: false,
    minHeight: '100vh',
    name: 'Main',
    responsive: true,
};
//# sourceMappingURL=Main.js.map