import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef } from 'react';
import { css } from '@emotion/react';
import styled from '@emotion/styled';
import { Icon } from './Icon';
import { appearanceStyles, baseStyles, colorStyles, getStyledOptions, marginStyles, paddingStyles, textStyles, } from './modules/system';
export const StyledButtonBase = styled('button', getStyledOptions())(props => {
    const { busy } = props;
    return css `
    ${appearanceStyles};
    ${baseStyles(props)};
    align-items: center;
    background-color: transparent;
    border: 0;
    color: inherit;
    cursor: pointer;
    display: inline-flex;
    font-family: inherit;
    line-height: 1;
    padding: 0;
    ${colorStyles(props)};
    ${marginStyles(props)};
    ${paddingStyles(props)};
    ${textStyles(props)};

    :disabled {
      cursor: not-allowed;
      opacity: 0.6;
    }

    ${!!busy &&
        css `
      pointer-events: none;
    `};
  `;
});
export const ButtonBase = forwardRef((props, ref) => {
    const { busy, children } = props;
    const { fontSize = '16px' } = textStyles(props);
    return (_jsxs(StyledButtonBase, { ref: ref, "data-component-name": "ButtonBase", ...props, children: [children, busy && _jsx(Icon, { ml: "xxs", name: "spinner", size: parseInt(`${fontSize}`, 10) + 2, spin: true })] }));
});
ButtonBase.defaultProps = {
    bold: false,
    busy: false,
    disabled: false,
    size: 'regular',
    type: 'button',
};
//# sourceMappingURL=ButtonBase.js.map