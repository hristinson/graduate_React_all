import { ReactNode } from 'react';
import { ComponentProps, Direction, Icons, Sizes, StyledProps, WithBorder, WithChildrenOptional, WithColor, WithFlexItem, WithLayout, WithMargin, WithPadding, WithRadius, WithShadow } from './types';
export interface NonIdealStateKnownProps extends StyledProps, WithBorder, WithColor, WithChildrenOptional, WithFlexItem, WithLayout, WithMargin, WithPadding, WithRadius, WithShadow {
    description?: ReactNode;
    /** @default vertical */
    direction?: Direction;
    /** @default false */
    hideIcon?: boolean;
    icon?: Icons;
    /** @default md */
    size?: Sizes;
    title?: ReactNode;
    /** @default not-found */
    type?: 'error' | 'no-results' | 'not-found' | 'offline' | null;
}
export declare type NonIdealStateProps = ComponentProps<HTMLDivElement, NonIdealStateKnownProps, 'wrap'>;
export declare const StyledNonIdealState: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & NonIdealStateKnownProps & Omit<import("react").HTMLProps<HTMLDivElement>, "wrap" | "ref" | keyof NonIdealStateKnownProps>, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare function NonIdealState(props: NonIdealStateProps): JSX.Element;
export declare namespace NonIdealState {
    var defaultProps: {
        direction: string;
        hideIcon: boolean;
        maxWidth: string;
        padding: string;
        radius: boolean;
        shadow: boolean;
        size: string;
        type: string;
    };
}
