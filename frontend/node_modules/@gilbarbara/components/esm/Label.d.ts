import { ReactNode } from 'react';
import { ComponentProps, StyledProps, WithChildren, WithInline } from './types';
export interface LabelKnownProps extends StyledProps, WithChildren, WithInline {
    /** For the htmlFor attribute */
    labelId?: string;
    labelInfo?: ReactNode;
}
export declare type LabelProps = ComponentProps<HTMLLabelElement, LabelKnownProps>;
export declare const StyledLabel: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & LabelKnownProps & Omit<import("react").HTMLProps<HTMLLabelElement>, "size" | "ref" | keyof LabelKnownProps>, import("react").DetailedHTMLProps<import("react").LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, {}>;
export declare const Label: import("react").ForwardRefExoticComponent<LabelKnownProps & Omit<import("react").HTMLProps<HTMLLabelElement>, "size" | "ref" | keyof LabelKnownProps> & import("react").RefAttributes<HTMLLabelElement>>;
