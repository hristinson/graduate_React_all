import { jsx as _jsx } from "react/jsx-runtime";
import { useRef } from 'react';
import { useUpdateEffect } from 'react-use';
import { Checkbox } from '../CheckboxAndRadio';
import { Spacer } from '../Spacer';
function FieldCheckbox(props) {
    const { currentValue, items = [], name = 'CheckboxGroup', setValue } = props;
    const ref = useRef(null);
    useUpdateEffect(() => {
        currentValue.forEach(d => {
            const input = ref.current?.querySelector(`[name=${d}]`);
            if (input) {
                input.checked = true;
            }
        });
    }, [currentValue]);
    const handleChange = (event) => {
        const { target } = event;
        const nextValue = target.checked
            ? [...currentValue, target.name]
            : currentValue?.filter(d => d !== target.name);
        setValue(name, nextValue, { shouldDirty: true, shouldValidate: true });
    };
    return (_jsx(Spacer, { mb: "xs", children: items.map(d => (_jsx(Checkbox, { defaultChecked: currentValue.includes(d.name), label: d.label, name: d.name, onChange: handleChange, size: "sm" }, d.name))) }));
}
export default FieldCheckbox;
//# sourceMappingURL=Checkbox.js.map