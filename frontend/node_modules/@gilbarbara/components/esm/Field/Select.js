import { jsx as _jsx } from "react/jsx-runtime";
import { useCallback } from 'react';
import { getInputParameters } from './utils';
import { Select } from '../Select';
function FieldSelect(props) {
    const { children, id, isDirty, name, onBlur, onChange, onFocus, registration, setStatus } = props;
    const handleBlur = useCallback((event) => {
        setStatus({ isActive: false, isDirty });
        registration.onBlur(event);
        if (onBlur) {
            onBlur(event);
        }
    }, [isDirty, onBlur, registration, setStatus]);
    const handleFocus = useCallback((event) => {
        setStatus({ isActive: true });
        if (onFocus) {
            onFocus(event);
        }
    }, [onFocus, setStatus]);
    const handleChange = useCallback((event) => {
        registration.onChange(event);
        if (onChange) {
            onChange(event);
        }
    }, [onChange, registration]);
    const input = {
        ...getInputParameters(props, 'isDirty', 'registration', 'setStatus'),
        id: id || name,
        onBlur: handleBlur,
        onChange: handleChange,
        onFocus: handleFocus,
    };
    return (_jsx(Select, { ...registration, ...input, children: children }));
}
export default FieldSelect;
//# sourceMappingURL=Select.js.map