import { jsx as _jsx } from "react/jsx-runtime";
import { useCallback } from 'react';
import { Controller } from 'react-hook-form';
import is from 'is-lite';
import { Toggle } from '../Toggle';
function FieldToggle(props) {
    const { disabled, name, onChange, required, setValue } = props;
    const handleClickToggle = useCallback((status) => {
        const nextValue = !status;
        setValue(name, nextValue, {
            shouldDirty: true,
            shouldValidate: true,
        });
        if (onChange) {
            onChange(nextValue);
        }
    }, [name, onChange, setValue]);
    return (_jsx(Controller, { name: name, render: ({ field }) => (_jsx(Toggle, { checked: is.undefined(field.value) ? false : field.value, disabled: disabled, name: name, onClick: handleClickToggle })), rules: { required } }));
}
export default FieldToggle;
//# sourceMappingURL=Toggle.js.map