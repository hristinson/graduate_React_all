import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import is from 'is-lite';
/**
 * Convert primitive to string
 */
function primitiveToString(value, key) {
    if (key === 'control') {
        return `{ RHF ${key} }`;
    }
    if (is.function(value)) {
        return '{ Function }';
    }
    if (is.plainObject(value) || is.array(value)) {
        return JSON.stringify(value, null, 2);
    }
    if (is.undefined(value)) {
        return 'undefined';
    }
    return value.toString();
}
function FieldDebug(props) {
    const { debug, name } = props;
    if (!debug) {
        return null;
    }
    return (_jsxs("code", { style: { backgroundColor: '#eee', fontSize: 12, padding: 8 }, children: [_jsx("h4", { children: name }), Object.entries(props).map(([key, value]) => (_jsxs("div", { children: [_jsx("b", { children: key }), ": ", primitiveToString(value, key)] }, key)))] }));
}
export default FieldDebug;
//# sourceMappingURL=Debug.js.map