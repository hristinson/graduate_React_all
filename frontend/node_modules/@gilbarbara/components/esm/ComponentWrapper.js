import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef } from 'react';
import { css } from '@emotion/react';
import styled from '@emotion/styled';
import is from 'is-lite';
import { BoxCenter } from './Box';
import { Icon } from './Icon';
import { px } from './modules/helpers';
import { getStyledOptions, marginStyles } from './modules/system';
const StyledComponentWrapper = styled('div', getStyledOptions('prefix', 'suffix'))(props => {
    const { width = '100%' } = props;
    return css `
    position: relative;
    width: ${px(width)};
    ${marginStyles(props)};
  `;
});
export const ComponentWrapper = forwardRef((props, ref) => {
    const { children, prefix, size, suffix, ...rest } = props;
    const content = {};
    const height = is.array(size) ? size[1] : size;
    const width = is.array(size) ? size[0] : size;
    if (prefix) {
        content.prefix = (_jsx(BoxCenter, { bottom: 0, height: height, left: 0, position: "absolute", top: 0, width: width, children: is.string(prefix) ? _jsx(Icon, { name: prefix, size: 20 }) : prefix }));
    }
    if (suffix) {
        content.suffix = (_jsx(BoxCenter, { bottom: 0, height: height, position: "absolute", right: 0, top: 0, width: width, children: is.string(suffix) ? _jsx(Icon, { name: suffix, size: 20 }) : suffix }));
    }
    return (_jsxs(StyledComponentWrapper, { ref: ref, "data-component-name": "ComponentWrapper", ...rest, children: [content.prefix, children, content.suffix] }));
});
ComponentWrapper.defaultProps = {
    size: 40,
    width: '100%',
};
//# sourceMappingURL=ComponentWrapper.js.map