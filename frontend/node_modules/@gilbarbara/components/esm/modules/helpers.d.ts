import { ReactElement, ReactNode } from 'react';
import { AnyObject, StringOrNumber } from '@gilbarbara/types';
import { PartialDeep } from 'type-fest';
import { BaseProps, GetElementPropertyOptions, MediaQueries, RecursiveChildrenEnhancerOptions, ResponsiveInput, ResponsiveSizes, Shades, Theme, Variants } from '../types';
export declare function clearNumber(value: string): string;
/**
 * Generate the media query
 */
export declare function createMediaQuery(size: ResponsiveSizes, mediaQueries: MediaQueries): string;
/**
 * Get color from theme
 */
export declare function getColorVariant(variant: Variants, shade?: Shades, variants?: Theme['variants']): {
    bg: string;
    color: string;
};
export declare function getElementProperty(element: ReactElement, options: GetElementPropertyOptions): string | null;
export declare function getMediaQueries(): MediaQueries;
export declare function getTheme(props: BaseProps): Theme;
export declare function isCSSUnit(value: unknown): value is string;
export declare function mergeTheme(customTheme?: PartialDeep<Theme>): Theme;
export declare function px(value: StringOrNumber | undefined): string | undefined;
export declare function recursiveChildrenEnhancer(children: ReactNode, props: AnyObject, options: RecursiveChildrenEnhancerOptions): ReactNode;
/**
 * Helper to generate responsive media queries
 */
export declare function responsive(rules: ResponsiveInput): import("@emotion/utils").SerializedStyles;
