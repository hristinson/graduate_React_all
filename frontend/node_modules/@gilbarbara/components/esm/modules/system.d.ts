import { CSSObject } from '@emotion/react';
import { StringOrNumber } from '@gilbarbara/types';
import { WithAlign, WithBorder, WithBorderless, WithColor, WithDisplay, WithElementSpacing, WithFlexBox, WithFlexItem, WithInvert, WithLayout, WithMargin, WithPadding, WithPositioning, WithRadius, WithShadow, WithTextColor, WithTextOptions, WithTheme, WithTransparent } from '../types';
export declare function getStyledOptions(...exclude: string[]): {
    shouldForwardProp: (prop: string) => boolean;
};
export declare function isDarkMode(props: WithTheme): boolean;
export declare function alignStyles<T extends WithAlign>(props: T): CSSObject;
export declare const appearanceStyles: CSSObject;
export declare function backgroundStyles<T extends WithColor & WithInvert & WithTransparent & WithTheme>(props: T, withBorder?: boolean): CSSObject;
export declare function baseStyles<T extends WithColor & WithTheme>(props: T): CSSObject;
export declare function borderStyles<T extends WithBorder & WithTheme>(props: T): CSSObject;
export declare const buttonStyles: CSSObject;
export declare function colorStyles<T extends WithColor & WithTheme>(props: T): CSSObject;
export declare function displayStyles<T extends WithDisplay>(props: T): CSSObject;
export declare function flexBoxStyles<T extends WithFlexBox>(props: T): CSSObject;
export declare function flexItemStyles<T extends WithFlexItem>(props: T): CSSObject;
export declare function inputStyles<T extends WithTheme & WithBorderless & WithElementSpacing & {
    large?: boolean;
    multiple?: boolean;
    width?: StringOrNumber;
}>(props: T, type: 'input' | 'select' | 'textarea'): import("@emotion/utils").SerializedStyles;
export declare function layoutStyles<T extends WithLayout>(props: T): CSSObject;
export declare function marginStyles<T extends WithMargin & WithTheme>(props: T): CSSObject;
export declare function outlineStyles<T extends WithTheme>(props: T): CSSObject;
export declare function paddingStyles<T extends WithPadding>(props: T, force?: boolean): CSSObject;
export declare function positioningStyles<T extends WithPositioning>(props: T): CSSObject;
export declare function radiusStyles<T extends WithRadius & WithTheme>(props: T): CSSObject;
export declare function shadowStyles<T extends WithShadow & WithTheme>(props: T): CSSObject;
export declare function textColorStyles<T extends WithTextColor & WithTheme>(props: T): CSSObject;
export declare function textStyles<T extends WithTextOptions & WithTheme>(props: T, lineHeightCustom?: StringOrNumber): CSSObject;
