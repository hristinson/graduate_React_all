import { jsx as _jsx } from "react/jsx-runtime";
import { Children, cloneElement } from 'react';
import { css } from '@emotion/react';
import styled from '@emotion/styled';
import { baseStyles, getStyledOptions } from './modules/system';
export const StyledButtonGroup = styled('div', getStyledOptions())(props => css `
    ${baseStyles(props)};
    display: inline-flex;

    > button {
      + button {
        margin-left: -1px;
      }

      &:first-of-type {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
      }

      &:last-of-type {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
      }

      &:not(:first-of-type):not(:last-of-type) {
        border-radius: 0;
      }
    }
  `);
export function ButtonGroup(props) {
    const { children, shade, size, variant, ...rest } = props;
    const buttonProps = {
        shade,
        size,
        variant,
    };
    return (_jsx(StyledButtonGroup, { "data-component-name": "ButtonGroup", ...rest, children: Children.map(children, child => cloneElement(child, { ...buttonProps })) }));
}
ButtonGroup.defaultProps = {
    shade: 'mid',
    size: 'md',
    variant: 'primary',
};
//# sourceMappingURL=ButtonGroup.js.map