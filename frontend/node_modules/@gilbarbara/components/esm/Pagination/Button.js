import { jsx as _jsx } from "react/jsx-runtime";
import { css } from '@emotion/react';
import styled from '@emotion/styled';
import { ButtonBase } from '../ButtonBase';
import { getTheme } from '../modules/helpers';
import { getStyledOptions, isDarkMode } from '../modules/system';
const StyledPaginationButton = styled(ButtonBase, getStyledOptions())(props => {
    const { current } = props;
    const { black, spacing, typography, variants, white } = getTheme(props);
    const color = isDarkMode(props) ? white : black;
    return css `
    align-items: center;
    border-radius: 50%;
    background-color: ${current ? variants.primary.mid.bg : 'transparent'};
    color: ${current ? variants.primary.mid.color : color};
    display: flex;
    font-size: ${typography.mid.fontSize};
    font-weight: ${700};
    justify-content: center;
    height: ${spacing.xl};
    line-height: 1;
    width: ${spacing.xl};

    &:disabled {
      opacity: 0.3;
      pointer-events: none;
    }
  `;
});
export default function PaginationButton(props) {
    const { children, currentPage, disabled, onClick, page } = props;
    return (_jsx(StyledPaginationButton, { current: page === currentPage && children === page, "data-page": page, disabled: disabled, onClick: onClick, children: children || page }));
}
//# sourceMappingURL=Button.js.map