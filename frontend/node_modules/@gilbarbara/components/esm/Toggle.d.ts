import { ReactNode } from 'react';
import { ComponentProps, StyledProps, WithColor } from './types';
export interface ToggleKnownProps extends StyledProps, WithColor {
    /**
     * Initial status (uncontrolled mode)
     * @default false
     */
    /** Status (controlled mode) */
    checked?: boolean;
    defaultChecked?: boolean;
    disabled?: boolean;
    label?: ReactNode;
    name: string;
    onChange?: (value: boolean) => void;
    onClick?: (value: boolean) => void;
}
export declare type ToggleProps = ComponentProps<HTMLDivElement, ToggleKnownProps>;
export declare const StyledToggle: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & ToggleKnownProps & Omit<import("react").HTMLProps<HTMLDivElement>, "size" | "ref" | keyof ToggleKnownProps>, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const Toggle: import("react").ForwardRefExoticComponent<ToggleKnownProps & Omit<import("react").HTMLProps<HTMLDivElement>, "size" | "ref" | keyof ToggleKnownProps> & import("react").RefAttributes<HTMLInputElement>>;
