import { ChangeEventHandler, KeyboardEvent } from 'react';
import { CheckboxItem, ComponentProps, RadioItem, StyledProps, WithComponentSize, WithFlexBox, WithMargin } from '../types';
export interface SharedProps extends StyledProps, WithComponentSize, WithMargin {
    /** @default center */
    align?: WithFlexBox['align'];
    name: string;
    onChange?: ChangeEventHandler<HTMLInputElement>;
}
export declare type CheckboxProps = ComponentProps<HTMLInputElement, SharedProps & CheckboxItem>;
export declare type RadioProps = ComponentProps<HTMLInputElement, SharedProps & RadioItem>;
interface InnerProps extends Omit<CheckboxProps, 'name' | 'value'>, Omit<RadioProps, 'name' | 'value'> {
    category?: 'checkbox' | 'radio';
}
export declare const StyledCheckboxRadioInput: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
}, import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, {}>;
export declare const StyledText: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & InnerProps, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, {}>;
export declare const StyledElement: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & InnerProps, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, {}>;
export declare const StyledLabel: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & InnerProps, import("react").DetailedHTMLProps<import("react").LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, {}>;
export declare function getMarginProps(props: CheckboxProps | RadioProps): Pick<CheckboxProps | RadioProps, "margin" | "mb" | "ml" | "mr" | "mt" | "mx" | "my">;
export declare function handleKeyDown(event: KeyboardEvent<HTMLSpanElement>): void;
export {};
