import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef } from 'react';
import { getMarginProps, handleKeyDown, StyledCheckboxRadioInput, StyledElement, StyledLabel, StyledText, } from './utils';
/**
 * Use the RadioGroup component instead of this.
 * RadioGroup accepts an `items` prop that render this component in a group and is responsible for managing state and interactions.
 */
export const Radio = forwardRef((props, ref) => {
    const { align, checked, defaultChecked, id, label, name, size, style, ...rest } = props;
    return (_jsxs(StyledLabel, { align: align, category: "radio", "data-component-name": "Radio", htmlFor: id, ...getMarginProps(props), children: [_jsx(StyledCheckboxRadioInput, { ref: ref, "aria-checked": !!(checked || defaultChecked), checked: checked, defaultChecked: defaultChecked, id: id, name: name, role: "radio", type: "radio", ...rest }), _jsx(StyledElement, { category: "radio", label: label, onKeyDown: handleKeyDown, size: size, style: style, tabIndex: props.disabled ? -1 : 0 }), label && (_jsx(StyledText, { category: "radio", size: size, children: label }))] }));
});
Radio.defaultProps = {
    align: 'center',
    disabled: false,
    size: 'md',
};
//# sourceMappingURL=Radio.js.map