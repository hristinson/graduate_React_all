import { ButtonHTMLAttributes } from 'react';
import { ComponentProps, StyledProps, WithBusy, WithChildren, WithColor, WithMargin, WithPadding, WithTextOptions } from './types';
export interface ButtonBaseKnownProps extends StyledProps, WithBusy, WithChildren, WithColor, WithMargin, WithPadding, WithTextOptions {
    type?: ButtonHTMLAttributes<HTMLButtonElement>['type'];
}
export declare type ButtonBaseProps = ComponentProps<HTMLButtonElement, ButtonBaseKnownProps>;
export declare const StyledButtonBase: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & ButtonBaseKnownProps & Omit<import("react").HTMLProps<HTMLButtonElement>, "ref" | keyof ButtonBaseKnownProps>, import("react").DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, {}>;
export declare const ButtonBase: import("react").ForwardRefExoticComponent<ButtonBaseKnownProps & Omit<import("react").HTMLProps<HTMLButtonElement>, "ref" | keyof ButtonBaseKnownProps> & import("react").RefAttributes<HTMLButtonElement>>;
