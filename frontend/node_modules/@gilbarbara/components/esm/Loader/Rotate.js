import { jsx as _jsx } from "react/jsx-runtime";
import { css, keyframes } from '@emotion/react';
import styled from '@emotion/styled';
import { rotate } from '../modules/animations';
import { getColorVariant, getTheme, px } from '../modules/helpers';
import { getStyledOptions, isDarkMode } from '../modules/system';
const dash = keyframes `
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -35px;
  }

  100% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -124px;
  }
`;
const StyledLoaderRotate = styled('div', getStyledOptions())(props => {
    const { block } = props;
    const { spacing } = getTheme(props);
    return css `
    display: ${block ? 'flex' : 'inline-flex'};
    margin: ${block ? spacing.lg : 0} auto;
    text-align: center;
  `;
});
const StyledLoaderRotateSVG = styled('svg', getStyledOptions())(props => {
    const { size } = props;
    return css `
    animation: ${rotate} 2s linear infinite;
    height: ${px(size)};
    margin: auto;
    transform-origin: center center;
    width: ${px(size)};
  `;
});
const StyledLoaderRotateCircle = styled('circle', getStyledOptions()) `
  animation: ${dash} 1.5s infinite ease-in-out;
  stroke: ${props => props.color};
  stroke-dasharray: 1, 200;
  stroke-dashoffset: 0;
  stroke-linecap: round;
`;
export default function LoaderRotate(props) {
    const { color, shade, size = 32, variant } = props;
    const { darkColor, lightColor, variants } = getTheme(props);
    const darkMode = isDarkMode(props);
    let variantColor = darkMode ? lightColor : darkColor;
    if (variant) {
        variantColor = getColorVariant(variant, shade, variants).bg;
    }
    return (_jsx(StyledLoaderRotate, { "data-component-name": "LoaderRotate", ...props, children: _jsx(StyledLoaderRotateSVG, { size: size, viewBox: "25 25 50 50", children: _jsx(StyledLoaderRotateCircle, { color: color || variantColor, cx: "50", cy: "50", fill: "none", r: "20", strokeWidth: 2 }) }) }));
}
//# sourceMappingURL=Rotate.js.map