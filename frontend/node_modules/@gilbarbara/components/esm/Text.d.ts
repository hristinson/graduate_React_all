/// <reference types="react" />
import { ComponentProps, StyledProps, WithChildren, WithColor, WithTextOptions } from './types';
export interface TextKnownProps extends StyledProps, WithChildren, WithColor, WithTextOptions {
}
export declare type TextProps = ComponentProps<HTMLSpanElement, TextKnownProps>;
export declare const StyledText: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & TextKnownProps & Omit<import("react").HTMLProps<HTMLSpanElement>, "ref" | keyof TextKnownProps>, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, {}>;
export declare const Text: import("react").ForwardRefExoticComponent<TextKnownProps & Omit<import("react").HTMLProps<HTMLSpanElement>, "ref" | keyof TextKnownProps> & import("react").RefAttributes<HTMLSpanElement>>;
