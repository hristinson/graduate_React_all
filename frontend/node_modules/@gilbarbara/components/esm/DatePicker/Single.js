import { jsx as _jsx } from "react/jsx-runtime";
import { useState } from 'react';
import { DayPicker } from 'react-day-picker';
import styled from '@emotion/styled';
import { omit } from '@gilbarbara/helpers';
import { defaultProps, getFooter, getRange, getStyles } from './utils';
import { getStyledOptions } from '../modules/system';
const StyledDatePicker = styled('div', getStyledOptions())(props => {
    return getStyles(props);
});
export function DatePicker(props) {
    const { currentMonthLabel, fromDate, onSelect, toDate, variant, ...rest } = props;
    const [selected, setSelected] = useState(undefined);
    const [month, setMonth] = useState(undefined);
    const handleSelect = (_day, selectedDay, modifiers) => {
        if (modifiers.disabled || modifiers.outside) {
            return;
        }
        let nextDate = selectedDay;
        if (selected && selected.toISOString() === selectedDay.toISOString()) {
            nextDate = undefined;
        }
        setSelected(nextDate);
        if (onSelect) {
            onSelect(nextDate ? selectedDay.toISOString() : '');
        }
    };
    return (_jsx(StyledDatePicker, { "data-component-name": "DatePicker", ...omit(props, 'hidden', 'onDayClick', 'onSelect'), children: _jsx(DayPicker, { footer: getFooter(setMonth, currentMonthLabel), mode: "single", month: month, onMonthChange: setMonth, onSelect: handleSelect, selected: selected, ...getRange(fromDate, toDate), ...rest }) }));
}
DatePicker.defaultProps = defaultProps;
//# sourceMappingURL=Single.js.map