"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Container = exports.StyledContainer = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const helpers_1 = require("./modules/helpers");
const system_1 = require("./modules/system");
const flexMap = {
    center: 'center',
    right: 'flex-end',
    left: 'flex-start',
    stretch: 'stretch',
};
exports.StyledContainer = (0, styled_1.default)('div', (0, system_1.getStyledOptions)())(props => {
    const { align = 'left', fullScreen, fullScreenOffset, responsive, textAlign, verticalAlign, verticalPadding, } = props;
    const { spacing } = (0, helpers_1.getTheme)(props);
    const styles = {
        alignItems: flexMap[align],
        justifyContent: verticalAlign,
        textAlign,
    };
    if (fullScreen) {
        styles.minHeight = fullScreenOffset ? `calc(100vh - ${(0, helpers_1.px)(fullScreenOffset)})` : '100vh';
    }
    return (0, react_2.css) `
    ${(0, system_1.baseStyles)(props)};
    display: flex;
    flex-direction: column;
    margin-left: auto;
    margin-right: auto;
    padding-left: ${spacing.md};
    padding-right: ${spacing.md};
    ${responsive &&
        (0, helpers_1.responsive)({
            lg: {
                paddingLeft: spacing.xl,
                paddingRight: spacing.xl,
            },
        })};
    ${verticalPadding &&
        (0, react_2.css) `
      padding-bottom: ${spacing.md};
      padding-top: ${spacing.md};
    `};
    ${responsive &&
        verticalPadding &&
        (0, helpers_1.responsive)({
            lg: {
                paddingBottom: spacing.xl,
                paddingTop: spacing.xl,
            },
        })}
    position: relative;
    width: 100%;
    ${(0, react_2.css)(styles)};

    ${(0, system_1.marginStyles)(props)};
    ${(0, system_1.paddingStyles)(props, true)};
  `;
});
exports.Container = (0, react_1.forwardRef)((props, ref) => {
    return (0, jsx_runtime_1.jsx)(exports.StyledContainer, { ref: ref, "data-component-name": "Container", ...props });
});
exports.Container.defaultProps = {
    align: 'stretch',
    fullScreen: false,
    responsive: true,
    textAlign: 'left',
    verticalAlign: 'start',
    verticalPadding: false,
};
//# sourceMappingURL=Container.js.map