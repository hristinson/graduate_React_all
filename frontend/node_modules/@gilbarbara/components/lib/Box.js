"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BoxInline = exports.BoxCenter = exports.Box = exports.StyledBox = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const system_1 = require("./modules/system");
exports.StyledBox = (0, styled_1.default)('div', (0, system_1.getStyledOptions)('fill'))(props => {
    const { flexBox } = props;
    return (0, react_2.css) `
    display: ${flexBox ? 'flex' : undefined};
    ${(0, system_1.baseStyles)(props)};
    ${(0, system_1.backgroundStyles)(props, false)};
    ${(0, system_1.borderStyles)(props)};
    ${(0, system_1.flexBoxStyles)(props)};
    ${(0, system_1.flexItemStyles)(props)};
    ${(0, system_1.layoutStyles)(props)};
    ${(0, system_1.marginStyles)(props)};
    ${(0, system_1.paddingStyles)(props)};
    ${(0, system_1.positioningStyles)(props)};
    ${(0, system_1.radiusStyles)(props)};
    ${(0, system_1.shadowStyles)(props)};
    ${(0, system_1.textColorStyles)(props)};
  `;
});
/**
 * A container that lays out its contents using "block" (default) or "flex" (with the display prop).
 */
exports.Box = (0, react_1.forwardRef)((props, ref) => {
    const { children, ...rest } = props;
    return ((0, jsx_runtime_1.jsx)(exports.StyledBox, { ref: ref, "data-component-name": "Box", ...rest, children: children }));
});
exports.Box.defaultProps = {
    flexBox: false,
};
exports.BoxCenter = (0, react_1.forwardRef)((props, ref) => ((0, jsx_runtime_1.jsx)(exports.StyledBox, { ref: ref, "data-component-name": "BoxCenter", ...props })));
exports.BoxCenter.defaultProps = {
    align: 'center',
    direction: 'column',
    display: 'flex',
    justify: 'center',
};
exports.BoxInline = (0, react_1.forwardRef)((props, ref) => ((0, jsx_runtime_1.jsx)(exports.StyledBox, { ref: ref, as: "span", "data-component-name": "BoxInline", ...props })));
exports.BoxInline.defaultProps = {
    align: 'center',
    direction: 'row',
    display: 'inline-flex',
};
//# sourceMappingURL=Box.js.map