"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProgressBar = exports.StyledProgressBar = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const helpers_1 = require("@gilbarbara/helpers");
const helpers_2 = require("./modules/helpers");
const system_1 = require("./modules/system");
const Paragraph_1 = require("./Paragraph");
exports.StyledProgressBar = (0, styled_1.default)('div', (0, system_1.getStyledOptions)())(props => {
    const { width = '100%' } = props;
    const { grayLight } = (0, helpers_2.getTheme)(props);
    return (0, react_2.css) `
    ${(0, system_1.baseStyles)(props)};
    color: ${(0, system_1.isDarkMode)(props) && grayLight};
    width: ${(0, helpers_2.px)(width)};
    ${(0, system_1.marginStyles)(props)};
  `;
});
const StyledProgressTrack = (0, styled_1.default)('div', (0, system_1.getStyledOptions)())(props => {
    const { backgroundShade = 'light', large, shade, variant = 'primary' } = props;
    const { radius, variants } = (0, helpers_2.getTheme)(props);
    const { bg } = (0, helpers_2.getColorVariant)(variant, shade, variants);
    const height = large ? '8px' : '4px';
    return (0, react_2.css) `
    background-color: ${variants.gray[backgroundShade].bg};
    border-radius: ${large ? radius.xs : radius.xxs};
    line-height: 1;
    height: ${height};
    overflow: hidden;

    > div {
      background-color: ${bg};
      height: ${height};
      transition: width 0.4s;
      width: 0;
    }
  `;
});
exports.ProgressBar = (0, react_1.forwardRef)((props, ref) => {
    const { hideText, step, steps } = props;
    const percentage = (0, helpers_1.round)((0, helpers_1.rangeLimit)((step / steps) * 100));
    const stepLimit = (0, helpers_1.rangeLimit)(step, 0, steps);
    return ((0, jsx_runtime_1.jsxs)(exports.StyledProgressBar, { ref: ref, ...props, "aria-valuemax": 100, "aria-valuemin": 0, "aria-valuenow": percentage, "data-component-name": "ProgressBar", role: "progressbar", children: [!hideText && (0, jsx_runtime_1.jsx)(Paragraph_1.Paragraph, { mb: "xs", size: "large", children: `Step ${stepLimit} of ${steps}` }), (0, jsx_runtime_1.jsx)(StyledProgressTrack, { ...props, children: (0, jsx_runtime_1.jsx)("div", { style: { width: `${percentage}%` } }) })] }));
});
exports.ProgressBar.defaultProps = {
    backgroundShade: 'light',
    hideText: false,
    large: false,
    shade: 'mid',
    variant: 'primary',
    width: '100%',
};
//# sourceMappingURL=ProgressBar.js.map