"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Radio = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const utils_1 = require("./utils");
/**
 * Use the RadioGroup component instead of this.
 * RadioGroup accepts an `items` prop that render this component in a group and is responsible for managing state and interactions.
 */
exports.Radio = (0, react_1.forwardRef)((props, ref) => {
    const { align, checked, defaultChecked, id, label, name, size, style, ...rest } = props;
    return ((0, jsx_runtime_1.jsxs)(utils_1.StyledLabel, { align: align, category: "radio", "data-component-name": "Radio", htmlFor: id, ...(0, utils_1.getMarginProps)(props), children: [(0, jsx_runtime_1.jsx)(utils_1.StyledCheckboxRadioInput, { ref: ref, "aria-checked": !!(checked || defaultChecked), checked: checked, defaultChecked: defaultChecked, id: id, name: name, role: "radio", type: "radio", ...rest }), (0, jsx_runtime_1.jsx)(utils_1.StyledElement, { category: "radio", label: label, onKeyDown: utils_1.handleKeyDown, size: size, style: style, tabIndex: props.disabled ? -1 : 0 }), label && ((0, jsx_runtime_1.jsx)(utils_1.StyledText, { category: "radio", size: size, children: label }))] }));
});
exports.Radio.defaultProps = {
    align: 'center',
    disabled: false,
    size: 'md',
};
//# sourceMappingURL=Radio.js.map