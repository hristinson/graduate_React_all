"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const ButtonBase_1 = require("../ButtonBase");
const helpers_1 = require("../modules/helpers");
const system_1 = require("../modules/system");
const StyledPaginationButton = (0, styled_1.default)(ButtonBase_1.ButtonBase, (0, system_1.getStyledOptions)())(props => {
    const { current } = props;
    const { black, spacing, typography, variants, white } = (0, helpers_1.getTheme)(props);
    const color = (0, system_1.isDarkMode)(props) ? white : black;
    return (0, react_1.css) `
    align-items: center;
    border-radius: 50%;
    background-color: ${current ? variants.primary.mid.bg : 'transparent'};
    color: ${current ? variants.primary.mid.color : color};
    display: flex;
    font-size: ${typography.mid.fontSize};
    font-weight: ${700};
    justify-content: center;
    height: ${spacing.xl};
    line-height: 1;
    width: ${spacing.xl};

    &:disabled {
      opacity: 0.3;
      pointer-events: none;
    }
  `;
});
function PaginationButton(props) {
    const { children, currentPage, disabled, onClick, page } = props;
    return ((0, jsx_runtime_1.jsx)(StyledPaginationButton, { current: page === currentPage && children === page, "data-page": page, disabled: disabled, onClick: onClick, children: children || page }));
}
exports.default = PaginationButton;
//# sourceMappingURL=Button.js.map