"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Select = exports.StyledSelect = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_merge_refs_1 = require("react-merge-refs");
const react_use_1 = require("react-use");
const react_2 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const is_lite_1 = require("is-lite");
const helpers_1 = require("./modules/helpers");
const system_1 = require("./modules/system");
exports.StyledSelect = (0, styled_1.default)('select', (0, system_1.getStyledOptions)())(props => {
    const { filled, large, multiple } = props;
    const { colors, darkColor, darkMode, grayMid, spacing, white } = (0, helpers_1.getTheme)(props);
    let color = grayMid;
    const paddingY = large ? spacing.sm : spacing.xs;
    if (filled) {
        color = darkMode ? white : darkColor;
    }
    if (multiple) {
        color = grayMid;
    }
    return (0, react_2.css) `
    ${system_1.appearanceStyles};
    ${(0, system_1.baseStyles)(props)};
    background-image: url('${`data:image/svg+xml,%3Csvg height="16px" version="1.1" viewBox="0 0 16 16" width="16px" xmlns="http://www.w3.org/2000/svg" %3E%3Cpath d="M14,5.52466366 C14,5.41704038 13.9641256,5.32735426 13.8923766,5.25560543 L13.3004484,4.60986548 C13.1928251,4.53811658 13.0852018,4.50224213 12.9775785,4.50224213 C12.8699551,4.50224213 12.7802691,4.53811658 12.7085202,4.60986548 L8.02690583,9.3452915 L3.29147982,4.60986548 C3.21973094,4.53811658 3.13004485,4.50224213 3.02242152,4.50224213 C2.91479821,4.50224213 2.82511211,4.53811658 2.75336323,4.60986548 L2.10762332,5.25560543 C2.03587444,5.32735426 2,5.41704038 2,5.52466366 C2,5.63228701 2.03587444,5.72197313 2.10762332,5.79372196 L7.70403588,11.3901345 C7.81165919,11.4618834 7.91928251,11.4977579 8.02690583,11.4977579 C8.13452915,11.4977579 8.22421524,11.4618834 8.29596412,11.3901345 L13.8923766,5.79372196 C13.9641256,5.72197313 14,5.63228701 14,5.52466366 Z" fill="${color.replace('#', '%23')}" /%3E%3C/svg%3E`}');
    background-repeat: no-repeat;
    background-position: right 12px center;
    ${(0, system_1.inputStyles)(props, 'select')};
    color: ${color};

    ${filled &&
        (0, react_2.css) `
      border-color: ${colors.primary};
    `};

    &[multiple] {
      padding: 0;

      > option {
        padding: ${paddingY} ${spacing.md};

        &:not(:checked) {
          background: ${`${white} linear-gradient(0deg, ${white} 0%, ${white} 100%)`};
        }

        &:checked {
          background: ${`${colors.primary} linear-gradient(0deg, ${colors.primary} 0%, ${colors.primary} 100%)`};
          color: ${white};
          font-weight: bold;
        }
      }
    }
  `;
});
exports.Select = (0, react_1.forwardRef)((props, ref) => {
    const { defaultValue, name, onChange, value } = props;
    const localRef = (0, react_1.useRef)(null);
    const [isFilled, setFilled] = (0, react_1.useState)(!!defaultValue || !!value);
    (0, react_use_1.useMount)(() => {
        setFilled(!!localRef.current?.value);
    });
    const handleChange = (0, react_1.useCallback)((event) => {
        setFilled(!!event.target.value);
        if (is_lite_1.default.function(onChange)) {
            onChange(event);
        }
    }, [onChange]);
    return ((0, jsx_runtime_1.jsx)(exports.StyledSelect, { ref: (0, react_merge_refs_1.default)([localRef, ref]), "data-component-name": "Select", filled: isFilled, id: name, ...props, onChange: handleChange }));
});
exports.Select.defaultProps = {
    borderless: false,
    disabled: false,
    large: false,
    multiple: false,
    prefixSpacing: false,
    width: '100%',
};
//# sourceMappingURL=Select.js.map