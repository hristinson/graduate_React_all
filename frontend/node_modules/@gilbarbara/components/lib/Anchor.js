"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Anchor = exports.StyledAnchor = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const Icon_1 = require("./Icon");
const system_1 = require("./modules/system");
exports.StyledAnchor = (0, styled_1.default)('a', (0, system_1.getStyledOptions)())(props => {
    const { hideDecoration } = props;
    return (0, react_2.css) `
    ${system_1.appearanceStyles};
    ${(0, system_1.baseStyles)(props)};
    align-items: center;
    color: inherit;
    cursor: pointer;
    font-family: inherit;
    line-height: 1;
    padding: 0;
    text-decoration: ${hideDecoration ? 'none' : 'underline'};
    ${(0, system_1.colorStyles)(props)};
    ${(0, system_1.displayStyles)(props)};
    ${(0, system_1.marginStyles)(props)};
    ${(0, system_1.paddingStyles)(props)};
    ${(0, system_1.textStyles)(props)};
  `;
});
exports.Anchor = (0, react_1.forwardRef)((props, ref) => {
    const { children, external, iconAfter, iconBefore } = props;
    const { fontSize } = (0, system_1.textStyles)(props);
    let iconSize;
    if (fontSize) {
        iconSize = parseInt(`${fontSize}`, 10);
    }
    const addtionalProps = {};
    if (external) {
        addtionalProps.rel = 'noopener noreferrer';
        addtionalProps.target = '_blank';
    }
    return ((0, jsx_runtime_1.jsxs)(exports.StyledAnchor, { ref: ref, "data-component-name": "Anchor", ...addtionalProps, ...props, children: [iconBefore && (0, jsx_runtime_1.jsx)(Icon_1.Icon, { mr: "xxs", name: iconBefore, size: iconSize }), (0, jsx_runtime_1.jsx)("span", { children: children }), iconAfter && (0, jsx_runtime_1.jsx)(Icon_1.Icon, { ml: "xxs", name: iconAfter, size: iconSize })] }));
});
exports.Anchor.defaultProps = {
    bold: false,
    display: 'inline-flex',
    external: false,
    hideDecoration: false,
    shade: 'mid',
    variant: 'primary',
};
//# sourceMappingURL=Anchor.js.map