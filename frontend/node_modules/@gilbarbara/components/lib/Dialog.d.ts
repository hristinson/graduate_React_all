import { CSSProperties, ReactNode } from 'react';
import { StringOrNumber } from '@gilbarbara/types';
import { PortalProps } from './Portal';
import { Alignment, ColorVariants, StyledProps, WithBorder, WithPadding, WithRadius, WithShadow } from './types';
export interface DialogProps extends StyledProps, WithBorder, WithPadding, WithRadius, WithShadow, Omit<PortalProps, 'children' | 'isActive' | 'showCloseButton'> {
    buttonCancelText?: string;
    buttonConfirmText?: string;
    /** @default ltr */
    buttonOrder?: 'ltr' | 'rtl';
    content: ReactNode;
    isActive: boolean;
    onClickCancel: () => void;
    onClickConfirmation: () => void;
    style?: CSSProperties;
    /** @default left */
    textAlign?: Alignment;
    title: ReactNode;
    /** @default primary */
    variant?: ColorVariants;
    /** @default 380 */
    width?: StringOrNumber;
}
export declare function Dialog(props: DialogProps): JSX.Element;
export declare namespace Dialog {
    var defaultProps: {
        buttonCancelText: string;
        buttonConfirmText: string;
        buttonOrder: string;
        closeOnClickOverlay: boolean;
        closeOnEsc: boolean;
        hideOverlay: boolean;
        padding: string;
        radius: string;
        shadow: string;
        textAlign: string;
        variant: string;
        width: number;
    };
}
