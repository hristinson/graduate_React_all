"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const Box_1 = require("../Box");
const ButtonBase_1 = require("../ButtonBase");
const Icon_1 = require("../Icon");
const helpers_1 = require("../modules/helpers");
const system_1 = require("../modules/system");
const Title = (0, styled_1.default)(ButtonBase_1.ButtonBase, (0, system_1.getStyledOptions)())(props => {
    const { disableSort, isDisabled } = props;
    return (0, react_2.css) `
    align-items: center;
    display: flex;
    pointer-events: ${disableSort || isDisabled ? 'none' : 'all'};
  `;
});
function DataTableHead(props) {
    const { clean, columns, isDisabled, isResponsive, onClick, sortBy, sortDirection } = props;
    const { colors } = (0, helpers_1.getTheme)({ theme: (0, react_2.useTheme)() });
    if (isResponsive) {
        return null;
    }
    return ((0, jsx_runtime_1.jsx)(Box_1.Box, { "data-component-name": "DataTableHead", display: "flex", children: columns.map(({ disableSort, key, max, min, size, title }) => {
            let icon;
            if (!disableSort) {
                icon = (0, jsx_runtime_1.jsx)(Icon_1.Icon, { ml: "xxs", name: "sort", size: 20 });
                if (key === sortBy) {
                    icon =
                        sortDirection === 'asc' ? ((0, jsx_runtime_1.jsx)(Icon_1.Icon, { color: colors.primary, ml: "xxs", name: "sort-asc", size: 20 })) : ((0, jsx_runtime_1.jsx)(Icon_1.Icon, { color: colors.primary, ml: "xxs", name: "sort-desc", size: 20 }));
                }
            }
            return ((0, jsx_runtime_1.jsx)(Box_1.Box, { align: "center", "data-component-name": "DataTableHeadColumn", direction: "row", flex: "grow", maxWidth: max || size, mb: "sm", minWidth: min || size, pr: clean ? 'sm' : undefined, px: !clean ? 'md' : undefined, children: title && ((0, jsx_runtime_1.jsxs)(Title, { "data-direction": sortDirection, "data-name": key, disableSort: disableSort, isDisabled: isDisabled, onClick: onClick, children: [title, icon] })) }, key));
        }) }));
}
exports.default = (0, react_1.memo)(DataTableHead);
//# sourceMappingURL=Head.js.map