"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_use_1 = require("react-use");
const CheckboxAndRadio_1 = require("../CheckboxAndRadio");
const Spacer_1 = require("../Spacer");
function FieldCheckbox(props) {
    const { currentValue, items = [], name = 'CheckboxGroup', setValue } = props;
    const ref = (0, react_1.useRef)(null);
    (0, react_use_1.useUpdateEffect)(() => {
        currentValue.forEach(d => {
            const input = ref.current?.querySelector(`[name=${d}]`);
            if (input) {
                input.checked = true;
            }
        });
    }, [currentValue]);
    const handleChange = (event) => {
        const { target } = event;
        const nextValue = target.checked
            ? [...currentValue, target.name]
            : currentValue?.filter(d => d !== target.name);
        setValue(name, nextValue, { shouldDirty: true, shouldValidate: true });
    };
    return ((0, jsx_runtime_1.jsx)(Spacer_1.Spacer, { mb: "xs", children: items.map(d => ((0, jsx_runtime_1.jsx)(CheckboxAndRadio_1.Checkbox, { defaultChecked: currentValue.includes(d.name), label: d.label, name: d.name, onChange: handleChange, size: "sm" }, d.name))) }));
}
exports.default = FieldCheckbox;
//# sourceMappingURL=Checkbox.js.map