"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuItem = exports.MenuDivider = exports.Menu = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_merge_refs_1 = require("react-merge-refs");
const react_use_1 = require("react-use");
const react_2 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const is_lite_1 = require("is-lite");
const Item_1 = require("./Item");
const ButtonBase_1 = require("../ButtonBase");
const Icon_1 = require("../Icon");
const helpers_1 = require("../modules/helpers");
const system_1 = require("../modules/system");
const theme_1 = require("../modules/theme");
const StyledMenu = styled_1.default.div `
  display: inline-flex;
  position: relative;
  vertical-align: middle;
`;
const StyledMenuItems = (0, styled_1.default)('div', (0, system_1.getStyledOptions)())(props => {
    const { active, minWidth, position } = props;
    const [positionMain, positionCross] = position.split('-');
    const { grayDarker, grayScale, radius, shadow, spacing, white } = (0, helpers_1.getTheme)(props);
    const darkMode = (0, system_1.isDarkMode)(props);
    return (0, react_2.css) `
    position: absolute;
    transform: scaleY(0);
    transition: transform 0.3s ${theme_1.easing};
    z-index: 10;

    ${active &&
        (0, react_2.css) `
      transform: scaleY(1);
    `}

    ${positionMain === 'bottom' &&
        (0, react_2.css) `
      top: 100%;
      transform-origin: top;
    `}

    ${positionMain === 'left' &&
        (0, react_2.css) `
      right: 100%;
    `}

    ${positionMain === 'right' &&
        (0, react_2.css) `
      left: 100%;
    `}

    ${positionMain === 'top' &&
        (0, react_2.css) `
      bottom: 100%;
      transform-origin: bottom;
    `}

    ${positionCross === 'bottom' &&
        (0, react_2.css) `
      bottom: 0;
      transform-origin: bottom;
    `}

    ${positionCross === 'left' &&
        (0, react_2.css) `
      left: 0;
    `}

    ${positionCross === 'right' &&
        (0, react_2.css) `
      right: 0;
    `}

    ${positionCross === 'top' &&
        (0, react_2.css) `
      top: 0;
      transform-origin: top;
    `}

  > div {
      background-color: ${darkMode ? grayDarker : white};
      border-radius: ${radius.xxs};
      box-shadow: ${shadow.low};
      color: ${darkMode ? grayScale['20'] : grayDarker};
      min-width: ${(0, helpers_1.px)(minWidth)};
      overflow: hidden;

      ${positionMain === 'bottom' &&
        (0, react_2.css) `
        margin-top: ${spacing.xxs};
      `}

      ${positionMain === 'left' &&
        (0, react_2.css) `
        margin-right: ${spacing.xxs};
      `}

      ${positionMain === 'right' &&
        (0, react_2.css) `
        margin-left: ${spacing.xxs};
      `}

      ${positionMain === 'top' &&
        (0, react_2.css) `
        margin-bottom: ${spacing.xxs};
      `}
    }
  `;
});
const StyledMenuButton = (0, styled_1.default)(ButtonBase_1.ButtonBase)(props => {
    const { spacing } = (0, helpers_1.getTheme)(props);
    return (0, react_2.css) `
    display: flex;
    min-height: ${spacing.lg};
    min-width: ${spacing.lg};

    :disabled {
      cursor: not-allowed;
    }
  `;
});
exports.Menu = (0, react_1.forwardRef)((props, ref) => {
    const { children, component = (0, jsx_runtime_1.jsx)(Icon_1.Icon, { name: "more-vertical-o", size: 24, title: null }), disabled, minWidth = 200, onToggle, open, position = 'bottom-right', shade, trigger, variant, } = props;
    const [active, setActive] = (0, react_1.useState)(open ?? false);
    const localRef = (0, react_1.useRef)(null);
    const handleClickOutside = (0, react_1.useCallback)(({ target }) => {
        if (localRef.current?.contains(target) || !active) {
            return;
        }
        document.removeEventListener('click', handleClickOutside);
        setActive(false);
    }, [active]);
    (0, react_use_1.useUpdateEffect)(() => {
        if (active && !is_lite_1.default.boolean(open)) {
            document.addEventListener('click', handleClickOutside);
        }
        if (onToggle) {
            onToggle(active);
        }
        return () => {
            if (!is_lite_1.default.boolean(open)) {
                document.removeEventListener('click', handleClickOutside);
            }
        };
    }, [active, handleClickOutside, onToggle, open]);
    const handleToggleMenu = (0, react_1.useCallback)(() => {
        if (disabled || is_lite_1.default.boolean(open)) {
            return;
        }
        setActive(a => !a);
    }, [disabled, open]);
    return ((0, jsx_runtime_1.jsxs)(StyledMenu, { ref: (0, react_merge_refs_1.default)([localRef, ref]), "data-component-name": "Menu", onMouseEnter: trigger === 'hover' ? handleToggleMenu : undefined, onMouseLeave: trigger === 'hover' ? handleToggleMenu : undefined, children: [(0, jsx_runtime_1.jsx)(StyledMenuButton, { "aria-label": active ? 'Close menu' : 'Open menu', "data-component-name": "MenuButton", disabled: disabled, onClick: trigger === 'click' ? handleToggleMenu : undefined, title: active ? 'Close menu' : 'Open menu', type: "button", children: component }), (0, jsx_runtime_1.jsx)(StyledMenuItems, { active: active, "data-component-name": "MenuItems", minWidth: minWidth, position: position, children: (0, jsx_runtime_1.jsx)("div", { "data-component-name": "MenuItemsWrapper", children: (0, helpers_1.recursiveChildrenEnhancer)(children, { closeMenu: handleToggleMenu, shade, variant }, { componentType: Item_1.MenuItem }) }) })] }));
});
exports.Menu.defaultProps = {
    disabled: false,
    minWidth: 200,
    position: 'bottom-right',
    trigger: 'click',
    variant: 'primary',
};
var Divider_1 = require("./Divider");
Object.defineProperty(exports, "MenuDivider", { enumerable: true, get: function () { return Divider_1.MenuDivider; } });
var Item_2 = require("./Item");
Object.defineProperty(exports, "MenuItem", { enumerable: true, get: function () { return Item_2.MenuItem; } });
//# sourceMappingURL=index.js.map