import { CSSProperties, ReactNode } from 'react';
import { StringOrNumber } from '@gilbarbara/types';
import { Alignment, ComponentProps, StyledProps, WithColor, WithFlexBox, WithPadding, WithTextColor } from './types';
export interface MainKnownProps extends StyledProps, WithColor, Pick<WithFlexBox, 'align' | 'justify'>, WithPadding, WithTextColor {
    /**
     * Override `align` and `justify` to "center"
     *
     * @default false
     */
    centered?: boolean;
    children: ReactNode;
    /** @default false */
    isLoading?: boolean;
    maxWidth?: StringOrNumber;
    /** @default 100vh */
    minHeight?: StringOrNumber;
    /**
     * Set the "data-component-name" property
     *
     * @default Main
     */
    name?: string;
    /**
     * Updates the padding for large screens.
     * @default true
     */
    responsive?: boolean;
    style?: CSSProperties;
    textAlign?: Alignment;
}
export declare type MainProps = ComponentProps<HTMLDivElement, MainKnownProps, 'wrap'>;
export declare const StyledMain: import("@emotion/styled").StyledComponent<import("./Box").BoxKnownProps & Omit<import("react").HTMLProps<HTMLDivElement>, "size" | "ref" | keyof import("./Box").BoxKnownProps> & import("react").RefAttributes<HTMLDivElement> & {
    theme?: import("@emotion/react").Theme | undefined;
} & Omit<MainProps, "name">, {}, {}>;
export declare function Main(props: MainProps): JSX.Element;
export declare namespace Main {
    var defaultProps: {
        centered: boolean;
        isLoading: boolean;
        minHeight: string;
        name: string;
        responsive: boolean;
    };
}
