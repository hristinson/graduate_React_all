/// <reference types="react" />
import { ComponentProps, Icons, StyledProps, WithChildren, WithColor, WithDisplay, WithMargin, WithPadding, WithTextOptions } from './types';
export interface AnchorKnownProps extends StyledProps, WithChildren, WithColor, WithDisplay, WithMargin, WithPadding, WithTextOptions {
    external?: boolean;
    hideDecoration?: boolean;
    href: string;
    iconAfter?: Icons;
    iconBefore?: Icons;
    name?: string;
}
export declare type AnchorProps = ComponentProps<HTMLAnchorElement, AnchorKnownProps>;
export declare const StyledAnchor: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & AnchorKnownProps & Omit<import("react").HTMLProps<HTMLAnchorElement>, "ref" | keyof AnchorKnownProps>, import("react").DetailedHTMLProps<import("react").AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>, {}>;
export declare const Anchor: import("react").ForwardRefExoticComponent<AnchorKnownProps & Omit<import("react").HTMLProps<HTMLAnchorElement>, "ref" | keyof AnchorKnownProps> & import("react").RefAttributes<HTMLAnchorElement>>;
