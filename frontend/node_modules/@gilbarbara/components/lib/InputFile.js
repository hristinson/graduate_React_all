"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InputFile = exports.StyledInput = exports.StyledFileInput = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const Box_1 = require("./Box");
const Button_1 = require("./Button");
const helpers_1 = require("./modules/helpers");
const system_1 = require("./modules/system");
const Truncate_1 = require("./Truncate");
exports.StyledFileInput = (0, styled_1.default)('div', (0, system_1.getStyledOptions)())(props => {
    const { width = '100%' } = props;
    const { spacing } = (0, helpers_1.getTheme)(props);
    return (0, react_2.css) `
    ${(0, system_1.baseStyles)(props)};
    align-items: center;
    display: flex;
    width: ${(0, helpers_1.px)(width)};

    [data-component-name='Truncate'] {
      flex: 1;
      margin-left: ${spacing.xs};

      &:empty {
        display: none;
      }
    }
  `;
});
exports.StyledInput = (0, styled_1.default)('input', (0, system_1.getStyledOptions)()) `
  font-size: 48px;
  left: 0;
  opacity: 0;
  position: absolute;
  top: 0;
  z-index: 1;
`;
exports.InputFile = (0, react_1.forwardRef)((props, ref) => {
    const { invert, large, name, onChange, placeholder, value, ...rest } = props;
    const [localValue, setLocalValue] = (0, react_1.useState)('');
    const handleChange = (event) => {
        const { files } = event.target;
        setLocalValue(files?.length ? files[0].name : '');
        if (onChange) {
            onChange(event);
        }
    };
    return ((0, jsx_runtime_1.jsxs)(exports.StyledFileInput, { "data-component-name": "InputFile", ...rest, children: [(0, jsx_runtime_1.jsxs)(Box_1.BoxInline, { overflow: "hidden", position: "relative", children: [(0, jsx_runtime_1.jsx)(Button_1.Button, { invert: invert, size: large ? 'lg' : 'md', children: placeholder }), (0, jsx_runtime_1.jsx)(exports.StyledInput, { ref: ref, id: name, name: name, onChange: handleChange, type: "file" })] }), (0, jsx_runtime_1.jsx)(Truncate_1.Truncate, { maxWidth: "100%", children: value || localValue })] }));
});
exports.InputFile.defaultProps = {
    disabled: false,
    invert: true,
    large: false,
    placeholder: 'Upload a file',
    readOnly: false,
    width: '100%',
};
//# sourceMappingURL=InputFile.js.map