import { MouseEventHandler, ReactNode } from 'react';
import { MenuProps } from './Menu';
import { PositionY, WithBlock, WithBusy, WithChildren, WithColor, WithComponentSize, WithInvert } from './types';
export interface ButtonSplitProps extends Pick<MenuProps, 'disabled' | 'onToggle'>, WithBlock, WithBusy, WithChildren, WithColor, WithComponentSize, WithInvert {
    label: ReactNode;
    onClick: MouseEventHandler<HTMLButtonElement>;
    /** @default bottom-right */
    position?: PositionY;
}
export declare const StyledButtonSplit: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & Omit<ButtonSplitProps, "label" | "onClick">, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare function ButtonSplit(props: ButtonSplitProps): JSX.Element;
export declare namespace ButtonSplit {
    var defaultProps: {
        block: boolean;
        busy: boolean;
        disabled: boolean;
        invert: boolean;
        position: string;
        shade: string;
        size: string;
        variant: string;
    };
}
export { MenuDivider as ButtonSplitDivider, MenuItem as ButtonSplitItem } from './Menu';
