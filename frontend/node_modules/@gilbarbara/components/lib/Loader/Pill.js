"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StyledLoaderPill = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const polished_1 = require("polished");
const helpers_1 = require("../modules/helpers");
const system_1 = require("../modules/system");
const animation = (0, react_1.keyframes) `
  0% {
    transform: translateX(-10%);
  }

  50% {
    transform: translateX(100%);
  }

  100% {
    transform: translateX(-10%);
  }
`;
exports.StyledLoaderPill = (0, styled_1.default)('div', (0, system_1.getStyledOptions)())(props => {
    const { block, color, shade, size = 128, variant } = props;
    const { darkColor, grayDark, grayLighter, lightColor, spacing, variants } = (0, helpers_1.getTheme)(props);
    const darkMode = (0, system_1.isDarkMode)(props);
    const ratio = 0.16;
    const borderRadius = (0, helpers_1.px)(size / 2);
    let variantColor = darkMode ? lightColor : darkColor;
    if (variant) {
        variantColor = (0, helpers_1.getColorVariant)(variant, shade, variants).bg;
    }
    return (0, react_1.css) `
    background-color: ${(0, system_1.isDarkMode)(props) ? grayDark : grayLighter};
    border-radius: ${borderRadius};
    display: ${block ? 'flex' : 'inline-flex'};
    height: ${(0, helpers_1.px)(Math.ceil(size * ratio))};
    margin: ${block ? spacing.lg : 0} auto;
    overflow: hidden;
    position: relative;
    width: ${(0, helpers_1.px)(size)};

    div {
      animation: ${animation} 2s infinite ease-in-out;
      background-color: ${color || variantColor};
      border-radius: ${borderRadius};
      content: '';
      bottom: 0;
      display: block;
      left: -10%;
      position: absolute;
      top: 0;
      width: 70%;
      z-index: 10;
    }

    div:nth-of-type(2) {
      animation-delay: 0.04s;
      background-color: ${(0, polished_1.rgba)(color || variantColor, 0.3)};
      z-index: 5;
    }

    div:nth-of-type(3) {
      animation-delay: 0.05s;
      background-color: ${(0, polished_1.rgba)(color || variantColor, 0.2)};
      z-index: 4;
    }
  `;
});
function LoaderPill(props) {
    return ((0, jsx_runtime_1.jsxs)(exports.StyledLoaderPill, { "data-component-name": "LoaderPill", ...props, children: [(0, jsx_runtime_1.jsx)("div", {}), (0, jsx_runtime_1.jsx)("div", {}), (0, jsx_runtime_1.jsx)("div", {})] }));
}
exports.default = LoaderPill;
//# sourceMappingURL=Pill.js.map