"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Avatar = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@emotion/react");
const styled_1 = require("@emotion/styled");
const helpers_1 = require("@gilbarbara/helpers");
const Box_1 = require("./Box");
const helpers_2 = require("./modules/helpers");
const system_1 = require("./modules/system");
const sizes = {
    xs: {
        size: '24px',
        fontSize: '12px',
    },
    sm: {
        size: '32px',
        fontSize: '14px',
    },
    md: {
        size: '40px',
        fontSize: '16px',
    },
    lg: {
        size: '48px',
        fontSize: '18px',
    },
    xl: {
        size: '56px',
        fontSize: '20px',
    },
    jumbo: {
        size: '96px',
        fontSize: '40px',
    },
};
const Circle = (0, styled_1.default)('div', (0, system_1.getStyledOptions)())(props => {
    const { shade, size, variant } = props;
    const { variants } = (0, helpers_2.getTheme)(props);
    const { bg, color } = (0, helpers_2.getColorVariant)(variant, shade, variants);
    const selectedSize = sizes[size];
    return (0, react_2.css) `
    background-color: ${bg};
    color: ${color};
    height: ${selectedSize.size};
    font-size: ${selectedSize.fontSize};
    line-height: ${selectedSize.size};
    text-align: center;
    width: ${selectedSize.size};
  `;
});
exports.Avatar = (0, react_1.forwardRef)((props, ref) => {
    const { image, name, shade = 'mid', size = 'md', variant = 'primary', ...rest } = props;
    const selectedSize = sizes[size];
    return ((0, jsx_runtime_1.jsx)(Box_1.BoxCenter, { ref: ref, "data-component-name": "Avatar", height: selectedSize.size, overflow: "hidden", radius: "round", width: selectedSize.size, ...rest, children: image ? ((0, jsx_runtime_1.jsx)("img", { alt: name, height: selectedSize.size, src: image, width: selectedSize.size })) : ((0, jsx_runtime_1.jsx)(Circle, { shade: shade, size: size, variant: variant, children: (0, helpers_1.getInitials)(name).toUpperCase() })) }));
});
exports.Avatar.defaultProps = {
    shade: 'mid',
    size: 'md',
    variant: 'primary',
};
//# sourceMappingURL=Avatar.js.map