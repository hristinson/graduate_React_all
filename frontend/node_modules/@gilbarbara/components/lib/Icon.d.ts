import { CSSProperties, ReactNode } from 'react';
import { RequireExactlyOne } from 'type-fest';
import { Icons, StyledProps, WithColor, WithMargin } from './types';
export interface IconKnownProps extends StyledProps, WithColor, WithMargin {
    color?: string;
    name: Icons;
    /** @default 16 */
    size?: number;
    spin?: boolean;
    style?: CSSProperties;
    title?: ReactNode;
    url: string;
}
export declare type IconProps = RequireExactlyOne<IconKnownProps, 'name' | 'url'>;
export declare const StyledIcon: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & import("type-fest").Simplify<import("type-fest").Except<Omit<IconProps, "url">, "size"> & Required<Pick<Omit<IconProps, "url">, "size">>>, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, {}>;
export declare const Icon: import("react").ForwardRefExoticComponent<IconProps & import("react").RefAttributes<HTMLSpanElement>>;
