/// <reference types="react" />
import { ComponentProps, Icons, StyledProps, WithBorder, WithChildren, WithInvert, WithMargin, WithPadding, WithRadius } from './types';
export interface AlertKnownProps extends StyledProps, WithBorder, WithChildren, WithInvert, WithMargin, WithPadding, WithRadius {
    icon?: Icons;
    /** @default success */
    type: 'success' | 'warning' | 'error' | 'info' | 'neutral';
}
export declare type AlertProps = ComponentProps<HTMLDivElement, AlertKnownProps>;
export declare const StyledAlert: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & AlertKnownProps & Omit<import("react").HTMLProps<HTMLDivElement>, "size" | "ref" | keyof AlertKnownProps>, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const Alert: import("react").ForwardRefExoticComponent<AlertKnownProps & Omit<import("react").HTMLProps<HTMLDivElement>, "size" | "ref" | keyof AlertKnownProps> & import("react").RefAttributes<HTMLDivElement>>;
