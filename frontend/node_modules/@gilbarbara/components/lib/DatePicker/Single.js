"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatePicker = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_day_picker_1 = require("react-day-picker");
const styled_1 = require("@emotion/styled");
const helpers_1 = require("@gilbarbara/helpers");
const utils_1 = require("./utils");
const system_1 = require("../modules/system");
const StyledDatePicker = (0, styled_1.default)('div', (0, system_1.getStyledOptions)())(props => {
    return (0, utils_1.getStyles)(props);
});
function DatePicker(props) {
    const { currentMonthLabel, fromDate, onSelect, toDate, variant, ...rest } = props;
    const [selected, setSelected] = (0, react_1.useState)(undefined);
    const [month, setMonth] = (0, react_1.useState)(undefined);
    const handleSelect = (_day, selectedDay, modifiers) => {
        if (modifiers.disabled || modifiers.outside) {
            return;
        }
        let nextDate = selectedDay;
        if (selected && selected.toISOString() === selectedDay.toISOString()) {
            nextDate = undefined;
        }
        setSelected(nextDate);
        if (onSelect) {
            onSelect(nextDate ? selectedDay.toISOString() : '');
        }
    };
    return ((0, jsx_runtime_1.jsx)(StyledDatePicker, { "data-component-name": "DatePicker", ...(0, helpers_1.omit)(props, 'hidden', 'onDayClick', 'onSelect'), children: (0, jsx_runtime_1.jsx)(react_day_picker_1.DayPicker, { footer: (0, utils_1.getFooter)(setMonth, currentMonthLabel), mode: "single", month: month, onMonthChange: setMonth, onSelect: handleSelect, selected: selected, ...(0, utils_1.getRange)(fromDate, toDate), ...rest }) }));
}
exports.DatePicker = DatePicker;
DatePicker.defaultProps = utils_1.defaultProps;
//# sourceMappingURL=Single.js.map