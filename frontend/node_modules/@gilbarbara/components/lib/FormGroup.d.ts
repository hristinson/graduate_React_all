import { CSSProperties, ReactNode } from 'react';
import { ComponentProps, StyledProps, WithBorder, WithChildren, WithInline, WithLayout, WithMargin, WithPadding, WithRadius } from './types';
export interface FormGroupKnownProps extends StyledProps, WithBorder, WithChildren, WithInline, WithLayout, WithMargin, WithPadding, WithRadius {
    assistiveText?: ReactNode;
    error?: ReactNode;
    hideAssistiveText?: boolean;
    label?: ReactNode;
    labelId?: string;
    labelInfo?: ReactNode;
    labelStyles?: CSSProperties;
    required?: boolean;
    skipIcon?: boolean;
    valid?: boolean;
}
export declare type FormGroupProps = ComponentProps<HTMLElement, FormGroupKnownProps>;
export declare const StyledFormGroup: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & Partial<FormGroupProps>, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const FormGroup: import("react").ForwardRefExoticComponent<FormGroupKnownProps & Omit<import("react").HTMLProps<HTMLElement>, "size" | "ref" | keyof FormGroupKnownProps> & import("react").RefAttributes<HTMLDivElement>>;
