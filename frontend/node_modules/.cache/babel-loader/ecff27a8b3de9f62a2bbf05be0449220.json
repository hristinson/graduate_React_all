{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { Button } from './Button';\nimport { H3 } from './Headings';\nimport { getTheme, px } from './modules/helpers';\nimport { borderStyles, getStyledOptions, isDarkMode, paddingStyles, radiusStyles, shadowStyles } from './modules/system';\nimport { Paragraph } from './Paragraph';\nimport { Portal } from './Portal';\nimport { Spacer } from './Spacer';\nconst StyledDialog = styled('div', getStyledOptions())(props => {\n  const {\n    textAlign = 'left',\n    width = 380\n  } = props;\n  const {\n    black,\n    darkColor,\n    white\n  } = getTheme(props);\n  const darkMode = isDarkMode(props);\n  return css`\n      background-color: ${darkMode ? darkColor : white};\n      color: ${darkMode ? white : black};\n      max-width: 100%;\n      text-align: ${textAlign};\n      width: ${px(width)};\n      ${borderStyles(props)};\n      ${paddingStyles(props)};\n      ${radiusStyles(props)};\n      ${shadowStyles(props)};\n    `;\n});\nexport function Dialog(props) {\n  const {\n    buttonCancelText,\n    buttonConfirmText,\n    buttonOrder,\n    closeOnClickOverlay,\n    closeOnEsc = true,\n    content,\n    hideOverlay,\n    isActive,\n    onClickCancel,\n    onClickConfirmation,\n    onClose,\n    onOpen,\n    style,\n    title,\n    variant,\n    zIndex,\n    ...rest\n  } = props;\n  const handlePortalClose = useCallback(() => {\n    onClickCancel();\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClickCancel, onClose]);\n\n  const actionButton = _jsx(Button, {\n    \"data-test-id\": \"confirm\",\n    onClick: onClickConfirmation,\n    variant: variant,\n    children: buttonConfirmText\n  });\n\n  const cancelButton = _jsx(Button, {\n    \"data-test-id\": \"cancel\",\n    invert: true,\n    onClick: onClickCancel,\n    variant: variant,\n    children: buttonCancelText\n  });\n\n  return _jsx(Portal, {\n    closeOnClickOverlay: closeOnClickOverlay,\n    closeOnEsc: closeOnEsc,\n    hideOverlay: hideOverlay,\n    isActive: isActive,\n    onClose: handlePortalClose,\n    onOpen: onOpen,\n    zIndex: zIndex,\n    children: _jsxs(StyledDialog, {\n      \"data-component-name\": \"Dialog\",\n      style: style,\n      ...rest,\n      children: [title && _jsx(H3, {\n        mb: \"sm\",\n        children: title\n      }), _jsx(Paragraph, {\n        mb: \"xl\",\n        children: content\n      }), buttonOrder === 'ltr' ? _jsxs(Spacer, {\n        distribution: \"space-between\",\n        children: [cancelButton, actionButton]\n      }) : _jsxs(Spacer, {\n        distribution: \"space-between\",\n        children: [actionButton, cancelButton]\n      })]\n    })\n  });\n}\nDialog.defaultProps = {\n  buttonCancelText: 'Cancel',\n  buttonConfirmText: 'Confirm',\n  buttonOrder: 'ltr',\n  closeOnClickOverlay: false,\n  closeOnEsc: false,\n  hideOverlay: false,\n  padding: 'xl',\n  radius: 'lg',\n  shadow: 'high',\n  textAlign: 'left',\n  variant: 'primary',\n  width: 380\n};","map":{"version":3,"mappings":"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","names":["useCallback","css","styled","Button","H3","getTheme","px","borderStyles","getStyledOptions","isDarkMode","paddingStyles","radiusStyles","shadowStyles","Paragraph","Portal","Spacer","StyledDialog","props","textAlign","width","black","darkColor","white","darkMode","Dialog","buttonCancelText","buttonConfirmText","buttonOrder","closeOnClickOverlay","closeOnEsc","content","hideOverlay","isActive","onClickCancel","onClickConfirmation","onClose","onOpen","style","title","variant","zIndex","rest","handlePortalClose","actionButton","_jsx","onClick","children","cancelButton","invert","_jsxs","mb","distribution","defaultProps","padding","radius","shadow"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Dialog.tsx"],"sourcesContent":["import { CSSProperties, ReactNode, useCallback } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { StringOrNumber } from '@gilbarbara/types';\n\nimport { Button } from './Button';\nimport { H3 } from './Headings';\nimport { getTheme, px } from './modules/helpers';\nimport {\n  borderStyles,\n  getStyledOptions,\n  isDarkMode,\n  paddingStyles,\n  radiusStyles,\n  shadowStyles,\n} from './modules/system';\nimport { Paragraph } from './Paragraph';\nimport { Portal, PortalProps } from './Portal';\nimport { Spacer } from './Spacer';\nimport {\n  Alignment,\n  ColorVariants,\n  StyledProps,\n  WithBorder,\n  WithPadding,\n  WithRadius,\n  WithShadow,\n} from './types';\n\nexport interface DialogProps\n  extends StyledProps,\n    WithBorder,\n    WithPadding,\n    WithRadius,\n    WithShadow,\n    Omit<PortalProps, 'children' | 'isActive' | 'showCloseButton'> {\n  buttonCancelText?: string;\n  buttonConfirmText?: string;\n  /** @default ltr */\n  buttonOrder?: 'ltr' | 'rtl';\n  content: ReactNode;\n  isActive: boolean;\n  onClickCancel: () => void;\n  onClickConfirmation: () => void;\n  style?: CSSProperties;\n  /** @default left */\n  textAlign?: Alignment;\n  title: ReactNode;\n  /** @default primary */\n  variant?: ColorVariants;\n  /** @default 380 */\n  width?: StringOrNumber;\n}\n\nconst StyledDialog = styled(\n  'div',\n  getStyledOptions(),\n)<Omit<DialogProps, 'content' | 'isActive' | 'onClickCancel' | 'onClickConfirmation' | 'title'>>(\n  props => {\n    const { textAlign = 'left', width = 380 } = props;\n    const { black, darkColor, white } = getTheme(props);\n    const darkMode = isDarkMode(props);\n\n    return css`\n      background-color: ${darkMode ? darkColor : white};\n      color: ${darkMode ? white : black};\n      max-width: 100%;\n      text-align: ${textAlign};\n      width: ${px(width)};\n      ${borderStyles(props)};\n      ${paddingStyles(props)};\n      ${radiusStyles(props)};\n      ${shadowStyles(props)};\n    `;\n  },\n);\n\nexport function Dialog(props: DialogProps) {\n  const {\n    buttonCancelText,\n    buttonConfirmText,\n    buttonOrder,\n    closeOnClickOverlay,\n    closeOnEsc = true,\n    content,\n    hideOverlay,\n    isActive,\n    onClickCancel,\n    onClickConfirmation,\n    onClose,\n    onOpen,\n    style,\n    title,\n    variant,\n    zIndex,\n    ...rest\n  } = props;\n\n  const handlePortalClose = useCallback(() => {\n    onClickCancel();\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClickCancel, onClose]);\n\n  const actionButton = (\n    <Button data-test-id=\"confirm\" onClick={onClickConfirmation} variant={variant}>\n      {buttonConfirmText}\n    </Button>\n  );\n  const cancelButton = (\n    <Button data-test-id=\"cancel\" invert onClick={onClickCancel} variant={variant}>\n      {buttonCancelText}\n    </Button>\n  );\n\n  return (\n    <Portal\n      closeOnClickOverlay={closeOnClickOverlay}\n      closeOnEsc={closeOnEsc}\n      hideOverlay={hideOverlay}\n      isActive={isActive}\n      onClose={handlePortalClose}\n      onOpen={onOpen}\n      zIndex={zIndex}\n    >\n      <StyledDialog data-component-name=\"Dialog\" style={style} {...rest}>\n        {title && <H3 mb=\"sm\">{title}</H3>}\n\n        <Paragraph mb=\"xl\">{content}</Paragraph>\n\n        {buttonOrder === 'ltr' ? (\n          <Spacer distribution=\"space-between\">\n            {cancelButton}\n            {actionButton}\n          </Spacer>\n        ) : (\n          <Spacer distribution=\"space-between\">\n            {actionButton}\n            {cancelButton}\n          </Spacer>\n        )}\n      </StyledDialog>\n    </Portal>\n  );\n}\n\nDialog.defaultProps = {\n  buttonCancelText: 'Cancel',\n  buttonConfirmText: 'Confirm',\n  buttonOrder: 'ltr',\n  closeOnClickOverlay: false,\n  closeOnEsc: false,\n  hideOverlay: false,\n  padding: 'xl',\n  radius: 'lg',\n  shadow: 'high',\n  textAlign: 'left',\n  variant: 'primary',\n  width: 380,\n};\n"]},"metadata":{},"sourceType":"module"}