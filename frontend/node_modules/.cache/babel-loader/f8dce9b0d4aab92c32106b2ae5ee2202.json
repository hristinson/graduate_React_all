{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport is from 'is-lite';\nimport { Box } from './Box';\nimport { ComponentWrapper } from './ComponentWrapper';\nimport { Icon } from './Icon';\nimport { Label } from './Label';\nimport { getTheme } from './modules/helpers';\nimport { baseStyles, borderStyles, getStyledOptions, isDarkMode, layoutStyles, marginStyles, paddingStyles, radiusStyles } from './modules/system';\nexport const StyledFormGroup = styled('div', getStyledOptions())(props => {\n  const {\n    spacing\n  } = getTheme(props);\n  return css`\n    ${baseStyles(props)};\n    margin-bottom: ${spacing.md};\n    width: 100%;\n    ${borderStyles(props)};\n    ${layoutStyles(props)};\n    ${marginStyles(props)};\n    ${paddingStyles(props)};\n    ${radiusStyles(props)};\n\n    [data-component-name='Box'] {\n      > * {\n        margin-bottom: 0;\n        margin-top: 0;\n      }\n\n      [data-component-name='Label'] {\n        margin-right: ${spacing.xs};\n      }\n\n      [data-component-name='FormGroupContent'] {\n        flex: 1;\n      }\n\n      [data-component-name='AssistiveContent'] {\n        margin-left: ${spacing.xs};\n\n        &:empty {\n          display: none;\n        }\n      }\n    }\n  `;\n});\nconst AssistiveContent = styled('div', getStyledOptions())(props => {\n  const {\n    grayLight,\n    grayMid,\n    spacing,\n    typography\n  } = getTheme(props);\n  return css`\n    align-items: center;\n    color: ${isDarkMode(props) ? grayLight : grayMid};\n    display: flex;\n    font-size: ${typography.mid.fontSize};\n    line-height: 16px;\n    margin-top: ${spacing.xxs};\n    min-height: ${spacing.md};\n    text-align: left;\n  `;\n});\nconst Error = styled.div(props => {\n  const {\n    colors\n  } = getTheme(props);\n  return css`\n    align-items: center;\n    color: ${colors.red};\n    display: flex;\n  `;\n});\nexport const FormGroup = forwardRef((props, ref) => {\n  const {\n    assistiveText,\n    children,\n    error,\n    hideAssistiveText,\n    inline,\n    label,\n    labelId,\n    labelInfo,\n    labelStyles,\n    required,\n    skipIcon,\n    valid,\n    ...rest\n  } = props;\n  const content = {\n    assistiveText\n  };\n\n  if (error && valid === false) {\n    content.assistiveText = _jsxs(Error, {\n      children: [_jsx(Icon, {\n        mr: \"xxs\",\n        name: \"danger\",\n        title: \"Invalid\"\n      }), _jsx(\"span\", {\n        children: error\n      })]\n    });\n  }\n\n  content.children = !skipIcon ? _jsx(ComponentWrapper, {\n    suffix: is.boolean(valid) && valid ? _jsx(Icon, {\n      name: \"check-o\",\n      title: \"valid\"\n    }) : undefined,\n    children: children\n  }) : children;\n\n  if (label) {\n    content.label = _jsx(Label, {\n      labelId: labelId,\n      labelInfo: labelInfo || required && _jsx(Icon, {\n        name: \"asterisk\",\n        variant: \"red\"\n      }),\n      style: labelStyles,\n      children: label\n    });\n  }\n\n  content.main = _jsxs(_Fragment, {\n    children: [content.label, content.children, !hideAssistiveText && _jsx(AssistiveContent, {\n      \"data-component-name\": \"AssistiveContent\",\n      children: content.assistiveText\n    })]\n  });\n\n  if (inline) {\n    content.main = _jsx(Box, {\n      display: \"flex\",\n      children: content.main\n    });\n  }\n\n  return _jsx(StyledFormGroup, {\n    ref: ref,\n    \"data-component-name\": \"FormGroup\",\n    inline: inline,\n    ...rest,\n    children: content.main\n  });\n});\nFormGroup.defaultProps = {\n  hideAssistiveText: false,\n  inline: false,\n  radius: false,\n  required: false,\n  skipIcon: false\n};","map":{"version":3,"mappings":";AAAA,SAAwBA,UAAxB,QAAqD,OAArD;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,EAAP,MAAe,SAAf;AAEA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SACEC,UADF,EAEEC,YAFF,EAGEC,gBAHF,EAIEC,UAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,aAPF,EAQEC,YARF,QASO,kBATP;AA6CA,OAAO,MAAMC,eAAe,GAAGf,MAAM,CACnC,KADmC,EAEnCS,gBAAgB,EAFmB,CAAN,CAGJO,KAAK,IAAG;EACjC,MAAM;IAAEC;EAAF,IAAcX,QAAQ,CAACU,KAAD,CAA5B;EAEA,OAAOjB,GAAG;MACNQ,UAAU,CAACS,KAAD,CAAO;qBACFC,OAAO,CAACC,EAAE;;MAEzBV,YAAY,CAACQ,KAAD,CAAO;MACnBL,YAAY,CAACK,KAAD,CAAO;MACnBJ,YAAY,CAACI,KAAD,CAAO;MACnBH,aAAa,CAACG,KAAD,CAAO;MACpBF,YAAY,CAACE,KAAD,CAAO;;;;;;;;;wBASDC,OAAO,CAACE,EAAE;;;;;;;;uBAQXF,OAAO,CAACE,EAAE;;;;;;;GAzB/B;AAiCD,CAvC8B,CAAxB;AAyCP,MAAMC,gBAAgB,GAAGpB,MAAM,CAC7B,KAD6B,EAE7BS,gBAAgB,EAFa,CAAN,CAGEO,KAAK,IAAG;EACjC,MAAM;IAAEK,SAAF;IAAaC,OAAb;IAAsBL,OAAtB;IAA+BM;EAA/B,IAA8CjB,QAAQ,CAACU,KAAD,CAA5D;EAEA,OAAOjB,GAAG;;aAECW,UAAU,CAACM,KAAD,CAAV,GAAoBK,SAApB,GAAgCC,OAAO;;iBAEnCC,UAAU,CAACC,GAAX,CAAeC,QAAQ;;kBAEtBR,OAAO,CAACS,GAAG;kBACXT,OAAO,CAACC,EAAE;;GAP1B;AAUD,CAhBwB,CAAzB;AAkBA,MAAMS,KAAK,GAAG3B,MAAM,CAAC4B,GAAP,CAAWZ,KAAK,IAAG;EAC/B,MAAM;IAAEa;EAAF,IAAavB,QAAQ,CAACU,KAAD,CAA3B;EAEA,OAAOjB,GAAG;;aAEC8B,MAAM,CAACC,GAAG;;GAFrB;AAKD,CARa,CAAd;AAUA,OAAO,MAAMC,SAAS,GAAGjC,UAAU,CAAiC,CAACkB,KAAD,EAAQgB,GAAR,KAAe;EACjF,MAAM;IACJC,aADI;IAEJC,QAFI;IAGJC,KAHI;IAIJC,iBAJI;IAKJC,MALI;IAMJC,KANI;IAOJC,OAPI;IAQJC,SARI;IASJC,WATI;IAUJC,QAVI;IAWJC,QAXI;IAYJC,KAZI;IAaJ,GAAGC;EAbC,IAcF7B,KAdJ;EAeA,MAAM8B,OAAO,GAAc;IACzBb;EADyB,CAA3B;;EAIA,IAAIE,KAAK,IAAIS,KAAK,KAAK,KAAvB,EAA8B;IAC5BE,OAAO,CAACb,aAAR,GACEc,MAACpB,KAAD,EAAM;MAAAO,WACJc,KAAC5C,IAAD,EAAK;QAAC6C,EAAE,EAAC,KAAJ;QAAUC,IAAI,EAAC,QAAf;QAAwBC,KAAK,EAAC;MAA9B,CAAL,CADI,EAEJH;QAAAd,UAAOC;MAAP,EAFI;IAAA,CAAN,CADF;EAMD;;EAEDW,OAAO,CAACZ,QAAR,GAAmB,CAACS,QAAD,GACjBK,KAAC7C,gBAAD,EAAiB;IACfiD,MAAM,EAAEnD,EAAE,CAACoD,OAAH,CAAWT,KAAX,KAAqBA,KAArB,GAA6BI,KAAC5C,IAAD,EAAK;MAAC8C,IAAI,EAAC,SAAN;MAAgBC,KAAK,EAAC;IAAtB,CAAL,CAA7B,GAAqEG,SAD9D;IACuEpB,UAErFA;EAHc,CAAjB,CADiB,GAOjBA,QAPF;;EAUA,IAAII,KAAJ,EAAW;IACTQ,OAAO,CAACR,KAAR,GACEU,KAAC3C,KAAD,EAAM;MACJkC,OAAO,EAAEA,OADL;MAEJC,SAAS,EAAEA,SAAS,IAAKE,QAAQ,IAAIM,KAAC5C,IAAD,EAAK;QAAC8C,IAAI,EAAC,UAAN;QAAiBK,OAAO,EAAC;MAAzB,CAAL,CAFjC;MAGJC,KAAK,EAAEf,WAHH;MAGcP,UAEjBI;IALG,CAAN,CADF;EASD;;EAEDQ,OAAO,CAACW,IAAR,GACEV;IAAAb,WACGY,OAAO,CAACR,KADX,EAEGQ,OAAO,CAACZ,QAFX,EAGG,CAACE,iBAAD,IACCY,KAAC5B,gBAAD,EAAiB;MAAA,uBAAqB,kBAArB;MAAuCc,UACrDY,OAAO,CAACb;IADM,CAAjB,CAJJ;EAAA,EADF;;EAYA,IAAII,MAAJ,EAAY;IACVS,OAAO,CAACW,IAAR,GAAeT,KAAC9C,GAAD,EAAI;MAACwD,OAAO,EAAC,MAAT;MAAexB,UAAEY,OAAO,CAACW;IAAzB,CAAJ,CAAf;EACD;;EAED,OACET,KAACjC,eAAD,EAAgB;IAACiB,GAAG,EAAEA,GAAN;IAAS,uBAAsB,WAA/B;IAA2CK,MAAM,EAAEA,MAAnD;IAAyD,GAAMQ,IAA/D;IAAmEX,UAChFY,OAAO,CAACW;EADK,CAAhB,CADF;AAKD,CAxEkC,CAA5B;AA0EP1B,SAAS,CAAC4B,YAAV,GAAyB;EACvBvB,iBAAiB,EAAE,KADI;EAEvBC,MAAM,EAAE,KAFe;EAGvBuB,MAAM,EAAE,KAHe;EAIvBlB,QAAQ,EAAE,KAJa;EAKvBC,QAAQ,EAAE;AALa,CAAzB","names":["forwardRef","css","styled","is","Box","ComponentWrapper","Icon","Label","getTheme","baseStyles","borderStyles","getStyledOptions","isDarkMode","layoutStyles","marginStyles","paddingStyles","radiusStyles","StyledFormGroup","props","spacing","md","xs","AssistiveContent","grayLight","grayMid","typography","mid","fontSize","xxs","Error","div","colors","red","FormGroup","ref","assistiveText","children","error","hideAssistiveText","inline","label","labelId","labelInfo","labelStyles","required","skipIcon","valid","rest","content","_jsxs","_jsx","mr","name","title","suffix","boolean","undefined","variant","style","main","display","defaultProps","radius"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/FormGroup.tsx"],"sourcesContent":["import { CSSProperties, forwardRef, ReactNode } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { AnyObject } from '@gilbarbara/types';\nimport is from 'is-lite';\n\nimport { Box } from './Box';\nimport { ComponentWrapper } from './ComponentWrapper';\nimport { Icon } from './Icon';\nimport { Label } from './Label';\nimport { getTheme } from './modules/helpers';\nimport {\n  baseStyles,\n  borderStyles,\n  getStyledOptions,\n  isDarkMode,\n  layoutStyles,\n  marginStyles,\n  paddingStyles,\n  radiusStyles,\n} from './modules/system';\nimport {\n  ComponentProps,\n  StyledProps,\n  WithBorder,\n  WithChildren,\n  WithInline,\n  WithLayout,\n  WithMargin,\n  WithPadding,\n  WithRadius,\n} from './types';\n\nexport interface FormGroupKnownProps\n  extends StyledProps,\n    WithBorder,\n    WithChildren,\n    WithInline,\n    WithLayout,\n    WithMargin,\n    WithPadding,\n    WithRadius {\n  assistiveText?: ReactNode;\n  error?: ReactNode;\n  hideAssistiveText?: boolean;\n  label?: ReactNode;\n  labelId?: string;\n  labelInfo?: ReactNode;\n  labelStyles?: CSSProperties;\n  required?: boolean;\n  skipIcon?: boolean;\n  valid?: boolean;\n}\n\nexport type FormGroupProps = ComponentProps<HTMLElement, FormGroupKnownProps>;\n\nexport const StyledFormGroup = styled(\n  'div',\n  getStyledOptions(),\n)<Partial<FormGroupProps>>(props => {\n  const { spacing } = getTheme(props);\n\n  return css`\n    ${baseStyles(props)};\n    margin-bottom: ${spacing.md};\n    width: 100%;\n    ${borderStyles(props)};\n    ${layoutStyles(props)};\n    ${marginStyles(props)};\n    ${paddingStyles(props)};\n    ${radiusStyles(props)};\n\n    [data-component-name='Box'] {\n      > * {\n        margin-bottom: 0;\n        margin-top: 0;\n      }\n\n      [data-component-name='Label'] {\n        margin-right: ${spacing.xs};\n      }\n\n      [data-component-name='FormGroupContent'] {\n        flex: 1;\n      }\n\n      [data-component-name='AssistiveContent'] {\n        margin-left: ${spacing.xs};\n\n        &:empty {\n          display: none;\n        }\n      }\n    }\n  `;\n});\n\nconst AssistiveContent = styled(\n  'div',\n  getStyledOptions(),\n)<Partial<FormGroupProps>>(props => {\n  const { grayLight, grayMid, spacing, typography } = getTheme(props);\n\n  return css`\n    align-items: center;\n    color: ${isDarkMode(props) ? grayLight : grayMid};\n    display: flex;\n    font-size: ${typography.mid.fontSize};\n    line-height: 16px;\n    margin-top: ${spacing.xxs};\n    min-height: ${spacing.md};\n    text-align: left;\n  `;\n});\n\nconst Error = styled.div(props => {\n  const { colors } = getTheme(props);\n\n  return css`\n    align-items: center;\n    color: ${colors.red};\n    display: flex;\n  `;\n});\n\nexport const FormGroup = forwardRef<HTMLDivElement, FormGroupProps>((props, ref) => {\n  const {\n    assistiveText,\n    children,\n    error,\n    hideAssistiveText,\n    inline,\n    label,\n    labelId,\n    labelInfo,\n    labelStyles,\n    required,\n    skipIcon,\n    valid,\n    ...rest\n  } = props;\n  const content: AnyObject = {\n    assistiveText,\n  };\n\n  if (error && valid === false) {\n    content.assistiveText = (\n      <Error>\n        <Icon mr=\"xxs\" name=\"danger\" title=\"Invalid\" />\n        <span>{error}</span>\n      </Error>\n    );\n  }\n\n  content.children = !skipIcon ? (\n    <ComponentWrapper\n      suffix={is.boolean(valid) && valid ? <Icon name=\"check-o\" title=\"valid\" /> : undefined}\n    >\n      {children}\n    </ComponentWrapper>\n  ) : (\n    children\n  );\n\n  if (label) {\n    content.label = (\n      <Label\n        labelId={labelId}\n        labelInfo={labelInfo || (required && <Icon name=\"asterisk\" variant=\"red\" />)}\n        style={labelStyles}\n      >\n        {label}\n      </Label>\n    );\n  }\n\n  content.main = (\n    <>\n      {content.label}\n      {content.children}\n      {!hideAssistiveText && (\n        <AssistiveContent data-component-name=\"AssistiveContent\">\n          {content.assistiveText}\n        </AssistiveContent>\n      )}\n    </>\n  );\n\n  if (inline) {\n    content.main = <Box display=\"flex\">{content.main}</Box>;\n  }\n\n  return (\n    <StyledFormGroup ref={ref} data-component-name=\"FormGroup\" inline={inline} {...rest}>\n      {content.main}\n    </StyledFormGroup>\n  );\n});\n\nFormGroup.defaultProps = {\n  hideAssistiveText: false,\n  inline: false,\n  radius: false,\n  required: false,\n  skipIcon: false,\n};\n"]},"metadata":{},"sourceType":"module"}