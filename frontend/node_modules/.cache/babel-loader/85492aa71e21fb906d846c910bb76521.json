{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useMount, usePrevious, useUnmount, useUpdateEffect } from 'react-use';\nimport { css, keyframes, useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport is from 'is-lite';\nimport { Icon } from './Icon';\nimport { baseStyles, buttonStyles } from './modules/system';\nimport { black } from './modules/theme';\n\nfunction getPortalElement() {\n  return document.querySelector('.__portal');\n}\n\nfunction createPortalElement() {\n  const newElement = document.createElement('div');\n  newElement.classList.add('__portal');\n  return newElement;\n}\n\nconst portalHide = keyframes`\n  0% {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  100% {\n    opacity: 0;\n    visibility: hidden;\n  }\n`;\nconst portalShow = keyframes`\n  0% {\n    opacity: 0;\n    visibility: hidden;\n  }\n\n  100% {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\nconst CloseButton = styled.button`\n  ${baseStyles};\n  ${buttonStyles};\n  align-items: center;\n  color: ${black};\n  display: inline-flex;\n  height: 30px;\n  justify-content: center;\n  line-height: 1;\n  pointer-events: all;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 30px;\n  z-index: 20;\n`;\nconst Content = styled.div`\n  max-height: 100%;\n  position: relative;\n  width: auto;\n  z-index: 10;\n`;\nconst Overlay = styled.div(props => {\n  const {\n    darkMode,\n    isActive\n  } = props;\n  return css`\n    background-color: ${darkMode ? 'rgba(222, 222, 222, 0.3)' : 'rgba(0, 0, 0, 0.3)'};\n    bottom: 0;\n    left: 0;\n    opacity: ${isActive ? 1 : 0};\n    position: absolute;\n    right: 0;\n    top: 0;\n    transition: opacity 0.5s;\n  `;\n});\nconst StyledPortal = styled.div(props => {\n  const {\n    isActive,\n    zIndex\n  } = props;\n  return css`\n    align-items: center;\n    animation-duration: 0.5s;\n    animation-name: ${portalHide};\n    animation-play-state: ${isActive ? 'running' : 'paused'};\n    animation-name: ${isActive ? portalShow : portalHide};\n    animation-direction: ${isActive ? 'normal' : 'reverse'};\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    left: 0;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: ${zIndex};\n  `;\n});\nexport function Portal(props) {\n  const {\n    children,\n    closeOnClickOverlay,\n    closeOnEsc,\n    hideOverlay,\n    isActive,\n    onClose,\n    onOpen,\n    showCloseButton,\n    zIndex = 1000\n  } = props;\n  const [isReady, setReady] = useState(false);\n  const portal = useRef(null);\n  const {\n    darkMode = false\n  } = useTheme();\n  const closePortal = useRef(() => {\n    destroyPortal.current();\n\n    if (is.function(onClose)) {\n      onClose();\n    }\n  });\n  const destroyPortal = useRef(() => {\n    if (closeOnEsc) {\n      document.removeEventListener('keydown', handleKeyDown);\n    }\n  });\n  const previousIsActive = usePrevious(isActive);\n  const previousCloseOnEsc = usePrevious(closeOnEsc);\n  const handleKeyDown = useCallback(event => {\n    if (event.keyCode === 27) {\n      event.stopPropagation();\n      closePortal.current();\n    }\n  }, []);\n  useMount(() => {\n    let element = getPortalElement();\n\n    if (!getPortalElement()) {\n      element = createPortalElement();\n      document.body.appendChild(element);\n    }\n\n    portal.current = element;\n    setReady(true);\n\n    if (isActive && closeOnEsc) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n  });\n  useUnmount(() => {\n    destroyPortal.current();\n  });\n  const openPortal = useCallback(() => {\n    if (is.function(onOpen)) {\n      onOpen();\n    }\n\n    if (closeOnEsc) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n  }, [closeOnEsc, handleKeyDown, onOpen]);\n  useUpdateEffect(() => {\n    const hasChanged = previousIsActive !== isActive;\n\n    if (hasChanged && isActive) {\n      openPortal();\n    } else if (hasChanged && !isActive) {\n      destroyPortal.current();\n    }\n\n    if (previousCloseOnEsc !== closeOnEsc) {\n      if (closeOnEsc) {\n        document.addEventListener('keydown', handleKeyDown);\n      } else {\n        document.removeEventListener('keydown', handleKeyDown);\n      }\n    }\n  }, [closeOnEsc, destroyPortal, handleKeyDown, isActive, openPortal, previousIsActive, previousCloseOnEsc]);\n  const handleClickClose = useCallback(() => {\n    if (!closeOnClickOverlay) {\n      return;\n    }\n\n    closePortal.current();\n  }, [closeOnClickOverlay, closePortal]);\n  const content = [];\n\n  if (isActive) {\n    content.push(children);\n  }\n\n  if (!isReady || !portal.current) {\n    return null;\n  }\n\n  return createPortal(_jsxs(StyledPortal, {\n    \"data-component-name\": \"Portal\",\n    isActive: isActive,\n    zIndex: zIndex,\n    children: [!hideOverlay && _jsx(Overlay, {\n      darkMode: darkMode,\n      \"data-component-name\": \"PortalOverlay\",\n      isActive: isActive,\n      onClick: handleClickClose\n    }), showCloseButton && _jsx(CloseButton, {\n      onClick: handleClickClose,\n      title: \"Close\",\n      type: \"button\",\n      children: _jsx(Icon, {\n        name: \"close-o\",\n        size: 20,\n        title: \"Close\"\n      })\n    }), _jsx(Content, {\n      \"data-component-name\": \"PortalContent\",\n      children: content\n    })]\n  }), portal.current);\n}\nPortal.defaultProps = {\n  closeOnClickOverlay: true,\n  closeOnEsc: true,\n  hideOverlay: false,\n  isActive: false,\n  showCloseButton: false,\n  zIndex: 1000\n};","map":{"version":3,"mappings":"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","names":["useCallback","useRef","useState","createPortal","useMount","usePrevious","useUnmount","useUpdateEffect","css","keyframes","useTheme","styled","is","Icon","baseStyles","buttonStyles","black","getPortalElement","document","querySelector","createPortalElement","newElement","createElement","classList","add","portalHide","portalShow","CloseButton","button","Content","div","Overlay","props","darkMode","isActive","StyledPortal","zIndex","Portal","children","closeOnClickOverlay","closeOnEsc","hideOverlay","onClose","onOpen","showCloseButton","isReady","setReady","portal","closePortal","destroyPortal","current","function","removeEventListener","handleKeyDown","previousIsActive","previousCloseOnEsc","event","keyCode","stopPropagation","element","body","appendChild","addEventListener","openPortal","hasChanged","handleClickClose","content","push","_jsxs","_jsx","onClick","title","type","name","size","defaultProps"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Portal.tsx"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useMount, usePrevious, useUnmount, useUpdateEffect } from 'react-use';\nimport { css, keyframes, useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport is from 'is-lite';\n\nimport { Icon } from './Icon';\nimport { baseStyles, buttonStyles } from './modules/system';\nimport { black } from './modules/theme';\nimport { StyledProps, WithChildren } from './types';\n\nexport interface PortalProps extends StyledProps, WithChildren {\n  /** @default true */\n  closeOnClickOverlay?: boolean;\n  /** @default true */\n  closeOnEsc?: boolean;\n  /** @default false */\n  hideOverlay?: boolean;\n  /** @default false */\n  isActive?: boolean;\n  onClose?: () => void;\n  onOpen?: () => void;\n  /** @default false */\n  showCloseButton?: boolean;\n  /** @default 1000 */\n  zIndex?: number;\n}\n\nfunction getPortalElement() {\n  return document.querySelector('.__portal');\n}\n\nfunction createPortalElement() {\n  const newElement = document.createElement('div');\n\n  newElement.classList.add('__portal');\n\n  return newElement;\n}\n\nconst portalHide = keyframes`\n  0% {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  100% {\n    opacity: 0;\n    visibility: hidden;\n  }\n`;\n\nconst portalShow = keyframes`\n  0% {\n    opacity: 0;\n    visibility: hidden;\n  }\n\n  100% {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n\nconst CloseButton = styled.button`\n  ${baseStyles};\n  ${buttonStyles};\n  align-items: center;\n  color: ${black};\n  display: inline-flex;\n  height: 30px;\n  justify-content: center;\n  line-height: 1;\n  pointer-events: all;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 30px;\n  z-index: 20;\n`;\n\nconst Content = styled.div`\n  max-height: 100%;\n  position: relative;\n  width: auto;\n  z-index: 10;\n`;\n\nconst Overlay = styled.div<Pick<PortalProps, 'isActive'> & { darkMode: boolean }>(props => {\n  const { darkMode, isActive } = props;\n\n  return css`\n    background-color: ${darkMode ? 'rgba(222, 222, 222, 0.3)' : 'rgba(0, 0, 0, 0.3)'};\n    bottom: 0;\n    left: 0;\n    opacity: ${isActive ? 1 : 0};\n    position: absolute;\n    right: 0;\n    top: 0;\n    transition: opacity 0.5s;\n  `;\n});\n\nconst StyledPortal = styled.div<Pick<PortalProps, 'isActive' | 'zIndex'>>(props => {\n  const { isActive, zIndex } = props;\n\n  return css`\n    align-items: center;\n    animation-duration: 0.5s;\n    animation-name: ${portalHide};\n    animation-play-state: ${isActive ? 'running' : 'paused'};\n    animation-name: ${isActive ? portalShow : portalHide};\n    animation-direction: ${isActive ? 'normal' : 'reverse'};\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    left: 0;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: ${zIndex};\n  `;\n});\n\nexport function Portal(props: PortalProps) {\n  const {\n    children,\n    closeOnClickOverlay,\n    closeOnEsc,\n    hideOverlay,\n    isActive,\n    onClose,\n    onOpen,\n    showCloseButton,\n    zIndex = 1000,\n  } = props;\n  const [isReady, setReady] = useState(false);\n  const portal = useRef<Element | null>(null);\n  const { darkMode = false } = useTheme();\n\n  const closePortal = useRef(() => {\n    destroyPortal.current();\n\n    if (is.function(onClose)) {\n      onClose();\n    }\n  });\n  const destroyPortal = useRef(() => {\n    if (closeOnEsc) {\n      document.removeEventListener('keydown', handleKeyDown);\n    }\n  });\n\n  const previousIsActive = usePrevious(isActive);\n  const previousCloseOnEsc = usePrevious(closeOnEsc);\n\n  const handleKeyDown = useCallback(event => {\n    if (event.keyCode === 27) {\n      event.stopPropagation();\n      closePortal.current();\n    }\n  }, []);\n\n  useMount(() => {\n    let element = getPortalElement();\n\n    if (!getPortalElement()) {\n      element = createPortalElement();\n      document.body.appendChild(element);\n    }\n\n    portal.current = element;\n    setReady(true);\n\n    if (isActive && closeOnEsc) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n  });\n\n  useUnmount(() => {\n    destroyPortal.current();\n  });\n\n  const openPortal = useCallback(() => {\n    if (is.function(onOpen)) {\n      onOpen();\n    }\n\n    if (closeOnEsc) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n  }, [closeOnEsc, handleKeyDown, onOpen]);\n\n  useUpdateEffect(() => {\n    const hasChanged = previousIsActive !== isActive;\n\n    if (hasChanged && isActive) {\n      openPortal();\n    } else if (hasChanged && !isActive) {\n      destroyPortal.current();\n    }\n\n    if (previousCloseOnEsc !== closeOnEsc) {\n      if (closeOnEsc) {\n        document.addEventListener('keydown', handleKeyDown);\n      } else {\n        document.removeEventListener('keydown', handleKeyDown);\n      }\n    }\n  }, [\n    closeOnEsc,\n    destroyPortal,\n    handleKeyDown,\n    isActive,\n    openPortal,\n    previousIsActive,\n    previousCloseOnEsc,\n  ]);\n\n  const handleClickClose = useCallback(() => {\n    if (!closeOnClickOverlay) {\n      return;\n    }\n\n    closePortal.current();\n  }, [closeOnClickOverlay, closePortal]);\n\n  const content = [];\n\n  if (isActive) {\n    content.push(children);\n  }\n\n  if (!isReady || !portal.current) {\n    return null;\n  }\n\n  return createPortal(\n    <StyledPortal data-component-name=\"Portal\" isActive={isActive} zIndex={zIndex}>\n      {!hideOverlay && (\n        <Overlay\n          darkMode={darkMode}\n          data-component-name=\"PortalOverlay\"\n          isActive={isActive}\n          onClick={handleClickClose}\n        />\n      )}\n      {showCloseButton && (\n        <CloseButton onClick={handleClickClose} title=\"Close\" type=\"button\">\n          <Icon name=\"close-o\" size={20} title=\"Close\" />\n        </CloseButton>\n      )}\n      <Content data-component-name=\"PortalContent\">{content}</Content>\n    </StyledPortal>,\n    portal.current,\n  );\n}\n\nPortal.defaultProps = {\n  closeOnClickOverlay: true,\n  closeOnEsc: true,\n  hideOverlay: false,\n  isActive: false,\n  showCloseButton: false,\n  zIndex: 1000,\n};\n"]},"metadata":{},"sourceType":"module"}