{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { memo } from 'react';\nimport { Box, BoxCenter } from '../Box';\nimport { Loader } from '../Loader';\nimport { Paragraph } from '../Paragraph';\n\nfunction DataTableBody(props) {\n  const {\n    clean,\n    columns,\n    data,\n    defaultColumn,\n    isResponsive,\n    loading\n  } = props;\n  const isInitialLoad = loading && !data.length;\n  return _jsxs(Box, {\n    \"data-component-name\": \"DataTableBody\",\n    minHeight: 55,\n    position: \"relative\",\n    children: [data.map((item, index) => _jsx(Box, {\n      \"data-component-name\": \"DataTableBodyRow\",\n      display: \"flex\",\n      mb: \"sm\",\n      radius: clean ? undefined : 'sm',\n      variant: clean ? undefined : 'white',\n      wrap: isResponsive ? 'wrap' : 'nowrap',\n      children: columns.map((_ref, columnIndex) => {\n        let {\n          hideOnResponsive,\n          isAction,\n          key,\n          max,\n          min,\n          size,\n          title\n        } = _ref;\n        let maxWidth = max || size;\n\n        if (isResponsive && defaultColumn === key) {\n          maxWidth = undefined;\n        }\n\n        return _jsxs(Box, {\n          align: \"flex-start\",\n          border: clean ? [{\n            side: 'top'\n          }] : undefined,\n          \"data-component-name\": \"DataTableBodyColumn\",\n          direction: \"column\",\n          display: \"flex\",\n          flex: \"grow\",\n          maxWidth: maxWidth,\n          minWidth: min || size,\n          order: isAction ? 1 : columnIndex + 1,\n          padding: !clean ? 'md' : undefined,\n          pt: clean ? 'sm' : undefined,\n          wrap: \"wrap\",\n          children: [isResponsive && !hideOnResponsive && _jsx(Paragraph, {\n            mb: \"xxs\",\n            size: \"small\",\n            style: {\n              textTransform: 'uppercase'\n            },\n            variant: \"gray\",\n            children: title\n          }), item[key]]\n        }, key);\n      })\n    }, item.id || index)), loading && _jsx(BoxCenter, {\n      bottom: 0,\n      left: 0,\n      opacity: isInitialLoad ? 1 : 0.5,\n      pointerEvents: \"fill\",\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n      variant: !isInitialLoad ? 'gray' : undefined,\n      zIndex: 10,\n      children: _jsx(Loader, {})\n    })]\n  });\n}\n\nexport default memo(DataTableBody);","map":{"version":3,"mappings":"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","names":["memo","Box","BoxCenter","Loader","Paragraph","DataTableBody","props","clean","columns","data","defaultColumn","isResponsive","loading","isInitialLoad","length","_jsxs","minHeight","position","children","map","item","index","_jsx","display","mb","radius","undefined","variant","wrap","columnIndex","hideOnResponsive","isAction","key","max","min","size","title","maxWidth","align","border","side","direction","flex","minWidth","order","padding","pt","style","textTransform","id","bottom","left","opacity","pointerEvents","right","top","zIndex"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/DataTable/Body.tsx"],"sourcesContent":["import { memo } from 'react';\n\nimport type { DataTableProps } from './index';\n\nimport { Box, BoxCenter } from '../Box';\nimport { Loader } from '../Loader';\nimport { Paragraph } from '../Paragraph';\n\ninterface Props\n  extends Pick<DataTableProps, 'clean' | 'columns' | 'data' | 'defaultColumn' | 'loading'> {\n  isResponsive: boolean;\n}\n\nfunction DataTableBody(props: Props): JSX.Element {\n  const { clean, columns, data, defaultColumn, isResponsive, loading } = props;\n  const isInitialLoad = loading && !data.length;\n\n  return (\n    <Box data-component-name=\"DataTableBody\" minHeight={55} position=\"relative\">\n      {data.map((item, index) => (\n        <Box\n          key={item.id || index}\n          data-component-name=\"DataTableBodyRow\"\n          display=\"flex\"\n          mb=\"sm\"\n          radius={clean ? undefined : 'sm'}\n          variant={clean ? undefined : 'white'}\n          wrap={isResponsive ? 'wrap' : 'nowrap'}\n        >\n          {columns.map(\n            ({ hideOnResponsive, isAction, key, max, min, size, title }, columnIndex) => {\n              let maxWidth = max || size;\n\n              if (isResponsive && defaultColumn === key) {\n                maxWidth = undefined;\n              }\n\n              return (\n                <Box\n                  key={key}\n                  align=\"flex-start\"\n                  border={clean ? [{ side: 'top' }] : undefined}\n                  data-component-name=\"DataTableBodyColumn\"\n                  direction=\"column\"\n                  display=\"flex\"\n                  flex=\"grow\"\n                  maxWidth={maxWidth}\n                  minWidth={min || size}\n                  order={isAction ? 1 : columnIndex + 1}\n                  padding={!clean ? 'md' : undefined}\n                  pt={clean ? 'sm' : undefined}\n                  wrap=\"wrap\"\n                >\n                  {isResponsive && !hideOnResponsive && (\n                    <Paragraph\n                      mb=\"xxs\"\n                      size=\"small\"\n                      style={{ textTransform: 'uppercase' }}\n                      variant=\"gray\"\n                    >\n                      {title}\n                    </Paragraph>\n                  )}\n                  {item[key]}\n                </Box>\n              );\n            },\n          )}\n        </Box>\n      ))}\n      {loading && (\n        <BoxCenter\n          bottom={0}\n          left={0}\n          opacity={isInitialLoad ? 1 : 0.5}\n          pointerEvents=\"fill\"\n          position=\"absolute\"\n          right={0}\n          top={0}\n          variant={!isInitialLoad ? 'gray' : undefined}\n          zIndex={10}\n        >\n          <Loader />\n        </BoxCenter>\n      )}\n    </Box>\n  );\n}\n\nexport default memo(DataTableBody);\n"]},"metadata":{},"sourceType":"module"}