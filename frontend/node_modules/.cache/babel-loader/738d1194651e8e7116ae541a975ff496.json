{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport is from 'is-lite';\nimport { BoxCenter } from './Box';\nimport { Icon } from './Icon';\nimport { px } from './modules/helpers';\nimport { getStyledOptions, marginStyles } from './modules/system';\nconst StyledComponentWrapper = styled('div', getStyledOptions('prefix', 'suffix'))(props => {\n  const {\n    width = '100%'\n  } = props;\n  return css`\n    position: relative;\n    width: ${px(width)};\n    ${marginStyles(props)};\n  `;\n});\nexport const ComponentWrapper = forwardRef((props, ref) => {\n  const {\n    children,\n    prefix,\n    size,\n    suffix,\n    ...rest\n  } = props;\n  const content = {};\n  const height = is.array(size) ? size[1] : size;\n  const width = is.array(size) ? size[0] : size;\n\n  if (prefix) {\n    content.prefix = _jsx(BoxCenter, {\n      bottom: 0,\n      height: height,\n      left: 0,\n      position: \"absolute\",\n      top: 0,\n      width: width,\n      children: is.string(prefix) ? _jsx(Icon, {\n        name: prefix,\n        size: 20\n      }) : prefix\n    });\n  }\n\n  if (suffix) {\n    content.suffix = _jsx(BoxCenter, {\n      bottom: 0,\n      height: height,\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n      width: width,\n      children: is.string(suffix) ? _jsx(Icon, {\n        name: suffix,\n        size: 20\n      }) : suffix\n    });\n  }\n\n  return _jsxs(StyledComponentWrapper, {\n    ref: ref,\n    \"data-component-name\": \"ComponentWrapper\",\n    ...rest,\n    children: [content.prefix, children, content.suffix]\n  });\n});\nComponentWrapper.defaultProps = {\n  size: 40,\n  width: '100%'\n};","map":{"version":3,"mappings":";AAAA,SAAwBA,UAAxB,QAAwD,OAAxD;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,EAAP,MAAe,SAAf;AAEA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,EAAT,QAAmB,mBAAnB;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,kBAA/C;AAgBA,MAAMC,sBAAsB,GAAGP,MAAM,CACnC,KADmC,EAEnCK,gBAAgB,CAAC,QAAD,EAAW,QAAX,CAFmB,CAAN,CAGDG,KAAK,IAAG;EACpC,MAAM;IAAEC,KAAK,GAAG;EAAV,IAAqBD,KAA3B;EAEA,OAAOT,GAAG;;aAECK,EAAE,CAACK,KAAD,CAAO;MAChBH,YAAY,CAACE,KAAD,CAAO;GAHvB;AAKD,CAX8B,CAA/B;AAaA,OAAO,MAAME,gBAAgB,GAAGZ,UAAU,CAAwC,CAACU,KAAD,EAAQG,GAAR,KAAe;EAC/F,MAAM;IAAEC,QAAF;IAAYC,MAAZ;IAAoBC,IAApB;IAA0BC,MAA1B;IAAkC,GAAGC;EAArC,IAA8CR,KAApD;EAEA,MAAMS,OAAO,GAAc,EAA3B;EACA,MAAMC,MAAM,GAAGjB,EAAE,CAACkB,KAAH,CAASL,IAAT,IAAiBA,IAAI,CAAC,CAAD,CAArB,GAA2BA,IAA1C;EACA,MAAML,KAAK,GAAGR,EAAE,CAACkB,KAAH,CAASL,IAAT,IAAiBA,IAAI,CAAC,CAAD,CAArB,GAA2BA,IAAzC;;EAEA,IAAID,MAAJ,EAAY;IACVI,OAAO,CAACJ,MAAR,GACEO,KAAClB,SAAD,EAAU;MAACmB,MAAM,EAAE,CAAT;MAAYH,MAAM,EAAEA,MAApB;MAA4BI,IAAI,EAAE,CAAlC;MAAqCC,QAAQ,EAAC,UAA9C;MAAyDC,GAAG,EAAE,CAA9D;MAAiEf,KAAK,EAAEA,KAAxE;MAA6EG,UACpFX,EAAE,CAACwB,MAAH,CAAUZ,MAAV,IAAoBO,KAACjB,IAAD,EAAK;QAACuB,IAAI,EAAEb,MAAP;QAAeC,IAAI,EAAE;MAArB,CAAL,CAApB,GAAuDD;IADhD,CAAV,CADF;EAKD;;EAED,IAAIE,MAAJ,EAAY;IACVE,OAAO,CAACF,MAAR,GACEK,KAAClB,SAAD,EAAU;MAACmB,MAAM,EAAE,CAAT;MAAYH,MAAM,EAAEA,MAApB;MAA4BK,QAAQ,EAAC,UAArC;MAAgDI,KAAK,EAAE,CAAvD;MAA0DH,GAAG,EAAE,CAA/D;MAAkEf,KAAK,EAAEA,KAAzE;MAA8EG,UACrFX,EAAE,CAACwB,MAAH,CAAUV,MAAV,IAAoBK,KAACjB,IAAD,EAAK;QAACuB,IAAI,EAAEX,MAAP;QAAeD,IAAI,EAAE;MAArB,CAAL,CAApB,GAAuDC;IADhD,CAAV,CADF;EAKD;;EAED,OACEa,MAACrB,sBAAD,EAAuB;IAACI,GAAG,EAAEA,GAAN;IAAS,uBAAsB,kBAA/B;IAAiD,GAAKK,IAAtD;IAA0DJ,WAC9EK,OAAO,CAACJ,MADsE,EAE9ED,QAF8E,EAG9EK,OAAO,CAACF,MAHsE;EAA1D,CAAvB,CADF;AAOD,CA9ByC,CAAnC;AAgCPL,gBAAgB,CAACmB,YAAjB,GAAgC;EAC9Bf,IAAI,EAAE,EADwB;EAE9BL,KAAK,EAAE;AAFuB,CAAhC","names":["forwardRef","css","styled","is","BoxCenter","Icon","px","getStyledOptions","marginStyles","StyledComponentWrapper","props","width","ComponentWrapper","ref","children","prefix","size","suffix","rest","content","height","array","_jsx","bottom","left","position","top","string","name","right","_jsxs","defaultProps"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/ComponentWrapper.tsx"],"sourcesContent":["import { CSSProperties, forwardRef, ReactElement } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { AnyObject, StringOrNumber } from '@gilbarbara/types';\nimport is from 'is-lite';\n\nimport { BoxCenter } from './Box';\nimport { Icon } from './Icon';\nimport { px } from './modules/helpers';\nimport { getStyledOptions, marginStyles } from './modules/system';\nimport { Icons, StyledProps, WithChildren, WithMargin } from './types';\n\nexport interface ComponentWrapperProps extends StyledProps, WithChildren, WithMargin {\n  prefix?: Icons | ReactElement;\n  /**\n   * A single value for both or [width,height]\n   * @default 32\n   */\n  size?: StringOrNumber | [StringOrNumber, StringOrNumber];\n  style?: CSSProperties;\n  suffix?: Icons | ReactElement;\n  /** @default 100% */\n  width?: StringOrNumber;\n}\n\nconst StyledComponentWrapper = styled(\n  'div',\n  getStyledOptions('prefix', 'suffix'),\n)<{ width?: StringOrNumber }>(props => {\n  const { width = '100%' } = props;\n\n  return css`\n    position: relative;\n    width: ${px(width)};\n    ${marginStyles(props)};\n  `;\n});\n\nexport const ComponentWrapper = forwardRef<HTMLDivElement, ComponentWrapperProps>((props, ref) => {\n  const { children, prefix, size, suffix, ...rest } = props;\n\n  const content: AnyObject = {};\n  const height = is.array(size) ? size[1] : size;\n  const width = is.array(size) ? size[0] : size;\n\n  if (prefix) {\n    content.prefix = (\n      <BoxCenter bottom={0} height={height} left={0} position=\"absolute\" top={0} width={width}>\n        {is.string(prefix) ? <Icon name={prefix} size={20} /> : prefix}\n      </BoxCenter>\n    );\n  }\n\n  if (suffix) {\n    content.suffix = (\n      <BoxCenter bottom={0} height={height} position=\"absolute\" right={0} top={0} width={width}>\n        {is.string(suffix) ? <Icon name={suffix} size={20} /> : suffix}\n      </BoxCenter>\n    );\n  }\n\n  return (\n    <StyledComponentWrapper ref={ref} data-component-name=\"ComponentWrapper\" {...rest}>\n      {content.prefix}\n      {children}\n      {content.suffix}\n    </StyledComponentWrapper>\n  );\n});\n\nComponentWrapper.defaultProps = {\n  size: 40,\n  width: '100%',\n};\n"]},"metadata":{},"sourceType":"module"}