{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport { getMarginProps, handleKeyDown, StyledCheckboxRadioInput, StyledElement, StyledLabel, StyledText } from './utils';\n/**\n * Use the RadioGroup component instead of this.\n * RadioGroup accepts an `items` prop that render this component in a group and is responsible for managing state and interactions.\n */\n\nexport const Radio = forwardRef((props, ref) => {\n  const {\n    align,\n    checked,\n    defaultChecked,\n    id,\n    label,\n    name,\n    size,\n    style,\n    ...rest\n  } = props;\n  return _jsxs(StyledLabel, {\n    align: align,\n    category: \"radio\",\n    \"data-component-name\": \"Radio\",\n    htmlFor: id,\n    ...getMarginProps(props),\n    children: [_jsx(StyledCheckboxRadioInput, {\n      ref: ref,\n      \"aria-checked\": !!(checked || defaultChecked),\n      checked: checked,\n      defaultChecked: defaultChecked,\n      id: id,\n      name: name,\n      role: \"radio\",\n      type: \"radio\",\n      ...rest\n    }), _jsx(StyledElement, {\n      category: \"radio\",\n      label: label,\n      onKeyDown: handleKeyDown,\n      size: size,\n      style: style,\n      tabIndex: props.disabled ? -1 : 0\n    }), label && _jsx(StyledText, {\n      category: \"radio\",\n      size: size,\n      children: label\n    })]\n  });\n});\nRadio.defaultProps = {\n  align: 'center',\n  disabled: false,\n  size: 'md'\n};","map":{"version":3,"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,SACEC,cADF,EAEEC,aAFF,EAIEC,wBAJF,EAKEC,aALF,EAMEC,WANF,EAOEC,UAPF,QAQO,SARP;AAUA;;;;;AAIA,OAAO,MAAMC,KAAK,GAAGP,UAAU,CAA+B,CAACQ,KAAD,EAAQC,GAAR,KAAe;EAC3E,MAAM;IAAEC,KAAF;IAASC,OAAT;IAAkBC,cAAlB;IAAkCC,EAAlC;IAAsCC,KAAtC;IAA6CC,IAA7C;IAAmDC,IAAnD;IAAyDC,KAAzD;IAAgE,GAAGC;EAAnE,IAA4EV,KAAlF;EAEA,OACEW,MAACd,WAAD,EAAY;IACVK,KAAK,EAAEA,KADG;IAEVU,QAAQ,EAAC,OAFC;IAEM,uBACI,OAHV;IAIVC,OAAO,EAAER,EAJC;IAIC,GACPZ,cAAc,CAACO,KAAD,CALR;IAKec,WAEzBC,KAACpB,wBAAD,EAAyB;MACvBM,GAAG,EAAEA,GADkB;MACf,gBACM,CAAC,EAAEE,OAAO,IAAIC,cAAb,CAFQ;MAGvBD,OAAO,EAAEA,OAHc;MAIvBC,cAAc,EAAEA,cAJO;MAKvBC,EAAE,EAAEA,EALmB;MAMvBE,IAAI,EAAEA,IANiB;MAOvBS,IAAI,EAAC,OAPkB;MAQvBC,IAAI,EAAC,OARkB;MAQX,GACRP;IATmB,CAAzB,CAFyB,EAazBK,KAACnB,aAAD,EAAc;MACZgB,QAAQ,EAAC,OADG;MAEZN,KAAK,EAAEA,KAFK;MAGZY,SAAS,EAAExB,aAHC;MAIZc,IAAI,EAAEA,IAJM;MAKZC,KAAK,EAAEA,KALK;MAMZU,QAAQ,EAAEnB,KAAK,CAACoB,QAAN,GAAiB,CAAC,CAAlB,GAAsB;IANpB,CAAd,CAbyB,EAqBxBd,KAAK,IACJS,KAACjB,UAAD,EAAW;MAACc,QAAQ,EAAC,OAAV;MAAkBJ,IAAI,EAAEA,IAAxB;MAA4BM,UACpCR;IADQ,CAAX,CAtBuB;EALf,CAAZ,CADF;AAkCD,CArC8B,CAAxB;AAuCPP,KAAK,CAACsB,YAAN,GAAqB;EACnBnB,KAAK,EAAE,QADY;EAEnBkB,QAAQ,EAAE,KAFS;EAGnBZ,IAAI,EAAE;AAHa,CAArB","names":["forwardRef","getMarginProps","handleKeyDown","StyledCheckboxRadioInput","StyledElement","StyledLabel","StyledText","Radio","props","ref","align","checked","defaultChecked","id","label","name","size","style","rest","_jsxs","category","htmlFor","children","_jsx","role","type","onKeyDown","tabIndex","disabled","defaultProps"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/CheckboxAndRadio/Radio.tsx"],"sourcesContent":["import { forwardRef } from 'react';\n\nimport {\n  getMarginProps,\n  handleKeyDown,\n  RadioProps,\n  StyledCheckboxRadioInput,\n  StyledElement,\n  StyledLabel,\n  StyledText,\n} from './utils';\n\n/**\n * Use the RadioGroup component instead of this.\n * RadioGroup accepts an `items` prop that render this component in a group and is responsible for managing state and interactions.\n */\nexport const Radio = forwardRef<HTMLInputElement, RadioProps>((props, ref) => {\n  const { align, checked, defaultChecked, id, label, name, size, style, ...rest } = props;\n\n  return (\n    <StyledLabel\n      align={align}\n      category=\"radio\"\n      data-component-name=\"Radio\"\n      htmlFor={id}\n      {...getMarginProps(props)}\n    >\n      <StyledCheckboxRadioInput\n        ref={ref}\n        aria-checked={!!(checked || defaultChecked)}\n        checked={checked}\n        defaultChecked={defaultChecked}\n        id={id}\n        name={name}\n        role=\"radio\"\n        type=\"radio\"\n        {...rest}\n      />\n      <StyledElement\n        category=\"radio\"\n        label={label}\n        onKeyDown={handleKeyDown}\n        size={size}\n        style={style}\n        tabIndex={props.disabled ? -1 : 0}\n      />\n      {label && (\n        <StyledText category=\"radio\" size={size}>\n          {label}\n        </StyledText>\n      )}\n    </StyledLabel>\n  );\n});\n\nRadio.defaultProps = {\n  align: 'center',\n  disabled: false,\n  size: 'md',\n};\n"]},"metadata":{},"sourceType":"module"}