{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useRef } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport Add from './Add';\nimport { BoxInline } from '../Box';\nimport { getColorVariant, getTheme } from '../modules/helpers';\nimport { getStyledOptions, isDarkMode } from '../modules/system';\n\nconst getSharedStyles = spacing => css`\n  align-items: center;\n  display: flex;\n  padding: ${spacing.xs} ${spacing.sm};\n  width: 100%;\n`;\n\nconst Centered = styled('div', getStyledOptions())(props => {\n  const {\n    withBorder\n  } = props;\n  const {\n    grayLight,\n    spacing\n  } = getTheme(props);\n  return css`\n    ${getSharedStyles(spacing)};\n    border-top: ${withBorder ? `1px solid ${grayLight}` : 0};\n    justify-content: center;\n    padding: 0;\n  `;\n});\nconst Empty = styled('div', getStyledOptions())(props => {\n  const {\n    spacing\n  } = getTheme(props);\n  return css`\n    ${getSharedStyles(spacing)};\n    justify-content: center;\n  `;\n});\nconst Input = styled('input', getStyledOptions())(props => {\n  const {\n    shade,\n    variant = 'primary'\n  } = props;\n  const {\n    radius,\n    variants\n  } = getTheme(props);\n  const {\n    bg\n  } = getColorVariant(variant, shade, variants);\n  return css`\n    border-radius: ${radius.xs};\n\n    :focus {\n      filter: drop-shadow(0 0 2px ${bg});\n      outline: none;\n    }\n  `;\n});\nconst Item = styled('div', getStyledOptions())(props => {\n  const {\n    disabled,\n    hovered,\n    selected,\n    shade,\n    variant = 'primary'\n  } = props;\n  const {\n    darkMode,\n    grayDark,\n    grayDarker,\n    grayLight,\n    grayLighter,\n    grayLightest,\n    grayMid,\n    spacing,\n    variants,\n    white\n  } = getTheme(props);\n  const {\n    bg,\n    color\n  } = getColorVariant(variant, shade, variants);\n  const {\n    bg: bgHoverLight,\n    color: colorHoverLight\n  } = getColorVariant(variant, 'lightest', variants);\n  const {\n    bg: bgHoverDark,\n    color: colorHoverDark\n  } = getColorVariant(variant, 'darker', variants);\n  let itemBgColor = darkMode ? grayDarker : white;\n  let itemColor = darkMode ? grayLighter : grayDarker;\n  const bgHover = darkMode ? bgHoverDark : bgHoverLight;\n  const colorHover = darkMode ? colorHoverDark : colorHoverLight;\n\n  if (disabled) {\n    itemBgColor = darkMode ? grayDark : grayLightest;\n    itemColor = darkMode ? grayLight : grayMid;\n  }\n\n  return css`\n    ${getSharedStyles(spacing)};\n    background-color: ${itemBgColor};\n    color: ${itemColor};\n    cursor: pointer;\n    pointer-events: ${disabled ? 'none' : undefined};\n    ${selected && css`\n      background-color: ${bg};\n      color: ${color};\n    `};\n    ${hovered && !disabled && css`\n      background-color: ${bgHover};\n      color: ${colorHover};\n    `};\n\n    &:hover {\n      background-color: ${bgHover};\n      color: ${colorHover};\n    }\n  `;\n});\nconst List = styled('div', getStyledOptions())(props => {\n  const {\n    maxHeight\n  } = props;\n  const {\n    grayDark,\n    grayDarker,\n    grayLight,\n    white\n  } = getTheme(props);\n  const darkMode = isDarkMode(props);\n  return css`\n    background-color: ${darkMode ? grayDarker : white};\n    color: ${darkMode ? grayLight : grayDark};\n    cursor: default;\n    max-height: ${maxHeight || 'none'};\n    overflow-y: auto;\n  `;\n});\nconst Items = styled('div', getStyledOptions())(props => {\n  const {\n    grayDark,\n    grayDarker,\n    grayLight,\n    white\n  } = getTheme(props);\n  const darkMode = isDarkMode(props);\n  return css`\n    background-color: ${darkMode ? grayDarker : white};\n    color: ${darkMode ? grayLight : grayDark};\n  `;\n});\nconst Search = styled('div', getStyledOptions())(props => {\n  const {\n    darkColor,\n    grayDarker,\n    grayLight,\n    grayMid,\n    lightColor,\n    spacing,\n    typography,\n    white\n  } = getTheme(props);\n  const darkMode = isDarkMode(props);\n  return css`\n    ${getSharedStyles(spacing)};\n    background-color: ${darkMode ? grayDarker : white};\n    padding: ${spacing.sm};\n    position: sticky;\n    top: 0;\n\n    input {\n      background-color: ${darkMode ? grayDarker : white};\n      border: 1px solid ${darkMode ? grayMid : grayLight};\n      color: ${darkMode ? lightColor : darkColor};\n      font-size: ${typography.regular.fontSize};\n      line-height: 1.6;\n      padding: ${spacing.xxs} ${spacing.sm};\n      width: 100%;\n    }\n  `;\n});\n\nfunction DropdownOptions(_ref) {\n  let {\n    methods,\n    onCreate,\n    onSearch,\n    props,\n    shade,\n    state,\n    variant\n  } = _ref;\n  const {\n    addItem,\n    getLabels,\n    getStyles,\n    removeItem,\n    setSearch\n  } = methods;\n  const {\n    autoFocus,\n    create,\n    options,\n    searchable\n  } = props;\n  const {\n    cursor,\n    search,\n    values\n  } = state;\n  const searchInput = useRef(null);\n  let children;\n\n  if (create) {\n    children = _jsx(Add, {\n      methods: methods,\n      onCreate: onCreate,\n      props: props,\n      shade: shade,\n      state: state,\n      variant: variant\n    });\n  }\n\n  const regexp = new RegExp(search.replace(/[$()*+.?[\\\\\\]^{|}]/g, '\\\\$&'), 'i');\n  useEffect(() => {\n    const {\n      current\n    } = searchInput;\n\n    if (current && autoFocus) {\n      current.focus();\n    }\n  }, [autoFocus]);\n\n  const handleSearch = event => {\n    const {\n      value\n    } = event.target;\n    setSearch(event);\n\n    if (onSearch) {\n      onSearch(value);\n    }\n  };\n\n  const availableOptions = options.filter(item => regexp.test(`${item.label || item.value}`)).map((option, index) => {\n    const {\n      disabled,\n      label,\n      prefix,\n      suffix,\n      value\n    } = option;\n    const isSelected = values.includes(option);\n    const isHovered = cursor === index;\n    return _jsxs(Item, {\n      \"data-component-name\": \"DropdownItem\",\n      disabled: disabled,\n      hovered: isHovered,\n      onClick: () => isSelected ? removeItem(null, option, false) : addItem(option),\n      role: \"listitem\",\n      selected: isSelected,\n      shade: shade,\n      variant: variant,\n      children: [prefix && _jsx(BoxInline, {\n        \"data-component-name\": \"DropdownOptionPrefix\",\n        mr: \"xxs\",\n        children: prefix\n      }), _jsx(BoxInline, {\n        flex: \"grow\",\n        children: label || value\n      }), suffix && _jsx(BoxInline, {\n        \"data-component-name\": \"DropdownOptionSuffix\",\n        ml: \"xxs\",\n        children: suffix\n      })]\n    }, option.value);\n  });\n  const output = {\n    options: availableOptions\n  };\n\n  if (children && !availableOptions.length) {\n    output.create = _jsx(Centered, {\n      withBorder: !!availableOptions.length,\n      children: children\n    });\n  }\n\n  if (!children && !availableOptions.length) {\n    output.options = _jsx(Empty, {\n      children: getLabels().noData\n    });\n  }\n\n  return _jsxs(List, {\n    \"data-component-name\": \"DropdownOptions\",\n    maxHeight: getStyles().menuMaxHeight,\n    children: [searchable && _jsx(Search, {\n      \"data-component-name\": \"DropdownOptionsSearch\",\n      children: _jsx(Input, {\n        ref: searchInput,\n        onChange: handleSearch,\n        shade: shade,\n        type: \"text\",\n        value: search,\n        variant: variant\n      })\n    }), _jsx(Items, {\n      \"data-component-name\": \"DropdownOptionsList\",\n      children: output.options\n    }), output.create]\n  });\n}\n\nexport default DropdownOptions;","map":{"version":3,"mappings":"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","names":["useEffect","useRef","css","styled","Add","BoxInline","getColorVariant","getTheme","getStyledOptions","isDarkMode","getSharedStyles","spacing","xs","sm","Centered","props","withBorder","grayLight","Empty","Input","shade","variant","radius","variants","bg","Item","disabled","hovered","selected","darkMode","grayDark","grayDarker","grayLighter","grayLightest","grayMid","white","color","bgHoverLight","colorHoverLight","bgHoverDark","colorHoverDark","itemBgColor","itemColor","bgHover","colorHover","undefined","List","maxHeight","Items","Search","darkColor","lightColor","typography","regular","fontSize","xxs","DropdownOptions","methods","onCreate","onSearch","state","addItem","getLabels","getStyles","removeItem","setSearch","autoFocus","create","options","searchable","cursor","search","values","searchInput","children","_jsx","regexp","RegExp","replace","current","focus","handleSearch","event","value","target","availableOptions","filter","item","test","label","map","option","index","prefix","suffix","isSelected","includes","isHovered","_jsxs","onClick","role","mr","flex","ml","output","length","noData","menuMaxHeight","ref","onChange","type"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Dropdown/Items.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useRef } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { ComponentProps } from '@gilbarbara/react-dropdown';\nimport { AnyObject, StringOrNumber } from '@gilbarbara/types';\n\nimport Add from './Add';\n\nimport { BoxInline } from '../Box';\nimport { getColorVariant, getTheme } from '../modules/helpers';\nimport { getStyledOptions, isDarkMode } from '../modules/system';\nimport { DropdownProps, Theme, WithColor } from '../types';\n\ninterface DropdownOptionsProps\n  extends WithColor,\n    ComponentProps,\n    Pick<DropdownProps, 'allowCreate' | 'onCreate' | 'onSearch'> {}\n\nconst getSharedStyles = (spacing: Theme['spacing']) => css`\n  align-items: center;\n  display: flex;\n  padding: ${spacing.xs} ${spacing.sm};\n  width: 100%;\n`;\n\nconst Centered = styled(\n  'div',\n  getStyledOptions(),\n)<{ withBorder: boolean }>(props => {\n  const { withBorder } = props;\n  const { grayLight, spacing } = getTheme(props);\n\n  return css`\n    ${getSharedStyles(spacing)};\n    border-top: ${withBorder ? `1px solid ${grayLight}` : 0};\n    justify-content: center;\n    padding: 0;\n  `;\n});\n\nconst Empty = styled(\n  'div',\n  getStyledOptions(),\n)(props => {\n  const { spacing } = getTheme(props);\n\n  return css`\n    ${getSharedStyles(spacing)};\n    justify-content: center;\n  `;\n});\n\nconst Input = styled(\n  'input',\n  getStyledOptions(),\n)<WithColor>(props => {\n  const { shade, variant = 'primary' } = props;\n  const { radius, variants } = getTheme(props);\n  const { bg } = getColorVariant(variant, shade, variants);\n\n  return css`\n    border-radius: ${radius.xs};\n\n    :focus {\n      filter: drop-shadow(0 0 2px ${bg});\n      outline: none;\n    }\n  `;\n});\n\nconst Item = styled(\n  'div',\n  getStyledOptions(),\n)<WithColor & { disabled?: boolean; hovered: boolean; selected: boolean }>(props => {\n  const { disabled, hovered, selected, shade, variant = 'primary' } = props;\n  const {\n    darkMode,\n    grayDark,\n    grayDarker,\n    grayLight,\n    grayLighter,\n    grayLightest,\n    grayMid,\n    spacing,\n    variants,\n    white,\n  } = getTheme(props);\n  const { bg, color } = getColorVariant(variant, shade, variants);\n  const { bg: bgHoverLight, color: colorHoverLight } = getColorVariant(\n    variant,\n    'lightest',\n    variants,\n  );\n  const { bg: bgHoverDark, color: colorHoverDark } = getColorVariant(variant, 'darker', variants);\n\n  let itemBgColor = darkMode ? grayDarker : white;\n  let itemColor = darkMode ? grayLighter : grayDarker;\n  const bgHover = darkMode ? bgHoverDark : bgHoverLight;\n  const colorHover = darkMode ? colorHoverDark : colorHoverLight;\n\n  if (disabled) {\n    itemBgColor = darkMode ? grayDark : grayLightest;\n    itemColor = darkMode ? grayLight : grayMid;\n  }\n\n  return css`\n    ${getSharedStyles(spacing)};\n    background-color: ${itemBgColor};\n    color: ${itemColor};\n    cursor: pointer;\n    pointer-events: ${disabled ? 'none' : undefined};\n    ${selected &&\n    css`\n      background-color: ${bg};\n      color: ${color};\n    `};\n    ${hovered &&\n    !disabled &&\n    css`\n      background-color: ${bgHover};\n      color: ${colorHover};\n    `};\n\n    &:hover {\n      background-color: ${bgHover};\n      color: ${colorHover};\n    }\n  `;\n});\n\nconst List = styled(\n  'div',\n  getStyledOptions(),\n)<{ maxHeight?: StringOrNumber }>(props => {\n  const { maxHeight } = props;\n  const { grayDark, grayDarker, grayLight, white } = getTheme(props);\n  const darkMode = isDarkMode(props);\n\n  return css`\n    background-color: ${darkMode ? grayDarker : white};\n    color: ${darkMode ? grayLight : grayDark};\n    cursor: default;\n    max-height: ${maxHeight || 'none'};\n    overflow-y: auto;\n  `;\n});\n\nconst Items = styled(\n  'div',\n  getStyledOptions(),\n)(props => {\n  const { grayDark, grayDarker, grayLight, white } = getTheme(props);\n  const darkMode = isDarkMode(props);\n\n  return css`\n    background-color: ${darkMode ? grayDarker : white};\n    color: ${darkMode ? grayLight : grayDark};\n  `;\n});\n\nconst Search = styled(\n  'div',\n  getStyledOptions(),\n)(props => {\n  const { darkColor, grayDarker, grayLight, grayMid, lightColor, spacing, typography, white } =\n    getTheme(props);\n  const darkMode = isDarkMode(props);\n\n  return css`\n    ${getSharedStyles(spacing)};\n    background-color: ${darkMode ? grayDarker : white};\n    padding: ${spacing.sm};\n    position: sticky;\n    top: 0;\n\n    input {\n      background-color: ${darkMode ? grayDarker : white};\n      border: 1px solid ${darkMode ? grayMid : grayLight};\n      color: ${darkMode ? lightColor : darkColor};\n      font-size: ${typography.regular.fontSize};\n      line-height: 1.6;\n      padding: ${spacing.xxs} ${spacing.sm};\n      width: 100%;\n    }\n  `;\n});\n\nfunction DropdownOptions({\n  methods,\n  onCreate,\n  onSearch,\n  props,\n  shade,\n  state,\n  variant,\n}: DropdownOptionsProps) {\n  const { addItem, getLabels, getStyles, removeItem, setSearch } = methods;\n  const { autoFocus, create, options, searchable } = props;\n  const { cursor, search, values } = state;\n\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  let children;\n\n  if (create) {\n    children = (\n      <Add\n        methods={methods}\n        onCreate={onCreate}\n        props={props}\n        shade={shade}\n        state={state}\n        variant={variant}\n      />\n    );\n  }\n\n  const regexp = new RegExp(search.replace(/[$()*+.?[\\\\\\]^{|}]/g, '\\\\$&'), 'i');\n\n  useEffect(() => {\n    const { current } = searchInput;\n\n    if (current && autoFocus) {\n      current.focus();\n    }\n  }, [autoFocus]);\n\n  const handleSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSearch(event);\n\n    if (onSearch) {\n      onSearch(value);\n    }\n  };\n\n  const availableOptions = options\n    .filter(item => regexp.test(`${item.label || item.value}`))\n    .map((option, index) => {\n      const { disabled, label, prefix, suffix, value } = option;\n      const isSelected = values.includes(option);\n      const isHovered = cursor === index;\n\n      return (\n        <Item\n          key={option.value}\n          data-component-name=\"DropdownItem\"\n          disabled={disabled}\n          hovered={isHovered}\n          onClick={() => (isSelected ? removeItem(null, option, false) : addItem(option))}\n          role=\"listitem\"\n          selected={isSelected}\n          shade={shade}\n          variant={variant}\n        >\n          {prefix && (\n            <BoxInline data-component-name=\"DropdownOptionPrefix\" mr=\"xxs\">\n              {prefix}\n            </BoxInline>\n          )}\n          <BoxInline flex=\"grow\">{label || value}</BoxInline>\n          {suffix && (\n            <BoxInline data-component-name=\"DropdownOptionSuffix\" ml=\"xxs\">\n              {suffix}\n            </BoxInline>\n          )}\n        </Item>\n      );\n    });\n\n  const output: AnyObject = {\n    options: availableOptions,\n  };\n\n  if (children && !availableOptions.length) {\n    output.create = <Centered withBorder={!!availableOptions.length}>{children}</Centered>;\n  }\n\n  if (!children && !availableOptions.length) {\n    output.options = <Empty>{getLabels().noData}</Empty>;\n  }\n\n  return (\n    <List data-component-name=\"DropdownOptions\" maxHeight={getStyles().menuMaxHeight}>\n      {searchable && (\n        <Search data-component-name=\"DropdownOptionsSearch\">\n          <Input\n            ref={searchInput}\n            onChange={handleSearch}\n            shade={shade}\n            type=\"text\"\n            value={search}\n            variant={variant}\n          />\n        </Search>\n      )}\n      <Items data-component-name=\"DropdownOptionsList\">{output.options}</Items>\n      {output.create}\n    </List>\n  );\n}\n\nexport default DropdownOptions;\n"]},"metadata":{},"sourceType":"module"}