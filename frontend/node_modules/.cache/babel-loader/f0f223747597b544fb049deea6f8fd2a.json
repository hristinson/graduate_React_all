{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Children, forwardRef, isValidElement } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { getTheme } from './modules/helpers';\nimport { baseStyles, borderStyles, flexItemStyles, getStyledOptions, layoutStyles, marginStyles, paddingStyles, radiusStyles, shadowStyles } from './modules/system';\nexport const StyledSpacer = styled('div', getStyledOptions('fill'))(props => {\n  const {\n    direction,\n    distribution,\n    verticalAlign,\n    wrap\n  } = props;\n  const isHorizontal = direction === 'horizontal';\n  let distributionStyles;\n\n  if (distribution) {\n    distributionStyles = css`\n      justify-content: ${isHorizontal ? distribution : verticalAlign};\n    `;\n  }\n\n  return css`\n    ${baseStyles(props)};\n    align-items: ${isHorizontal ? verticalAlign : distribution};\n    display: flex;\n    flex-direction: ${direction === 'vertical' ? 'column' : 'row'};\n    flex-wrap: ${wrap ? 'wrap' : 'nowrap'};\n    ${distributionStyles};\n    ${borderStyles(props)};\n    ${flexItemStyles(props)};\n    ${layoutStyles(props)};\n    ${marginStyles(props)};\n    ${paddingStyles(props)};\n    ${radiusStyles(props)};\n    ${shadowStyles(props)};\n  `;\n});\nconst StyledSpacerItem = styled('div', getStyledOptions('fill'))(props => {\n  const {\n    direction,\n    flex,\n    gap = 'sm',\n    gapVertical,\n    grow\n  } = props;\n  const {\n    spacing\n  } = getTheme(props);\n  const isHorizontal = direction === 'horizontal';\n  return css`\n    display: ${isHorizontal ? 'flex' : 'block'};\n    flex: ${flex};\n    margin-bottom: ${gapVertical ? spacing[gapVertical] : undefined};\n    width: ${!isHorizontal && grow ? '100%' : 'auto'};\n\n    &:not(:last-of-type) {\n      margin-right: ${isHorizontal ? spacing[gap] : undefined};\n      margin-bottom: ${!isHorizontal ? spacing[gap] : undefined};\n    }\n  `;\n});\n/**\n * You can use a \"data-flex\" property on the children to grow or shrink to fit the space available.\n */\n\nexport const Spacer = forwardRef((props, ref) => {\n  const {\n    children,\n    ...rest\n  } = props;\n  const nodes = Children.toArray(children).map((child, index) => {\n    const key = `SpacerItem-${index}`;\n    const flex = isValidElement(child) ? child.props['data-flex'] : undefined;\n    return _jsx(StyledSpacerItem, {\n      flex: flex,\n      ...rest,\n      \"data-component-name\": \"SpacerItem\",\n      children: child\n    }, key);\n  });\n  return _jsx(StyledSpacer, {\n    ref: ref,\n    \"data-component-name\": \"Spacer\",\n    ...rest,\n    children: nodes\n  });\n});\nSpacer.defaultProps = {\n  direction: 'horizontal',\n  distribution: 'start',\n  gap: 'sm',\n  grow: false,\n  radius: false,\n  shadow: false,\n  verticalAlign: 'center',\n  wrap: true\n};","map":{"version":3,"mappings":"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","names":["Children","forwardRef","isValidElement","css","styled","getTheme","baseStyles","borderStyles","flexItemStyles","getStyledOptions","layoutStyles","marginStyles","paddingStyles","radiusStyles","shadowStyles","StyledSpacer","props","direction","distribution","verticalAlign","wrap","isHorizontal","distributionStyles","StyledSpacerItem","flex","gap","gapVertical","grow","spacing","undefined","Spacer","ref","children","rest","nodes","toArray","map","child","index","key","_jsx","defaultProps","radius","shadow"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Spacer.tsx"],"sourcesContent":["import { Children, forwardRef, isValidElement } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { StandardShorthandProperties } from 'csstype';\n\nimport { getTheme } from './modules/helpers';\nimport {\n  baseStyles,\n  borderStyles,\n  flexItemStyles,\n  getStyledOptions,\n  layoutStyles,\n  marginStyles,\n  paddingStyles,\n  radiusStyles,\n  shadowStyles,\n} from './modules/system';\nimport {\n  ComponentProps,\n  Direction,\n  Spacing,\n  StyledProps,\n  WithBorder,\n  WithChildren,\n  WithFlexItem,\n  WithLayout,\n  WithMargin,\n  WithPadding,\n  WithRadius,\n  WithShadow,\n} from './types';\n\nexport interface SpacerKnownProps\n  extends StyledProps,\n    WithBorder,\n    WithChildren,\n    WithFlexItem,\n    WithLayout,\n    WithMargin,\n    WithPadding,\n    WithRadius,\n    WithShadow {\n  /**\n   * The spacer direction.\n   * @default horizontal\n   */\n  direction?: Direction;\n  /**\n   * Distribution of the children in the spacer.\n   * @default start\n   */\n  distribution?: 'start' | 'center' | 'end' | 'space-between' | 'space-around' | 'space-evenly';\n  /**\n   * The horizontal gap between the children.\n   * @default sm\n   */\n  gap?: Spacing;\n  /** The vertical gap between the children. */\n  gapVertical?: Spacing;\n  /**\n   * Expand child width (Vertical only)\n   * @default false\n   */\n  grow?: boolean;\n  /**\n   * The vertical alignment of the children.\n   * @default center\n   * */\n  verticalAlign?: 'center' | 'end' | 'start' | 'stretch';\n  /**\n   * Wrap the children if they don't fit in the container.\n   * @default true\n   * */\n  wrap?: boolean;\n}\n\nexport type SpacerProps = ComponentProps<HTMLDivElement, SpacerKnownProps>;\n\nexport const StyledSpacer = styled(\n  'div',\n  getStyledOptions('fill'),\n)<SpacerProps>(props => {\n  const { direction, distribution, verticalAlign, wrap } = props;\n  const isHorizontal = direction === 'horizontal';\n\n  let distributionStyles;\n\n  if (distribution) {\n    distributionStyles = css`\n      justify-content: ${isHorizontal ? distribution : verticalAlign};\n    `;\n  }\n\n  return css`\n    ${baseStyles(props)};\n    align-items: ${isHorizontal ? verticalAlign : distribution};\n    display: flex;\n    flex-direction: ${direction === 'vertical' ? 'column' : 'row'};\n    flex-wrap: ${wrap ? 'wrap' : 'nowrap'};\n    ${distributionStyles};\n    ${borderStyles(props)};\n    ${flexItemStyles(props)};\n    ${layoutStyles(props)};\n    ${marginStyles(props)};\n    ${paddingStyles(props)};\n    ${radiusStyles(props)};\n    ${shadowStyles(props)};\n  `;\n});\n\nconst StyledSpacerItem = styled(\n  'div',\n  getStyledOptions('fill'),\n)<Partial<SpacerProps> & { flex?: StandardShorthandProperties['flex'] }>(props => {\n  const { direction, flex, gap = 'sm', gapVertical, grow } = props;\n  const { spacing } = getTheme(props);\n  const isHorizontal = direction === 'horizontal';\n\n  return css`\n    display: ${isHorizontal ? 'flex' : 'block'};\n    flex: ${flex};\n    margin-bottom: ${gapVertical ? spacing[gapVertical] : undefined};\n    width: ${!isHorizontal && grow ? '100%' : 'auto'};\n\n    &:not(:last-of-type) {\n      margin-right: ${isHorizontal ? spacing[gap] : undefined};\n      margin-bottom: ${!isHorizontal ? spacing[gap] : undefined};\n    }\n  `;\n});\n\n/**\n * You can use a \"data-flex\" property on the children to grow or shrink to fit the space available.\n */\nexport const Spacer = forwardRef<HTMLDivElement, SpacerProps>((props, ref) => {\n  const { children, ...rest } = props;\n\n  const nodes = Children.toArray(children).map((child, index) => {\n    const key = `SpacerItem-${index}`;\n    const flex = isValidElement(child) ? child.props['data-flex'] : undefined;\n\n    return (\n      <StyledSpacerItem key={key} flex={flex} {...rest} data-component-name=\"SpacerItem\">\n        {child}\n      </StyledSpacerItem>\n    );\n  });\n\n  return (\n    <StyledSpacer ref={ref} data-component-name=\"Spacer\" {...rest}>\n      {nodes}\n    </StyledSpacer>\n  );\n});\n\nSpacer.defaultProps = {\n  direction: 'horizontal',\n  distribution: 'start',\n  gap: 'sm',\n  grow: false,\n  radius: false,\n  shadow: false,\n  verticalAlign: 'center',\n  wrap: true,\n};\n"]},"metadata":{},"sourceType":"module"}