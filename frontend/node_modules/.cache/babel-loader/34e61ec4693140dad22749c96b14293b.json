{"ast":null,"code":"import { invariant, isNumber, round } from './utils';\n/**\n * Convert hue to RGB using chroma and median point\n */\n\nexport default function hue2rgb(point, chroma, h) {\n  invariant(isNumber(point) && isNumber(chroma) && isNumber(h), 'point, chroma and h are required');\n  let hue = h;\n\n  if (hue < 0) {\n    hue += 1;\n  }\n\n  if (hue > 1) {\n    hue -= 1;\n  }\n\n  if (hue < 1 / 6) {\n    return round(point + (chroma - point) * 6 * hue, 4);\n  }\n\n  if (hue < 1 / 2) {\n    return round(chroma, 4);\n  }\n\n  if (hue < 2 / 3) {\n    return round(point + (chroma - point) * (2 / 3 - hue) * 6, 4);\n  }\n\n  return round(point, 4);\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,KAA9B,QAA2C,SAA3C;AAEA;;;;AAGA,eAAc,SAAUC,OAAV,CAAkBC,KAAlB,EAAiCC,MAAjC,EAAiDC,CAAjD,EAA0D;EACtEN,SAAS,CAACC,QAAQ,CAACG,KAAD,CAAR,IAAmBH,QAAQ,CAACI,MAAD,CAA3B,IAAuCJ,QAAQ,CAACK,CAAD,CAAhD,EAAqD,kCAArD,CAAT;EACA,IAAIC,GAAG,GAAGD,CAAV;;EAEA,IAAIC,GAAG,GAAG,CAAV,EAAa;IACXA,GAAG,IAAI,CAAP;EACD;;EAED,IAAIA,GAAG,GAAG,CAAV,EAAa;IACXA,GAAG,IAAI,CAAP;EACD;;EAED,IAAIA,GAAG,GAAG,IAAI,CAAd,EAAiB;IACf,OAAOL,KAAK,CAACE,KAAK,GAAG,CAACC,MAAM,GAAGD,KAAV,IAAmB,CAAnB,GAAuBG,GAAhC,EAAqC,CAArC,CAAZ;EACD;;EAED,IAAIA,GAAG,GAAG,IAAI,CAAd,EAAiB;IACf,OAAOL,KAAK,CAACG,MAAD,EAAS,CAAT,CAAZ;EACD;;EAED,IAAIE,GAAG,GAAG,IAAI,CAAd,EAAiB;IACf,OAAOL,KAAK,CAACE,KAAK,GAAG,CAACC,MAAM,GAAGD,KAAV,KAAoB,IAAI,CAAJ,GAAQG,GAA5B,IAAmC,CAA5C,EAA+C,CAA/C,CAAZ;EACD;;EAED,OAAOL,KAAK,CAACE,KAAD,EAAQ,CAAR,CAAZ;AACD","names":["invariant","isNumber","round","hue2rgb","point","chroma","h","hue"],"sources":["/My_WORK/graduate_React/frontend/node_modules/colorizr/src/modules/hue2rgb.ts"],"sourcesContent":["import { invariant, isNumber, round } from './utils';\n\n/**\n * Convert hue to RGB using chroma and median point\n */\nexport default function hue2rgb(point: number, chroma: number, h: number): number {\n  invariant(isNumber(point) && isNumber(chroma) && isNumber(h), 'point, chroma and h are required');\n  let hue = h;\n\n  if (hue < 0) {\n    hue += 1;\n  }\n\n  if (hue > 1) {\n    hue -= 1;\n  }\n\n  if (hue < 1 / 6) {\n    return round(point + (chroma - point) * 6 * hue, 4);\n  }\n\n  if (hue < 1 / 2) {\n    return round(chroma, 4);\n  }\n\n  if (hue < 2 / 3) {\n    return round(point + (chroma - point) * (2 / 3 - hue) * 6, 4);\n  }\n\n  return round(point, 4);\n}\n"]},"metadata":{},"sourceType":"module"}