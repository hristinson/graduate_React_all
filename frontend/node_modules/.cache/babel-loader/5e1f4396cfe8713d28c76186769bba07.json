{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { rangeLimit, round } from '@gilbarbara/helpers';\nimport { getColorVariant, getTheme, px } from './modules/helpers';\nimport { baseStyles, getStyledOptions, isDarkMode, marginStyles } from './modules/system';\nimport { Paragraph } from './Paragraph';\nexport const StyledProgressBar = styled('div', getStyledOptions())(props => {\n  const {\n    width = '100%'\n  } = props;\n  const {\n    grayLight\n  } = getTheme(props);\n  return css`\n    ${baseStyles(props)};\n    color: ${isDarkMode(props) && grayLight};\n    width: ${px(width)};\n    ${marginStyles(props)};\n  `;\n});\nconst StyledProgressTrack = styled('div', getStyledOptions())(props => {\n  const {\n    backgroundShade = 'light',\n    large,\n    shade,\n    variant = 'primary'\n  } = props;\n  const {\n    radius,\n    variants\n  } = getTheme(props);\n  const {\n    bg\n  } = getColorVariant(variant, shade, variants);\n  const height = large ? '8px' : '4px';\n  return css`\n    background-color: ${variants.gray[backgroundShade].bg};\n    border-radius: ${large ? radius.xs : radius.xxs};\n    line-height: 1;\n    height: ${height};\n    overflow: hidden;\n\n    > div {\n      background-color: ${bg};\n      height: ${height};\n      transition: width 0.4s;\n      width: 0;\n    }\n  `;\n});\nexport const ProgressBar = forwardRef((props, ref) => {\n  const {\n    hideText,\n    step,\n    steps\n  } = props;\n  const percentage = round(rangeLimit(step / steps * 100));\n  const stepLimit = rangeLimit(step, 0, steps);\n  return _jsxs(StyledProgressBar, {\n    ref: ref,\n    ...props,\n    \"aria-valuemax\": 100,\n    \"aria-valuemin\": 0,\n    \"aria-valuenow\": percentage,\n    \"data-component-name\": \"ProgressBar\",\n    role: \"progressbar\",\n    children: [!hideText && _jsx(Paragraph, {\n      mb: \"xs\",\n      size: \"large\",\n      children: `Step ${stepLimit} of ${steps}`\n    }), _jsx(StyledProgressTrack, { ...props,\n      children: _jsx(\"div\", {\n        style: {\n          width: `${percentage}%`\n        }\n      })\n    })]\n  });\n});\nProgressBar.defaultProps = {\n  backgroundShade: 'light',\n  hideText: false,\n  large: false,\n  shade: 'mid',\n  variant: 'primary',\n  width: '100%'\n};","map":{"version":3,"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,qBAAlC;AAGA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,EAApC,QAA8C,mBAA9C;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,UAAvC,EAAmDC,YAAnD,QAAuE,kBAAvE;AACA,SAASC,SAAT,QAA0B,aAA1B;AAkBA,OAAO,MAAMC,iBAAiB,GAAGX,MAAM,CACrC,KADqC,EAErCO,gBAAgB,EAFqB,CAAN,CAGbK,KAAK,IAAG;EAC1B,MAAM;IAAEC,KAAK,GAAG;EAAV,IAAqBD,KAA3B;EAEA,MAAM;IAAEE;EAAF,IAAgBV,QAAQ,CAACQ,KAAD,CAA9B;EAEA,OAAOb,GAAG;MACNO,UAAU,CAACM,KAAD,CAAO;aACVJ,UAAU,CAACI,KAAD,CAAV,IAAqBE,SAAS;aAC9BT,EAAE,CAACQ,KAAD,CAAO;MAChBJ,YAAY,CAACG,KAAD,CAAO;GAJvB;AAMD,CAdgC,CAA1B;AAgBP,MAAMG,mBAAmB,GAAGf,MAAM,CAChC,KADgC,EAEhCO,gBAAgB,EAFgB,CAAN,CAGRK,KAAK,IAAG;EAC1B,MAAM;IAAEI,eAAe,GAAG,OAApB;IAA6BC,KAA7B;IAAoCC,KAApC;IAA2CC,OAAO,GAAG;EAArD,IAAmEP,KAAzE;EACA,MAAM;IAAEQ,MAAF;IAAUC;EAAV,IAAuBjB,QAAQ,CAACQ,KAAD,CAArC;EACA,MAAM;IAAEU;EAAF,IAASnB,eAAe,CAACgB,OAAD,EAAUD,KAAV,EAAiBG,QAAjB,CAA9B;EAEA,MAAME,MAAM,GAAGN,KAAK,GAAG,KAAH,GAAW,KAA/B;EAEA,OAAOlB,GAAG;wBACYsB,QAAQ,CAACG,IAAT,CAAcR,eAAd,EAA+BM,EAAE;qBACpCL,KAAK,GAAGG,MAAM,CAACK,EAAV,GAAeL,MAAM,CAACM,GAAG;;cAErCH,MAAM;;;;0BAIMD,EAAE;gBACZC,MAAM;;;;GATpB;AAcD,CAxB2B,CAA5B;AA0BA,OAAO,MAAMI,WAAW,GAAG7B,UAAU,CAAmC,CAACc,KAAD,EAAQgB,GAAR,KAAe;EACrF,MAAM;IAAEC,QAAF;IAAYC,IAAZ;IAAkBC;EAAlB,IAA4BnB,KAAlC;EACA,MAAMoB,UAAU,GAAG9B,KAAK,CAACD,UAAU,CAAE6B,IAAI,GAAGC,KAAR,GAAiB,GAAlB,CAAX,CAAxB;EACA,MAAME,SAAS,GAAGhC,UAAU,CAAC6B,IAAD,EAAO,CAAP,EAAUC,KAAV,CAA5B;EAEA,OACEG,MAACvB,iBAAD,EAAkB;IAChBiB,GAAG,EAAEA,GADW;IACR,GACJhB,KAFY;IAEP,iBACM,GAHC;IAGE,iBACH,CAJC;IAIA,iBACDoB,UALC;IAKS,uBACL,aANJ;IAOhBG,IAAI,EAAC,aAPW;IAOEC,WAEjB,CAACP,QAAD,IAAaQ,KAAC3B,SAAD,EAAU;MAAC4B,EAAE,EAAC,IAAJ;MAASC,IAAI,EAAC,OAAd;MAAqBH,UAAE,QAAQH,SAAS,OAAOF,KAAK;IAApD,CAAV,CAFI,EAGlBM,KAACtB,mBAAD,EAAoB,KAAKH,KAAL;MAAUwB,UAC5BC;QAAKG,KAAK,EAAE;UAAE3B,KAAK,EAAE,GAAGmB,UAAU;QAAtB;MAAZ;IADkB,CAApB,CAHkB;EAPF,CAAlB,CADF;AAgBD,CArBoC,CAA9B;AAuBPL,WAAW,CAACc,YAAZ,GAA2B;EACzBzB,eAAe,EAAE,OADQ;EAEzBa,QAAQ,EAAE,KAFe;EAGzBZ,KAAK,EAAE,KAHkB;EAIzBC,KAAK,EAAE,KAJkB;EAKzBC,OAAO,EAAE,SALgB;EAMzBN,KAAK,EAAE;AANkB,CAA3B","names":["forwardRef","css","styled","rangeLimit","round","getColorVariant","getTheme","px","baseStyles","getStyledOptions","isDarkMode","marginStyles","Paragraph","StyledProgressBar","props","width","grayLight","StyledProgressTrack","backgroundShade","large","shade","variant","radius","variants","bg","height","gray","xs","xxs","ProgressBar","ref","hideText","step","steps","percentage","stepLimit","_jsxs","role","children","_jsx","mb","size","style","defaultProps"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/ProgressBar.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { rangeLimit, round } from '@gilbarbara/helpers';\nimport { StringOrNumber } from '@gilbarbara/types';\n\nimport { getColorVariant, getTheme, px } from './modules/helpers';\nimport { baseStyles, getStyledOptions, isDarkMode, marginStyles } from './modules/system';\nimport { Paragraph } from './Paragraph';\nimport { ComponentProps, Shades, StyledProps, WithColor, WithMargin } from './types';\n\nexport interface ProgressBarKnownProps extends StyledProps, WithColor, WithMargin {\n  /** @default light */\n  backgroundShade?: Shades;\n  /** @default false */\n  hideText?: boolean;\n  /** @default false */\n  large?: boolean;\n  step: number;\n  steps: number;\n  /** @default 100% */\n  width?: StringOrNumber;\n}\n\nexport type ProgressBarProps = ComponentProps<HTMLDivElement, ProgressBarKnownProps>;\n\nexport const StyledProgressBar = styled(\n  'div',\n  getStyledOptions(),\n)<ProgressBarProps>(props => {\n  const { width = '100%' } = props;\n\n  const { grayLight } = getTheme(props);\n\n  return css`\n    ${baseStyles(props)};\n    color: ${isDarkMode(props) && grayLight};\n    width: ${px(width)};\n    ${marginStyles(props)};\n  `;\n});\n\nconst StyledProgressTrack = styled(\n  'div',\n  getStyledOptions(),\n)<ProgressBarProps>(props => {\n  const { backgroundShade = 'light', large, shade, variant = 'primary' } = props;\n  const { radius, variants } = getTheme(props);\n  const { bg } = getColorVariant(variant, shade, variants);\n\n  const height = large ? '8px' : '4px';\n\n  return css`\n    background-color: ${variants.gray[backgroundShade].bg};\n    border-radius: ${large ? radius.xs : radius.xxs};\n    line-height: 1;\n    height: ${height};\n    overflow: hidden;\n\n    > div {\n      background-color: ${bg};\n      height: ${height};\n      transition: width 0.4s;\n      width: 0;\n    }\n  `;\n});\n\nexport const ProgressBar = forwardRef<HTMLDivElement, ProgressBarProps>((props, ref) => {\n  const { hideText, step, steps } = props;\n  const percentage = round(rangeLimit((step / steps) * 100));\n  const stepLimit = rangeLimit(step, 0, steps);\n\n  return (\n    <StyledProgressBar\n      ref={ref}\n      {...props}\n      aria-valuemax={100}\n      aria-valuemin={0}\n      aria-valuenow={percentage}\n      data-component-name=\"ProgressBar\"\n      role=\"progressbar\"\n    >\n      {!hideText && <Paragraph mb=\"xs\" size=\"large\">{`Step ${stepLimit} of ${steps}`}</Paragraph>}\n      <StyledProgressTrack {...props}>\n        <div style={{ width: `${percentage}%` }} />\n      </StyledProgressTrack>\n    </StyledProgressBar>\n  );\n});\n\nProgressBar.defaultProps = {\n  backgroundShade: 'light',\n  hideText: false,\n  large: false,\n  shade: 'mid',\n  variant: 'primary',\n  width: '100%',\n};\n"]},"metadata":{},"sourceType":"module"}