{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef, useCallback, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useUpdateEffect } from 'react-use';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport is from 'is-lite';\nimport { MenuItem } from './Item';\nimport { ButtonBase } from '../ButtonBase';\nimport { Icon } from '../Icon';\nimport { getTheme, px, recursiveChildrenEnhancer } from '../modules/helpers';\nimport { getStyledOptions, isDarkMode } from '../modules/system';\nimport { easing } from '../modules/theme';\nconst StyledMenu = styled.div`\n  display: inline-flex;\n  position: relative;\n  vertical-align: middle;\n`;\nconst StyledMenuItems = styled('div', getStyledOptions())(props => {\n  const {\n    active,\n    minWidth,\n    position\n  } = props;\n  const [positionMain, positionCross] = position.split('-');\n  const {\n    grayDarker,\n    grayScale,\n    radius,\n    shadow,\n    spacing,\n    white\n  } = getTheme(props);\n  const darkMode = isDarkMode(props);\n  return css`\n    position: absolute;\n    transform: scaleY(0);\n    transition: transform 0.3s ${easing};\n    z-index: 10;\n\n    ${active && css`\n      transform: scaleY(1);\n    `}\n\n    ${positionMain === 'bottom' && css`\n      top: 100%;\n      transform-origin: top;\n    `}\n\n    ${positionMain === 'left' && css`\n      right: 100%;\n    `}\n\n    ${positionMain === 'right' && css`\n      left: 100%;\n    `}\n\n    ${positionMain === 'top' && css`\n      bottom: 100%;\n      transform-origin: bottom;\n    `}\n\n    ${positionCross === 'bottom' && css`\n      bottom: 0;\n      transform-origin: bottom;\n    `}\n\n    ${positionCross === 'left' && css`\n      left: 0;\n    `}\n\n    ${positionCross === 'right' && css`\n      right: 0;\n    `}\n\n    ${positionCross === 'top' && css`\n      top: 0;\n      transform-origin: top;\n    `}\n\n  > div {\n      background-color: ${darkMode ? grayDarker : white};\n      border-radius: ${radius.xxs};\n      box-shadow: ${shadow.low};\n      color: ${darkMode ? grayScale['20'] : grayDarker};\n      min-width: ${px(minWidth)};\n      overflow: hidden;\n\n      ${positionMain === 'bottom' && css`\n        margin-top: ${spacing.xxs};\n      `}\n\n      ${positionMain === 'left' && css`\n        margin-right: ${spacing.xxs};\n      `}\n\n      ${positionMain === 'right' && css`\n        margin-left: ${spacing.xxs};\n      `}\n\n      ${positionMain === 'top' && css`\n        margin-bottom: ${spacing.xxs};\n      `}\n    }\n  `;\n});\nconst StyledMenuButton = styled(ButtonBase)(props => {\n  const {\n    spacing\n  } = getTheme(props);\n  return css`\n    display: flex;\n    min-height: ${spacing.lg};\n    min-width: ${spacing.lg};\n\n    :disabled {\n      cursor: not-allowed;\n    }\n  `;\n});\nexport const Menu = forwardRef((props, ref) => {\n  const {\n    children,\n    component = _jsx(Icon, {\n      name: \"more-vertical-o\",\n      size: 24,\n      title: null\n    }),\n    disabled,\n    minWidth = 200,\n    onToggle,\n    open,\n    position = 'bottom-right',\n    shade,\n    trigger,\n    variant\n  } = props;\n  const [active, setActive] = useState(open ?? false);\n  const localRef = useRef(null);\n  const handleClickOutside = useCallback(_ref => {\n    let {\n      target\n    } = _ref;\n\n    if (localRef.current?.contains(target) || !active) {\n      return;\n    }\n\n    document.removeEventListener('click', handleClickOutside);\n    setActive(false);\n  }, [active]);\n  useUpdateEffect(() => {\n    if (active && !is.boolean(open)) {\n      document.addEventListener('click', handleClickOutside);\n    }\n\n    if (onToggle) {\n      onToggle(active);\n    }\n\n    return () => {\n      if (!is.boolean(open)) {\n        document.removeEventListener('click', handleClickOutside);\n      }\n    };\n  }, [active, handleClickOutside, onToggle, open]);\n  const handleToggleMenu = useCallback(() => {\n    if (disabled || is.boolean(open)) {\n      return;\n    }\n\n    setActive(a => !a);\n  }, [disabled, open]);\n  return _jsxs(StyledMenu, {\n    ref: mergeRefs([localRef, ref]),\n    \"data-component-name\": \"Menu\",\n    onMouseEnter: trigger === 'hover' ? handleToggleMenu : undefined,\n    onMouseLeave: trigger === 'hover' ? handleToggleMenu : undefined,\n    children: [_jsx(StyledMenuButton, {\n      \"aria-label\": active ? 'Close menu' : 'Open menu',\n      \"data-component-name\": \"MenuButton\",\n      disabled: disabled,\n      onClick: trigger === 'click' ? handleToggleMenu : undefined,\n      title: active ? 'Close menu' : 'Open menu',\n      type: \"button\",\n      children: component\n    }), _jsx(StyledMenuItems, {\n      active: active,\n      \"data-component-name\": \"MenuItems\",\n      minWidth: minWidth,\n      position: position,\n      children: _jsx(\"div\", {\n        \"data-component-name\": \"MenuItemsWrapper\",\n        children: recursiveChildrenEnhancer(children, {\n          closeMenu: handleToggleMenu,\n          shade,\n          variant\n        }, {\n          componentType: MenuItem\n        })\n      })\n    })]\n  });\n});\nMenu.defaultProps = {\n  disabled: false,\n  minWidth: 200,\n  position: 'bottom-right',\n  trigger: 'click',\n  variant: 'primary'\n};\nexport { MenuDivider } from './Divider';\nexport { MenuItem } from './Item';","map":{"version":3,"mappings":"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","names":["forwardRef","useCallback","useRef","useState","mergeRefs","useUpdateEffect","css","styled","is","MenuItem","ButtonBase","Icon","getTheme","px","recursiveChildrenEnhancer","getStyledOptions","isDarkMode","easing","StyledMenu","div","StyledMenuItems","props","active","minWidth","position","positionMain","positionCross","split","grayDarker","grayScale","radius","shadow","spacing","white","darkMode","xxs","low","StyledMenuButton","lg","Menu","ref","children","component","_jsx","name","size","title","disabled","onToggle","open","shade","trigger","variant","setActive","localRef","handleClickOutside","target","current","contains","document","removeEventListener","boolean","addEventListener","handleToggleMenu","a","_jsxs","onMouseEnter","undefined","onMouseLeave","onClick","type","closeMenu","componentType","defaultProps","MenuDivider"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Menu/index.tsx"],"sourcesContent":["import { forwardRef, ReactElement, useCallback, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useUpdateEffect } from 'react-use';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { StringOrNumber } from '@gilbarbara/types';\nimport is from 'is-lite';\n\nimport { MenuItem } from './Item';\n\nimport { ButtonBase } from '../ButtonBase';\nimport { Icon } from '../Icon';\nimport { getTheme, px, recursiveChildrenEnhancer } from '../modules/helpers';\nimport { getStyledOptions, isDarkMode } from '../modules/system';\nimport { easing } from '../modules/theme';\nimport { ComponentProps, Position, StyledProps, WithChildren, WithColor, WithOpen } from '../types';\n\nexport interface MenuKnownProps extends StyledProps, WithChildren, WithColor, WithOpen {\n  /** @default An Icon with more-vertical-o */\n  component?: ReactElement;\n  disabled?: boolean;\n  /** @default 200 */\n  minWidth?: StringOrNumber;\n  onToggle?: (status: boolean) => void;\n  /** @default bottom-right */\n  position?: Position;\n  /** @default click */\n  trigger?: 'click' | 'hover';\n}\n\nexport type MenuProps = ComponentProps<HTMLDivElement, MenuKnownProps>;\n\ninterface MenuItemsProps extends Required<Pick<MenuProps, 'minWidth' | 'position'>> {\n  active: boolean;\n}\n\nconst StyledMenu = styled.div`\n  display: inline-flex;\n  position: relative;\n  vertical-align: middle;\n`;\n\nconst StyledMenuItems = styled(\n  'div',\n  getStyledOptions(),\n)<MenuItemsProps>(props => {\n  const { active, minWidth, position } = props;\n  const [positionMain, positionCross] = position.split('-');\n\n  const { grayDarker, grayScale, radius, shadow, spacing, white } = getTheme(props);\n  const darkMode = isDarkMode(props);\n\n  return css`\n    position: absolute;\n    transform: scaleY(0);\n    transition: transform 0.3s ${easing};\n    z-index: 10;\n\n    ${active &&\n    css`\n      transform: scaleY(1);\n    `}\n\n    ${positionMain === 'bottom' &&\n    css`\n      top: 100%;\n      transform-origin: top;\n    `}\n\n    ${positionMain === 'left' &&\n    css`\n      right: 100%;\n    `}\n\n    ${positionMain === 'right' &&\n    css`\n      left: 100%;\n    `}\n\n    ${positionMain === 'top' &&\n    css`\n      bottom: 100%;\n      transform-origin: bottom;\n    `}\n\n    ${positionCross === 'bottom' &&\n    css`\n      bottom: 0;\n      transform-origin: bottom;\n    `}\n\n    ${positionCross === 'left' &&\n    css`\n      left: 0;\n    `}\n\n    ${positionCross === 'right' &&\n    css`\n      right: 0;\n    `}\n\n    ${positionCross === 'top' &&\n    css`\n      top: 0;\n      transform-origin: top;\n    `}\n\n  > div {\n      background-color: ${darkMode ? grayDarker : white};\n      border-radius: ${radius.xxs};\n      box-shadow: ${shadow.low};\n      color: ${darkMode ? grayScale['20'] : grayDarker};\n      min-width: ${px(minWidth)};\n      overflow: hidden;\n\n      ${positionMain === 'bottom' &&\n      css`\n        margin-top: ${spacing.xxs};\n      `}\n\n      ${positionMain === 'left' &&\n      css`\n        margin-right: ${spacing.xxs};\n      `}\n\n      ${positionMain === 'right' &&\n      css`\n        margin-left: ${spacing.xxs};\n      `}\n\n      ${positionMain === 'top' &&\n      css`\n        margin-bottom: ${spacing.xxs};\n      `}\n    }\n  `;\n});\n\nconst StyledMenuButton = styled(ButtonBase)(props => {\n  const { spacing } = getTheme(props);\n\n  return css`\n    display: flex;\n    min-height: ${spacing.lg};\n    min-width: ${spacing.lg};\n\n    :disabled {\n      cursor: not-allowed;\n    }\n  `;\n});\n\nexport const Menu = forwardRef<HTMLDivElement, MenuProps>((props, ref) => {\n  const {\n    children,\n    component = <Icon name=\"more-vertical-o\" size={24} title={null} />,\n    disabled,\n    minWidth = 200,\n    onToggle,\n    open,\n    position = 'bottom-right',\n    shade,\n    trigger,\n    variant,\n  } = props;\n  const [active, setActive] = useState(open ?? false);\n  const localRef = useRef<HTMLDivElement>(null);\n\n  const handleClickOutside = useCallback(\n    ({ target }) => {\n      if (localRef.current?.contains(target) || !active) {\n        return;\n      }\n\n      document.removeEventListener('click', handleClickOutside);\n\n      setActive(false);\n    },\n    [active],\n  );\n\n  useUpdateEffect(() => {\n    if (active && !is.boolean(open)) {\n      document.addEventListener('click', handleClickOutside);\n    }\n\n    if (onToggle) {\n      onToggle(active);\n    }\n\n    return () => {\n      if (!is.boolean(open)) {\n        document.removeEventListener('click', handleClickOutside);\n      }\n    };\n  }, [active, handleClickOutside, onToggle, open]);\n\n  const handleToggleMenu = useCallback(() => {\n    if (disabled || is.boolean(open)) {\n      return;\n    }\n\n    setActive(a => !a);\n  }, [disabled, open]);\n\n  return (\n    <StyledMenu\n      ref={mergeRefs([localRef, ref])}\n      data-component-name=\"Menu\"\n      onMouseEnter={trigger === 'hover' ? handleToggleMenu : undefined}\n      onMouseLeave={trigger === 'hover' ? handleToggleMenu : undefined}\n    >\n      <StyledMenuButton\n        aria-label={active ? 'Close menu' : 'Open menu'}\n        data-component-name=\"MenuButton\"\n        disabled={disabled}\n        onClick={trigger === 'click' ? handleToggleMenu : undefined}\n        title={active ? 'Close menu' : 'Open menu'}\n        type=\"button\"\n      >\n        {component}\n      </StyledMenuButton>\n      <StyledMenuItems\n        active={active}\n        data-component-name=\"MenuItems\"\n        minWidth={minWidth}\n        position={position}\n      >\n        <div data-component-name=\"MenuItemsWrapper\">\n          {recursiveChildrenEnhancer(\n            children,\n            { closeMenu: handleToggleMenu, shade, variant },\n            { componentType: MenuItem },\n          )}\n        </div>\n      </StyledMenuItems>\n    </StyledMenu>\n  );\n});\n\nMenu.defaultProps = {\n  disabled: false,\n  minWidth: 200,\n  position: 'bottom-right',\n  trigger: 'click',\n  variant: 'primary',\n};\n\nexport { MenuDivider } from './Divider';\nexport { MenuItem } from './Item';\n"]},"metadata":{},"sourceType":"module"}