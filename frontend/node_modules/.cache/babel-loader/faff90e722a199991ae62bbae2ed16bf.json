{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { BoxInline } from '../Box';\nimport { Icon } from '../Icon';\nimport { getTheme } from '../modules/helpers';\nimport { getStyledOptions, isDarkMode } from '../modules/system';\nexport const StyledContent = styled('div', getStyledOptions())`\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`;\nconst Item = styled('div', getStyledOptions())(props => {\n  const {\n    color,\n    multi\n  } = props;\n  const {\n    grayDark,\n    radius,\n    spacing,\n    white\n  } = getTheme(props);\n  const darkMode = isDarkMode(props);\n  let multiStyles;\n\n  if (multi) {\n    multiStyles = css`\n      border: 1px solid ${color};\n      border-radius: ${radius.xxs};\n      background-color: ${darkMode ? grayDark : white};\n      margin-bottom: ${spacing.xxs};\n      margin-right: ${spacing.xs};\n      margin-top: ${spacing.xxs};\n      padding: 3px 6px;\n    `;\n  }\n\n  return css`\n    align-items: center;\n    display: flex;\n    line-height: 1;\n    ${multiStyles};\n  `;\n});\nconst ItemClose = styled('span', getStyledOptions())(props => {\n  const {\n    spacing\n  } = getTheme(props);\n  return css`\n    display: inline-flex;\n    line-height: 1;\n    margin-left: ${spacing.xxs};\n  `;\n});\nconst Placeholder = styled('div', getStyledOptions())(props => {\n  const {\n    darkMode,\n    grayLight,\n    grayMid\n  } = getTheme(props);\n  return css`\n    align-items: center;\n    color: ${darkMode ? grayLight : grayMid};\n    display: flex;\n  `;\n});\n\nfunction DropdownContent(props) {\n  const {\n    methods: {\n      getStyles,\n      removeItem\n    },\n    props: {\n      multi,\n      placeholder\n    },\n    state: {\n      values\n    }\n  } = props;\n\n  const handleClickRemove = value => {\n    return event => {\n      event.stopPropagation();\n      removeItem(null, value, true);\n    };\n  };\n\n  if (values.length) {\n    return _jsx(StyledContent, {\n      children: values.map(item => {\n        const {\n          label,\n          prefix,\n          suffix,\n          value\n        } = item || {};\n        return _jsxs(Item, {\n          color: getStyles().color,\n          \"data-component-name\": \"ContentItem\",\n          multi: multi,\n          children: [!!prefix && _jsx(BoxInline, {\n            \"data-component-name\": \"ContentItemPrefix\",\n            mr: \"xxs\",\n            children: prefix\n          }), _jsx(\"span\", {\n            children: label || value\n          }), !!suffix && _jsx(BoxInline, {\n            \"data-component-name\": \"ContentItemSuffix\",\n            ml: \"xxs\",\n            children: suffix\n          }), multi && _jsx(ItemClose, {\n            onClick: handleClickRemove(item),\n            children: _jsx(Icon, {\n              name: \"close\"\n            })\n          })]\n        }, value);\n      })\n    });\n  }\n\n  return _jsx(Placeholder, {\n    children: placeholder\n  });\n}\n\nexport default DropdownContent;","map":{"version":3,"mappings":";AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,mBAA7C;AAEA,OAAO,MAAMC,aAAa,GAAGN,MAAM,CAAC,KAAD,EAAQI,gBAAgB,EAAxB,CAA2B;;;;;CAAvD;AAOP,MAAMG,IAAI,GAAGP,MAAM,CACjB,KADiB,EAEjBI,gBAAgB,EAFC,CAAN,CAGUI,KAAK,IAAG;EAC7B,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAmBF,KAAzB;EACA,MAAM;IAAEG,QAAF;IAAYC,MAAZ;IAAoBC,OAApB;IAA6BC;EAA7B,IAAuCX,QAAQ,CAACK,KAAD,CAArD;EACA,MAAMO,QAAQ,GAAGV,UAAU,CAACG,KAAD,CAA3B;EAEA,IAAIQ,WAAJ;;EAEA,IAAIN,KAAJ,EAAW;IACTM,WAAW,GAAGjB,GAAG;0BACKU,KAAK;uBACRG,MAAM,CAACK,GAAG;0BACPF,QAAQ,GAAGJ,QAAH,GAAcG,KAAK;uBAC9BD,OAAO,CAACI,GAAG;sBACZJ,OAAO,CAACK,EAAE;oBACZL,OAAO,CAACI,GAAG;;KAN3B;EASD;;EAED,OAAOlB,GAAG;;;;MAINiB,WAAW;GAJf;AAMD,CA5BY,CAAb;AA8BA,MAAMG,SAAS,GAAGnB,MAAM,CACtB,MADsB,EAEtBI,gBAAgB,EAFM,CAAN,CAGhBI,KAAK,IAAG;EACR,MAAM;IAAEK;EAAF,IAAcV,QAAQ,CAACK,KAAD,CAA5B;EAEA,OAAOT,GAAG;;;mBAGOc,OAAO,CAACI,GAAG;GAH5B;AAKD,CAXiB,CAAlB;AAaA,MAAMG,WAAW,GAAGpB,MAAM,CACxB,KADwB,EAExBI,gBAAgB,EAFQ,CAAN,CAGlBI,KAAK,IAAG;EACR,MAAM;IAAEO,QAAF;IAAYM,SAAZ;IAAuBC;EAAvB,IAAmCnB,QAAQ,CAACK,KAAD,CAAjD;EAEA,OAAOT,GAAG;;aAECgB,QAAQ,GAAGM,SAAH,GAAeC,OAAO;;GAFzC;AAKD,CAXmB,CAApB;;AAaA,SAASC,eAAT,CAAyBf,KAAzB,EAA8C;EAC5C,MAAM;IACJgB,OAAO,EAAE;MAAEC,SAAF;MAAaC;IAAb,CADL;IAEJlB,KAAK,EAAE;MAAEE,KAAF;MAASiB;IAAT,CAFH;IAGJC,KAAK,EAAE;MAAEC;IAAF;EAHH,IAIFrB,KAJJ;;EAMA,MAAMsB,iBAAiB,GAAIC,KAAD,IAAkB;IAC1C,OAAQC,KAAD,IAAsB;MAC3BA,KAAK,CAACC,eAAN;MAEAP,UAAU,CAAC,IAAD,EAAOK,KAAP,EAAc,IAAd,CAAV;IACD,CAJD;EAKD,CAND;;EAQA,IAAIF,MAAM,CAACK,MAAX,EAAmB;IACjB,OACEC,KAAC7B,aAAD,EAAc;MAAA8B,UACXP,MAAM,CAACQ,GAAP,CAAWC,IAAI,IAAG;QACjB,MAAM;UAAEC,KAAF;UAASC,MAAT;UAAiBC,MAAjB;UAAyBV;QAAzB,IAAmCO,IAAI,IAAI,EAAjD;QAEA,OACEI,MAACnC,IAAD,EAAK;UAEHE,KAAK,EAAEgB,SAAS,GAAGhB,KAFhB;UAEqB,uBACJ,aAHjB;UAIHC,KAAK,EAAEA,KAJJ;UAIS0B,WAEX,CAAC,CAACI,MAAF,IACCL,KAAClC,SAAD,EAAU;YAAA,uBAAqB,mBAArB;YAAyC0C,EAAE,EAAC,KAA5C;YAAiDP,UACxDI;UADO,CAAV,CAHU,EAOZL;YAAAC,UAAOG,KAAK,IAAIR;UAAhB,EAPY,EAQX,CAAC,CAACU,MAAF,IACCN,KAAClC,SAAD,EAAU;YAAA,uBAAqB,mBAArB;YAAyC2C,EAAE,EAAC,KAA5C;YAAiDR,UACxDK;UADO,CAAV,CATU,EAaX/B,KAAK,IACJyB,KAAChB,SAAD,EAAU;YAAC0B,OAAO,EAAEf,iBAAiB,CAACQ,IAAD,CAA3B;YAAiCF,UACzCD,KAACjC,IAAD,EAAK;cAAC4C,IAAI,EAAC;YAAN,CAAL;UADQ,CAAV,CAdU;QAJT,CAAL,EACOf,KADP,CADF;MAyBD,CA5BA;IADW,CAAd,CADF;EAiCD;;EAED,OAAOI,KAACf,WAAD,EAAY;IAAAgB,UAAET;EAAF,CAAZ,CAAP;AACD;;AAED,eAAeJ,eAAf","names":["css","styled","BoxInline","Icon","getTheme","getStyledOptions","isDarkMode","StyledContent","Item","props","color","multi","grayDark","radius","spacing","white","darkMode","multiStyles","xxs","xs","ItemClose","Placeholder","grayLight","grayMid","DropdownContent","methods","getStyles","removeItem","placeholder","state","values","handleClickRemove","value","event","stopPropagation","length","_jsx","children","map","item","label","prefix","suffix","_jsxs","mr","ml","onClick","name"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Dropdown/Content.tsx"],"sourcesContent":["import { MouseEvent } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { ComponentProps, Option } from '@gilbarbara/react-dropdown';\n\nimport { BoxInline } from '../Box';\nimport { Icon } from '../Icon';\nimport { getTheme } from '../modules/helpers';\nimport { getStyledOptions, isDarkMode } from '../modules/system';\n\nexport const StyledContent = styled('div', getStyledOptions())`\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\nconst Item = styled(\n  'div',\n  getStyledOptions(),\n)<{ multi?: boolean }>(props => {\n  const { color, multi } = props;\n  const { grayDark, radius, spacing, white } = getTheme(props);\n  const darkMode = isDarkMode(props);\n\n  let multiStyles;\n\n  if (multi) {\n    multiStyles = css`\n      border: 1px solid ${color};\n      border-radius: ${radius.xxs};\n      background-color: ${darkMode ? grayDark : white};\n      margin-bottom: ${spacing.xxs};\n      margin-right: ${spacing.xs};\n      margin-top: ${spacing.xxs};\n      padding: 3px 6px;\n    `;\n  }\n\n  return css`\n    align-items: center;\n    display: flex;\n    line-height: 1;\n    ${multiStyles};\n  `;\n});\n\nconst ItemClose = styled(\n  'span',\n  getStyledOptions(),\n)(props => {\n  const { spacing } = getTheme(props);\n\n  return css`\n    display: inline-flex;\n    line-height: 1;\n    margin-left: ${spacing.xxs};\n  `;\n});\n\nconst Placeholder = styled(\n  'div',\n  getStyledOptions(),\n)(props => {\n  const { darkMode, grayLight, grayMid } = getTheme(props);\n\n  return css`\n    align-items: center;\n    color: ${darkMode ? grayLight : grayMid};\n    display: flex;\n  `;\n});\n\nfunction DropdownContent(props: ComponentProps) {\n  const {\n    methods: { getStyles, removeItem },\n    props: { multi, placeholder },\n    state: { values },\n  } = props;\n\n  const handleClickRemove = (value: Option) => {\n    return (event: MouseEvent) => {\n      event.stopPropagation();\n\n      removeItem(null, value, true);\n    };\n  };\n\n  if (values.length) {\n    return (\n      <StyledContent>\n        {values.map(item => {\n          const { label, prefix, suffix, value } = item || {};\n\n          return (\n            <Item\n              key={value}\n              color={getStyles().color}\n              data-component-name=\"ContentItem\"\n              multi={multi}\n            >\n              {!!prefix && (\n                <BoxInline data-component-name=\"ContentItemPrefix\" mr=\"xxs\">\n                  {prefix}\n                </BoxInline>\n              )}\n              <span>{label || value}</span>\n              {!!suffix && (\n                <BoxInline data-component-name=\"ContentItemSuffix\" ml=\"xxs\">\n                  {suffix}\n                </BoxInline>\n              )}\n              {multi && (\n                <ItemClose onClick={handleClickRemove(item)}>\n                  <Icon name=\"close\" />\n                </ItemClose>\n              )}\n            </Item>\n          );\n        })}\n      </StyledContent>\n    );\n  }\n\n  return <Placeholder>{placeholder}</Placeholder>;\n}\n\nexport default DropdownContent;\n"]},"metadata":{},"sourceType":"module"}