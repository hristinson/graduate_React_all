{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction FloaterArrow(props) {\n  var arrowRef = props.arrowRef,\n      placement = props.placement,\n      styles = props.styles;\n  var _a = styles.arrow,\n      color = _a.color,\n      display = _a.display,\n      length = _a.length,\n      position = _a.position,\n      spread = _a.spread;\n  var arrowStyles = {\n    display: display,\n    position: position\n  };\n  var points;\n  var x = spread;\n  var y = length;\n  /* istanbul ignore else */\n\n  if (placement.startsWith('top')) {\n    points = \"0,0 \".concat(x / 2, \",\").concat(y, \" \").concat(x, \",0\");\n  } else if (placement.startsWith('bottom')) {\n    points = \"\".concat(x, \",\").concat(y, \" \").concat(x / 2, \",0 0,\").concat(y);\n  } else if (placement.startsWith('left')) {\n    y = spread;\n    x = length;\n    points = \"0,0 \".concat(x, \",\").concat(y / 2, \" 0,\").concat(y);\n  } else if (placement.startsWith('right')) {\n    y = spread;\n    x = length;\n    points = \"\".concat(x, \",\").concat(y, \" \").concat(x, \",0 0,\").concat(y / 2);\n  }\n\n  return _jsx(\"span\", __assign({\n    ref: arrowRef,\n    className: \"__floater__arrow\",\n    style: arrowStyles\n  }, {\n    children: _jsx(\"svg\", __assign({\n      height: y,\n      version: \"1.1\",\n      width: x,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, {\n      children: _jsx(\"polygon\", {\n        fill: color,\n        points: points\n      })\n    }))\n  }));\n}\n\nexport default FloaterArrow;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAUA,SAASA,YAAT,CAAsBC,KAAtB,EAAkC;EACxB,YAAQ,GAAwBA,KAAK,SAArC;EAAA,IAAUC,SAAS,GAAaD,KAAK,UAArC;EAAA,IAAqBE,MAAM,GAAKF,KAAK,OAArC;EAGN,SACEE,MAAM,MADR;EAAA,IAASC,KAAK,WAAd;EAAA,IAAgBC,OAAO,aAAvB;EAAA,IAAyBC,MAAM,YAA/B;EAAA,IAAiCC,QAAQ,cAAzC;EAAA,IAA2CC,MAAM,YAAjD;EAEF,IAAMC,WAAW,GAAwB;IAAEJ,OAAO,SAAT;IAAWE,QAAQ;EAAnB,CAAzC;EAEA,IAAIG,MAAJ;EACA,IAAIC,CAAC,GAAGH,MAAR;EACA,IAAII,CAAC,GAAGN,MAAR;EAEA;;EACA,IAAIJ,SAAS,CAACW,UAAV,CAAqB,KAArB,CAAJ,EAAiC;IAC/BH,MAAM,GAAG,cAAOC,CAAC,GAAG,CAAX,EAAY,GAAZ,EAAYG,MAAZ,CAAgBF,CAAhB,EAAiB,GAAjB,EAAiBE,MAAjB,CAAqBH,CAArB,EAAsB,IAAtB,CAAT;EACD,CAFD,MAEO,IAAIT,SAAS,CAACW,UAAV,CAAqB,QAArB,CAAJ,EAAoC;IACzCH,MAAM,GAAG,UAAGC,CAAH,EAAI,GAAJ,EAAIG,MAAJ,CAAQF,CAAR,EAAS,GAAT,EAASE,MAAT,CAAaH,CAAC,GAAG,CAAjB,EAAkB,OAAlB,EAAkBG,MAAlB,CAA0BF,CAA1B,CAAT;EACD,CAFM,MAEA,IAAIV,SAAS,CAACW,UAAV,CAAqB,MAArB,CAAJ,EAAkC;IACvCD,CAAC,GAAGJ,MAAJ;IACAG,CAAC,GAAGL,MAAJ;IACAI,MAAM,GAAG,cAAOC,CAAP,EAAQ,GAAR,EAAQG,MAAR,CAAYF,CAAC,GAAG,CAAhB,EAAiB,KAAjB,EAAiBE,MAAjB,CAAuBF,CAAvB,CAAT;EACD,CAJM,MAIA,IAAIV,SAAS,CAACW,UAAV,CAAqB,OAArB,CAAJ,EAAmC;IACxCD,CAAC,GAAGJ,MAAJ;IACAG,CAAC,GAAGL,MAAJ;IACAI,MAAM,GAAG,UAAGC,CAAH,EAAI,GAAJ,EAAIG,MAAJ,CAAQF,CAAR,EAAS,GAAT,EAASE,MAAT,CAAaH,CAAb,EAAc,OAAd,EAAcG,MAAd,CAAsBF,CAAC,GAAG,CAA1B,CAAT;EACD;;EAED,OACEG;IAAMC,GAAG,EAAEC,QAAX;IAAqBC,SAAS,EAAC,kBAA/B;IAAkDC,KAAK,EAAEV;EAAzD,GAAoE;IAAAW,UAClEL;MAAKM,MAAM,EAAET,CAAb;MAAgBU,OAAO,EAAC,KAAxB;MAA8BC,KAAK,EAAEZ,CAArC;MAAwCa,KAAK,EAAC;IAA9C,GAA0E;MAAAJ,UACxEL;QAASU,IAAI,EAAErB,KAAf;QAAsBM,MAAM,EAAEA;MAA9B;IADwE,CAA1E;EADkE,CAApE,EADF;AAOD;;AAED,eAAeV,YAAf","names":["FloaterArrow","props","placement","styles","color","display","length","position","spread","arrowStyles","points","x","y","startsWith","concat","_jsx","ref","arrowRef","className","style","children","height","version","width","xmlns","fill"],"sources":["/My_WORK/graduate_React/frontend/node_modules/react-floater/src/components/Floater/Arrow.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Styles } from '../../types';\n\ninterface Props {\n  arrowRef: React.Ref<HTMLSpanElement>;\n  placement: string;\n  styles: Styles;\n}\n\nfunction FloaterArrow(props: Props): JSX.Element {\n  const { arrowRef, placement, styles } = props;\n\n  const {\n    arrow: { color, display, length, position, spread },\n  } = styles;\n  const arrowStyles: React.CSSProperties = { display, position };\n\n  let points;\n  let x = spread;\n  let y = length;\n\n  /* istanbul ignore else */\n  if (placement.startsWith('top')) {\n    points = `0,0 ${x / 2},${y} ${x},0`;\n  } else if (placement.startsWith('bottom')) {\n    points = `${x},${y} ${x / 2},0 0,${y}`;\n  } else if (placement.startsWith('left')) {\n    y = spread;\n    x = length;\n    points = `0,0 ${x},${y / 2} 0,${y}`;\n  } else if (placement.startsWith('right')) {\n    y = spread;\n    x = length;\n    points = `${x},${y} ${x},0 0,${y / 2}`;\n  }\n\n  return (\n    <span ref={arrowRef} className=\"__floater__arrow\" style={arrowStyles}>\n      <svg height={y} version=\"1.1\" width={x} xmlns=\"http://www.w3.org/2000/svg\">\n        <polygon fill={color} points={points} />\n      </svg>\n    </span>\n  );\n}\n\nexport default FloaterArrow;\n"]},"metadata":{},"sourceType":"module"}