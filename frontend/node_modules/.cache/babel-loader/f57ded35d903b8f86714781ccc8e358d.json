{"ast":null,"code":"import getLuminance from './luminance';\nimport { invariant, isString, messages, round } from './modules/utils';\nimport parseCSS from './parse-css';\n/**\n * Get the color contrast between 2 colors.\n */\n\nexport default function contrast(left, right) {\n  invariant(isString(left), messages.left);\n  invariant(isString(right), messages.right);\n  const LuminanceLeft = getLuminance(parseCSS(left));\n  const LuminanceRight = getLuminance(parseCSS(right));\n  return round(LuminanceLeft >= LuminanceRight ? (LuminanceLeft + 0.05) / (LuminanceRight + 0.05) : (LuminanceRight + 0.05) / (LuminanceLeft + 0.05));\n}","map":{"version":3,"mappings":"AAAA,OAAOA,YAAP,MAAyB,aAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,KAAxC,QAAqD,iBAArD;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA;;;;AAGA,eAAc,SAAUC,QAAV,CAAmBC,IAAnB,EAAiCC,KAAjC,EAA8C;EAC1DP,SAAS,CAACC,QAAQ,CAACK,IAAD,CAAT,EAAiBJ,QAAQ,CAACI,IAA1B,CAAT;EACAN,SAAS,CAACC,QAAQ,CAACM,KAAD,CAAT,EAAkBL,QAAQ,CAACK,KAA3B,CAAT;EAEA,MAAMC,aAAa,GAAGT,YAAY,CAACK,QAAQ,CAACE,IAAD,CAAT,CAAlC;EACA,MAAMG,cAAc,GAAGV,YAAY,CAACK,QAAQ,CAACG,KAAD,CAAT,CAAnC;EAEA,OAAOJ,KAAK,CACVK,aAAa,IAAIC,cAAjB,GACI,CAACD,aAAa,GAAG,IAAjB,KAA0BC,cAAc,GAAG,IAA3C,CADJ,GAEI,CAACA,cAAc,GAAG,IAAlB,KAA2BD,aAAa,GAAG,IAA3C,CAHM,CAAZ;AAKD","names":["getLuminance","invariant","isString","messages","round","parseCSS","contrast","left","right","LuminanceLeft","LuminanceRight"],"sources":["/My_WORK/graduate_React/frontend/node_modules/colorizr/src/contrast.ts"],"sourcesContent":["import getLuminance from './luminance';\nimport { invariant, isString, messages, round } from './modules/utils';\nimport parseCSS from './parse-css';\n\n/**\n * Get the color contrast between 2 colors.\n */\nexport default function contrast(left: string, right: string): number {\n  invariant(isString(left), messages.left);\n  invariant(isString(right), messages.right);\n\n  const LuminanceLeft = getLuminance(parseCSS(left));\n  const LuminanceRight = getLuminance(parseCSS(right));\n\n  return round(\n    LuminanceLeft >= LuminanceRight\n      ? (LuminanceLeft + 0.05) / (LuminanceRight + 0.05)\n      : (LuminanceRight + 0.05) / (LuminanceLeft + 0.05),\n  );\n}\n"]},"metadata":{},"sourceType":"module"}