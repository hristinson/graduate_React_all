{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n/**\n * Capitalize the first letter\n */\n\n\nexport function capitalize(input) {\n  return input.charAt(0).toUpperCase() + input.slice(1);\n}\n/**\n * Cleanup HTML content\n */\n\nexport function cleanupHTML(input) {\n  return removeWhitespace(removeEmptyTags(input));\n}\n/**\n * Cleanup a numeric string\n */\n\nexport function cleanupNumericString(value) {\n  if (value === void 0) {\n    value = '';\n  }\n\n  return value.replace(/\\D+/g, '');\n}\n/**\n * Cleanup URI characters\n */\n\nexport function cleanupURI(input) {\n  return input.replace(/[$&+,/:;=?@]/g, '');\n}\n/**\n * Get initials from name\n */\n\nexport function getInitials(input) {\n  if (!input) {\n    return '';\n  }\n\n  var names = input.trim().split(' ');\n\n  if (names.length === 1) {\n    return \"\".concat(names[0].charAt(0));\n  }\n\n  return \"\".concat(names[0].charAt(0)).concat(names[names.length - 1].charAt(0));\n}\n/**\n * Pluralize strings.\n *\n * If the plural form just adds an `s` to the end, you don't need to pass it.\n */\n\nexport function pluralize(quantity, singular, plural) {\n  if (quantity === 1) {\n    return singular;\n  }\n\n  return plural || \"\".concat(singular, \"s\");\n}\n/**\n * Remove accents\n */\n\nexport function removeAccents(input) {\n  var removalMap = {\n    A: /[AÀÁÂÃÄÅĀĂĄǍǞǠǺȀȂȦḀẠẢẤẦẨẪẬẮẰẲẴẶⒶＡ]/g,\n    AA: /Ꜳ/g,\n    AE: /[ÆǢǼ]/g,\n    AO: /Ꜵ/g,\n    AU: /Ꜷ/g,\n    AV: /[ꜸꜺ]/g,\n    AY: /Ꜽ/g,\n    B: /[BƁƂɃḂḄḆⒷＢ]/g,\n    C: /[CÇĆĈĊČƇȻḈⒸꜾＣ]/g,\n    D: /[DĎĐƉƊƋḊḌḎḐḒⒹꝹＤ]/g,\n    DZ: /[ǄǱ]/g,\n    Dz: /[ǅǲ]/g,\n    E: /[EÈÉÊËĒĔĖĘĚƎƐȄȆȨḔḖḘḚḜẸẺẼẾỀỂỄỆⒺＥ]/g,\n    F: /[FƑḞⒻꝻＦ]/g,\n    G: /[GĜĞĠĢƓǤǦǴḠⒼꝽꝾꞠＧ]/g,\n    H: /[HĤĦȞḢḤḦḨḪⒽⱧⱵꞍＨ]/g,\n    I: /[IÌÍÎÏĨĪĬĮİƗǏȈȊḬḮỈỊⒾＩ]/g,\n    J: /[JĴɈⒿＪ]/g,\n    K: /[KĶƘǨḰḲḴⓀⱩꝀꝂꝄꞢＫ]/g,\n    L: /[LĹĻĽĿŁȽḶḸḺḼⓁⱠⱢꝆꝈꞀＬ]/g,\n    LJ: /Ǉ/g,\n    Lj: /ǈ/g,\n    M: /[MƜḾṀṂⓂⱮＭ]/g,\n    N: /[NÑŃŅŇƝǸȠṄṆṈṊⓃꞐꞤＮ]/g,\n    NJ: /Ǌ/g,\n    Nj: /ǋ/g,\n    O: /[OÒÓÔÕÖØŌŎŐƆƟƠǑǪǬǾȌȎȪȬȮȰṌṎṐṒỌỎỐỒỔỖỘỚỜỞỠỢⓄꝊꝌＯ]/g,\n    OI: /Ƣ/g,\n    OO: /Ꝏ/g,\n    OU: /Ȣ/g,\n    P: /[PƤṔṖⓅⱣꝐꝒꝔＰ]/g,\n    Q: /[QɊⓆꝖꝘＱ]/g,\n    R: /[RŔŖŘȐȒɌṘṚṜṞⓇⱤꝚꞂꞦＲ]/g,\n    S: /[SŚŜŞŠȘṠṢṤṦṨẞⓈⱾꞄꞨＳ]/g,\n    T: /[TŢŤŦƬƮȚȾṪṬṮṰⓉꞆＴ]/g,\n    TZ: /Ꜩ/g,\n    U: /[UÙÚÛÜŨŪŬŮŰŲƯǓǕǗǙǛȔȖɄṲṴṶṸṺỤỦỨỪỬỮỰⓊＵ]/g,\n    V: /[VƲɅṼṾⓋꝞＶ]/g,\n    VY: /Ꝡ/g,\n    W: /[WŴẀẂẄẆẈⓌⱲＷ]/g,\n    X: /[XẊẌⓍＸ]/g,\n    Y: /[YÝŶŸƳȲɎẎỲỴỶỸỾⓎＹ]/g,\n    Z: /[ZŹŻŽƵȤẐẒẔⓏⱫⱿꝢＺ]/g,\n    a: /[aàáâãäåāăąǎǟǡǻȁȃȧɐḁẚạảấầẩẫậắằẳẵặⓐⱥａ]/g,\n    aa: /ꜳ/g,\n    ae: /[æǣǽ]/g,\n    ao: /ꜵ/g,\n    au: /ꜷ/g,\n    av: /[ꜹꜻ]/g,\n    ay: /ꜽ/g,\n    b: /[bƀƃɓḃḅḇⓑｂ]/g,\n    c: /[cçćĉċčƈȼḉↄⓒꜿｃ]/g,\n    d: /[dďđƌɖɗḋḍḏḑḓⓓꝺｄ]/g,\n    dz: /[ǆǳ]/g,\n    e: /[eèéêëēĕėęěǝȅȇȩɇɛḕḗḙḛḝẹẻẽếềểễệⓔｅ]/g,\n    f: /[fƒḟⓕꝼｆ]/g,\n    g: /[gĝğġģǥǧǵɠᵹḡⓖꝿꞡｇ]/g,\n    h: /[hĥħȟɥḣḥḧḩḫẖⓗⱨⱶｈ]/g,\n    hv: /ƕ/g,\n    i: /[iìíîïĩīĭįıǐȉȋɨḭḯỉịⓘｉ]/g,\n    j: /[jĵǰɉⓙｊ]/g,\n    k: /[kķƙǩḱḳḵⓚⱪꝁꝃꝅꞣｋ]/g,\n    l: /[lĺļľŀłſƚɫḷḹḻḽⓛⱡꝇꝉꞁｌ]/g,\n    lj: /ǉ/g,\n    m: /[mɯɱḿṁṃⓜｍ]/g,\n    n: /[nñńņňŉƞǹɲṅṇṉṋⓝꞑꞥｎ]/g,\n    nj: /ǌ/g,\n    o: /[oòóôõöøōŏőơǒǫǭǿȍȏȫȭȯȱɔɵṍṏṑṓọỏốồổỗộớờởỡợⓞꝋꝍｏ]/g,\n    oi: /ƣ/g,\n    ou: /ȣ/g,\n    oo: /ꝏ/g,\n    p: /[pƥᵽṕṗⓟꝑꝓꝕｐ]/g,\n    q: /[qɋⓠꝗꝙｑ]/g,\n    r: /[rŕŗřȑȓɍɽṙṛṝṟⓡꝛꞃꞧｒ]/g,\n    s: /[sßśŝşšșȿṡṣṥṧṩẛⓢꞅꞩｓ]/g,\n    t: /[tţťŧƭțʈṫṭṯṱẗⓣⱦꞇｔ]/g,\n    tz: /ꜩ/g,\n    u: /[uùúûüũūŭůűųưǔǖǘǚǜȕȗʉṳṵṷṹṻụủứừửữựⓤｕ]/g,\n    v: /[vʋʌṽṿⓥꝟｖ]/g,\n    vy: /ꝡ/g,\n    w: /[wŵẁẃẅẇẉẘⓦⱳｗ]/g,\n    x: /[xẋẍⓧｘ]/g,\n    y: /[yýÿŷƴȳɏẏẙỳỵỷỹỿⓨｙ]/g,\n    z: /[zźżžƶȥɀẑẓẕⓩⱬꝣｚ]/g\n  };\n  var parsedString = input;\n  Object.entries(removalMap).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        key = _b[0],\n        value = _b[1];\n\n    parsedString = parsedString.replace(value, key);\n  });\n  return parsedString;\n}\n/**\n * Remove emojis\n */\n\nexport function removeEmojis(input) {\n  return input.replace(/(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\u20d0-\\u20f0\\ufe20-\\ufe23]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\u20d0-\\u20f0\\ufe20-\\ufe23]|\\ud83c[\\udffb-\\udfff])?)*/g, '').trim();\n}\n/**\n * Remove empty HTML Tags (including whitespace)\n */\n\nexport function removeEmptyTags(input) {\n  return input.replace(/<[^/>][^>]*>\\s*<\\/[^>]+>/gi, '');\n}\n/**\n * Remove non-printable ASCII characters\n */\n\nexport function removeNonPrintableCharacters(input) {\n  return input.replace(/[^\\x20-\\x7E´\\u00C0-\\u00FFˆ˜]+/g, '');\n}\n/**\n * Remove HTML tags\n */\n\nexport function removeTags(input) {\n  return input.replace(/(<([^>]+)>)/gi, '');\n}\n/**\n * Remove whitespace\n */\n\nexport function removeWhitespace(input) {\n  return input.replace(/\\r\\n|\\r|\\n|\\t/g, '').replace(/ +/g, ' ');\n}\n/**\n * Format string to slug\n */\n\nexport function slugify(input) {\n  return removeAccents(input).replace(/[\\u0300-\\u036f]/g, '').replace(/[()]/g, '').replace(/ /g, '-').replace(/[\"%<>\\\\^`{|}]/g, '').toLowerCase();\n}","map":{"version":3,"mappings":"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","names":["capitalize","input","charAt","toUpperCase","slice","cleanupHTML","removeWhitespace","removeEmptyTags","cleanupNumericString","value","replace","cleanupURI","getInitials","names","trim","split","length","concat","pluralize","quantity","singular","plural","removeAccents","removalMap","A","AA","AE","AO","AU","AV","AY","B","C","D","DZ","Dz","E","F","G","H","I","J","K","L","LJ","Lj","M","N","NJ","Nj","O","OI","OO","OU","P","Q","R","S","T","TZ","U","V","VY","W","X","Y","Z","a","aa","ae","ao","au","av","ay","b","c","d","dz","e","f","g","h","hv","i","j","k","l","lj","m","n","nj","o","oi","ou","oo","p","q","r","s","t","tz","u","v","vy","w","x","y","z","parsedString","Object","entries","forEach","_a","_b","key","removeEmojis","removeNonPrintableCharacters","removeTags","slugify","toLowerCase"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/helpers/src/strings.ts"],"sourcesContent":["/**\n * Capitalize the first letter\n */\nexport function capitalize(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1);\n}\n\n/**\n * Cleanup HTML content\n */\nexport function cleanupHTML(input: string) {\n  return removeWhitespace(removeEmptyTags(input));\n}\n\n/**\n * Cleanup a numeric string\n */\nexport function cleanupNumericString(value = '') {\n  return value.replace(/\\D+/g, '');\n}\n\n/**\n * Cleanup URI characters\n */\nexport function cleanupURI(input: string) {\n  return input.replace(/[$&+,/:;=?@]/g, '');\n}\n\n/**\n * Get initials from name\n */\nexport function getInitials(input: string) {\n  if (!input) {\n    return '';\n  }\n\n  const names = input.trim().split(' ');\n\n  if (names.length === 1) {\n    return `${names[0].charAt(0)}`;\n  }\n\n  return `${names[0].charAt(0)}${names[names.length - 1].charAt(0)}`;\n}\n\n/**\n * Pluralize strings.\n *\n * If the plural form just adds an `s` to the end, you don't need to pass it.\n */\nexport function pluralize(quantity: number, singular: string, plural?: string) {\n  if (quantity === 1) {\n    return singular;\n  }\n\n  return plural || `${singular}s`;\n}\n\n/**\n * Remove accents\n */\nexport function removeAccents(input: string) {\n  const removalMap = {\n    A: /[AÀÁÂÃÄÅĀĂĄǍǞǠǺȀȂȦḀẠẢẤẦẨẪẬẮẰẲẴẶⒶＡ]/g,\n    AA: /Ꜳ/g,\n    AE: /[ÆǢǼ]/g,\n    AO: /Ꜵ/g,\n    AU: /Ꜷ/g,\n    AV: /[ꜸꜺ]/g,\n    AY: /Ꜽ/g,\n    B: /[BƁƂɃḂḄḆⒷＢ]/g,\n    C: /[CÇĆĈĊČƇȻḈⒸꜾＣ]/g,\n    D: /[DĎĐƉƊƋḊḌḎḐḒⒹꝹＤ]/g,\n    DZ: /[ǄǱ]/g,\n    Dz: /[ǅǲ]/g,\n    E: /[EÈÉÊËĒĔĖĘĚƎƐȄȆȨḔḖḘḚḜẸẺẼẾỀỂỄỆⒺＥ]/g,\n    F: /[FƑḞⒻꝻＦ]/g,\n    G: /[GĜĞĠĢƓǤǦǴḠⒼꝽꝾꞠＧ]/g,\n    H: /[HĤĦȞḢḤḦḨḪⒽⱧⱵꞍＨ]/g,\n    I: /[IÌÍÎÏĨĪĬĮİƗǏȈȊḬḮỈỊⒾＩ]/g,\n    J: /[JĴɈⒿＪ]/g,\n    K: /[KĶƘǨḰḲḴⓀⱩꝀꝂꝄꞢＫ]/g,\n    L: /[LĹĻĽĿŁȽḶḸḺḼⓁⱠⱢꝆꝈꞀＬ]/g,\n    LJ: /Ǉ/g,\n    Lj: /ǈ/g,\n    M: /[MƜḾṀṂⓂⱮＭ]/g,\n    N: /[NÑŃŅŇƝǸȠṄṆṈṊⓃꞐꞤＮ]/g,\n    NJ: /Ǌ/g,\n    Nj: /ǋ/g,\n    O: /[OÒÓÔÕÖØŌŎŐƆƟƠǑǪǬǾȌȎȪȬȮȰṌṎṐṒỌỎỐỒỔỖỘỚỜỞỠỢⓄꝊꝌＯ]/g,\n    OI: /Ƣ/g,\n    OO: /Ꝏ/g,\n    OU: /Ȣ/g,\n    P: /[PƤṔṖⓅⱣꝐꝒꝔＰ]/g,\n    Q: /[QɊⓆꝖꝘＱ]/g,\n    R: /[RŔŖŘȐȒɌṘṚṜṞⓇⱤꝚꞂꞦＲ]/g,\n    S: /[SŚŜŞŠȘṠṢṤṦṨẞⓈⱾꞄꞨＳ]/g,\n    T: /[TŢŤŦƬƮȚȾṪṬṮṰⓉꞆＴ]/g,\n    TZ: /Ꜩ/g,\n    U: /[UÙÚÛÜŨŪŬŮŰŲƯǓǕǗǙǛȔȖɄṲṴṶṸṺỤỦỨỪỬỮỰⓊＵ]/g,\n    V: /[VƲɅṼṾⓋꝞＶ]/g,\n    VY: /Ꝡ/g,\n    W: /[WŴẀẂẄẆẈⓌⱲＷ]/g,\n    X: /[XẊẌⓍＸ]/g,\n    Y: /[YÝŶŸƳȲɎẎỲỴỶỸỾⓎＹ]/g,\n    Z: /[ZŹŻŽƵȤẐẒẔⓏⱫⱿꝢＺ]/g,\n    a: /[aàáâãäåāăąǎǟǡǻȁȃȧɐḁẚạảấầẩẫậắằẳẵặⓐⱥａ]/g,\n    aa: /ꜳ/g,\n    ae: /[æǣǽ]/g,\n    ao: /ꜵ/g,\n    au: /ꜷ/g,\n    av: /[ꜹꜻ]/g,\n    ay: /ꜽ/g,\n    b: /[bƀƃɓḃḅḇⓑｂ]/g,\n    c: /[cçćĉċčƈȼḉↄⓒꜿｃ]/g,\n    d: /[dďđƌɖɗḋḍḏḑḓⓓꝺｄ]/g,\n    dz: /[ǆǳ]/g,\n    e: /[eèéêëēĕėęěǝȅȇȩɇɛḕḗḙḛḝẹẻẽếềểễệⓔｅ]/g,\n    f: /[fƒḟⓕꝼｆ]/g,\n    g: /[gĝğġģǥǧǵɠᵹḡⓖꝿꞡｇ]/g,\n    h: /[hĥħȟɥḣḥḧḩḫẖⓗⱨⱶｈ]/g,\n    hv: /ƕ/g,\n    i: /[iìíîïĩīĭįıǐȉȋɨḭḯỉịⓘｉ]/g,\n    j: /[jĵǰɉⓙｊ]/g,\n    k: /[kķƙǩḱḳḵⓚⱪꝁꝃꝅꞣｋ]/g,\n    l: /[lĺļľŀłſƚɫḷḹḻḽⓛⱡꝇꝉꞁｌ]/g,\n    lj: /ǉ/g,\n    m: /[mɯɱḿṁṃⓜｍ]/g,\n    n: /[nñńņňŉƞǹɲṅṇṉṋⓝꞑꞥｎ]/g,\n    nj: /ǌ/g,\n    o: /[oòóôõöøōŏőơǒǫǭǿȍȏȫȭȯȱɔɵṍṏṑṓọỏốồổỗộớờởỡợⓞꝋꝍｏ]/g,\n    oi: /ƣ/g,\n    ou: /ȣ/g,\n    oo: /ꝏ/g,\n    p: /[pƥᵽṕṗⓟꝑꝓꝕｐ]/g,\n    q: /[qɋⓠꝗꝙｑ]/g,\n    r: /[rŕŗřȑȓɍɽṙṛṝṟⓡꝛꞃꞧｒ]/g,\n    s: /[sßśŝşšșȿṡṣṥṧṩẛⓢꞅꞩｓ]/g,\n    t: /[tţťŧƭțʈṫṭṯṱẗⓣⱦꞇｔ]/g,\n    tz: /ꜩ/g,\n    u: /[uùúûüũūŭůűųưǔǖǘǚǜȕȗʉṳṵṷṹṻụủứừửữựⓤｕ]/g,\n    v: /[vʋʌṽṿⓥꝟｖ]/g,\n    vy: /ꝡ/g,\n    w: /[wŵẁẃẅẇẉẘⓦⱳｗ]/g,\n    x: /[xẋẍⓧｘ]/g,\n    y: /[yýÿŷƴȳɏẏẙỳỵỷỹỿⓨｙ]/g,\n    z: /[zźżžƶȥɀẑẓẕⓩⱬꝣｚ]/g,\n  };\n  let parsedString = input;\n\n  Object.entries(removalMap).forEach(([key, value]) => {\n    parsedString = parsedString.replace(value, key);\n  });\n\n  return parsedString;\n}\n\n/**\n * Remove emojis\n */\nexport function removeEmojis(input: string) {\n  return input\n    .replace(\n      /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\u20d0-\\u20f0\\ufe20-\\ufe23]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\u20d0-\\u20f0\\ufe20-\\ufe23]|\\ud83c[\\udffb-\\udfff])?)*/g,\n      '',\n    )\n    .trim();\n}\n\n/**\n * Remove empty HTML Tags (including whitespace)\n */\nexport function removeEmptyTags(input: string) {\n  return input.replace(/<[^/>][^>]*>\\s*<\\/[^>]+>/gi, '');\n}\n\n/**\n * Remove non-printable ASCII characters\n */\nexport function removeNonPrintableCharacters(input: string) {\n  return input.replace(/[^\\x20-\\x7E´\\u00C0-\\u00FFˆ˜]+/g, '');\n}\n\n/**\n * Remove HTML tags\n */\nexport function removeTags(input: string) {\n  return input.replace(/(<([^>]+)>)/gi, '');\n}\n\n/**\n * Remove whitespace\n */\nexport function removeWhitespace(input: string) {\n  return input.replace(/\\r\\n|\\r|\\n|\\t/g, '').replace(/ +/g, ' ');\n}\n\n/**\n * Format string to slug\n */\nexport function slugify(input: string) {\n  return removeAccents(input)\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/[()]/g, '')\n    .replace(/ /g, '-')\n    .replace(/[\"%<>\\\\^`{|}]/g, '')\n    .toLowerCase();\n}\n"]},"metadata":{},"sourceType":"module"}