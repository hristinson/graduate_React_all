{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:3001\"\n});\napi.interceptors.request.use(config => {\n  if (localStorage.token) {\n    const authLink = \"http://localhost:3001/auth\";\n    axios.get(authLink, {\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }).then(res => {\n      if (res.data) {\n        console.log(`Logined! Ok!`);\n      } else {\n        console.log(`Not logined...`);\n      }\n    });\n  }\n\n  return config;\n});\napi.interceptors.response.use(response => {\n  return response;\n}, err => {\n  console.log(err.stasusCode);\n  return err;\n});\nexport const getPeople = query => {\n  return api.get(`people/?page=${query.page}`);\n};\nexport const getPlanets = query => {\n  return api.get(`planets/?page=${query.page}`);\n};\nexport const getVehicles = query => {\n  return api.get(`vehicles/?page=${query.page}`);\n};\nexport const getStarships = query => {\n  return api.get(`starships/?page=${query.page}`);\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","localStorage","token","authLink","get","headers","Authorization","then","res","data","console","log","response","err","stasusCode","getPeople","query","page","getPlanets","getVehicles","getStarships"],"sources":["/My_WORK/graduate_React/frontend/src/api/index.ts"],"sourcesContent":["import axios from \"axios\";\n\n\n\nconst api = axios.create({\n  baseURL: \"http://localhost:3001\",\n});\n\napi.interceptors.request.use((config) => {\n  if (localStorage.token) {\n    const authLink = \"http://localhost:3001/auth\";\n    axios.get(\n      authLink,\n      { headers: { Authorization: `Bearer ${localStorage.token}` } }\n    ).then((res)=> { \n      \n      if(res.data) {\n        console.log(`Logined! Ok!`);\n       }\n       else {\n        console.log(`Not logined...`);\n       }\n\n     });\n     \n  }\n  return config;\n});\n\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (err) => {\n    console.log(err.stasusCode);\n    return err;\n  }\n);\n\nexport const getPeople = (query: any) => {\n  return api.get(`people/?page=${query.page}`);\n};\n\nexport const getPlanets = (query: any) => {\n  return api.get(`planets/?page=${query.page}`);\n};\n\nexport const getVehicles = (query: any) => {\n  return api.get(`vehicles/?page=${query.page}`);\n};\n\nexport const getStarships = (query: any) => {\n  return api.get(`starships/?page=${query.page}`);\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EACvBC,OAAO,EAAE;AADc,CAAb,CAAZ;AAIAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,MAAD,IAAY;EACvC,IAAIC,YAAY,CAACC,KAAjB,EAAwB;IACtB,MAAMC,QAAQ,GAAG,4BAAjB;IACAV,KAAK,CAACW,GAAN,CACED,QADF,EAEE;MAAEE,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASL,YAAY,CAACC,KAAM;MAA9C;IAAX,CAFF,EAGEK,IAHF,CAGQC,GAAD,IAAQ;MAEb,IAAGA,GAAG,CAACC,IAAP,EAAa;QACXC,OAAO,CAACC,GAAR,CAAa,cAAb;MACA,CAFF,MAGM;QACJD,OAAO,CAACC,GAAR,CAAa,gBAAb;MACA;IAEF,CAZF;EAcD;;EACD,OAAOX,MAAP;AACD,CAnBD;AAqBAN,GAAG,CAACG,YAAJ,CAAiBe,QAAjB,CAA0Bb,GAA1B,CACGa,QAAD,IAAc;EACZ,OAAOA,QAAP;AACD,CAHH,EAIGC,GAAD,IAAS;EACPH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,UAAhB;EACA,OAAOD,GAAP;AACD,CAPH;AAUA,OAAO,MAAME,SAAS,GAAIC,KAAD,IAAgB;EACvC,OAAOtB,GAAG,CAACU,GAAJ,CAAS,gBAAeY,KAAK,CAACC,IAAK,EAAnC,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAIF,KAAD,IAAgB;EACxC,OAAOtB,GAAG,CAACU,GAAJ,CAAS,iBAAgBY,KAAK,CAACC,IAAK,EAApC,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,WAAW,GAAIH,KAAD,IAAgB;EACzC,OAAOtB,GAAG,CAACU,GAAJ,CAAS,kBAAiBY,KAAK,CAACC,IAAK,EAArC,CAAP;AACD,CAFM;AAIP,OAAO,MAAMG,YAAY,GAAIJ,KAAD,IAAgB;EAC1C,OAAOtB,GAAG,CAACU,GAAJ,CAAS,mBAAkBY,KAAK,CAACC,IAAK,EAAtC,CAAP;AACD,CAFM;AAIP,eAAevB,GAAf"},"metadata":{},"sourceType":"module"}