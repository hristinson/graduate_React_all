{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Children, isValidElement, useCallback } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport is from 'is-lite';\nimport { getColorVariant, getTheme } from '../modules/helpers';\nimport { getStyledOptions, isDarkMode } from '../modules/system';\nimport { Paragraph } from '../Paragraph';\nexport const StyledMenuItem = styled('div', getStyledOptions())(props => {\n  const {\n    shade,\n    variant = 'primary'\n  } = props;\n  const {\n    grayDarker,\n    grayScale,\n    spacing,\n    typography,\n    variants\n  } = getTheme(props);\n  const darkMode = isDarkMode(props);\n  const themeColor = darkMode ? grayScale['20'] : grayDarker;\n  const {\n    bg,\n    color\n  } = getColorVariant(variant, shade, variants);\n  return css`\n    color: ${themeColor};\n    cursor: pointer;\n    font-size: ${typography.mid.fontSize};\n    transition: background-color 0.3s;\n\n    &:hover,\n    &:active {\n      background-color: ${bg};\n      color: ${color};\n\n      * {\n        color: ${color};\n      }\n    }\n\n    a {\n      color: ${themeColor};\n      text-decoration: none;\n    }\n\n    > * {\n      display: flex !important;\n      padding: ${spacing.xs} ${spacing.sm} !important;\n      white-space: nowrap !important;\n      width: 100%;\n    }\n  `;\n});\nexport function MenuItem(_ref) {\n  let {\n    children,\n    closeMenu,\n    onClick,\n    ...rest\n  } = _ref;\n  const handleClick = useCallback(event => {\n    if (!is.function(children) && closeMenu) {\n      closeMenu();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  }, [children, closeMenu, onClick]);\n  let content = children;\n\n  if (is.function(children) && closeMenu) {\n    content = children({\n      closeMenu\n    });\n  } else if (!Children.toArray(children).every(d => isValidElement(d))) {\n    content = _jsx(Paragraph, {\n      children: children\n    });\n  }\n\n  return _jsx(StyledMenuItem, {\n    \"data-component-name\": \"MenuItem\",\n    onClick: handleClick,\n    ...rest,\n    children: content\n  });\n}","map":{"version":3,"mappings":";AAAA,SAASA,QAAT,EAAmBC,cAAnB,EAAiEC,WAAjE,QAAoF,OAApF;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,EAAP,MAAe,SAAf;AAEA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,oBAA1C;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,SAASC,SAAT,QAA0B,cAA1B;AAYA,OAAO,MAAMC,cAAc,GAAGP,MAAM,CAClC,KADkC,EAElCI,gBAAgB,EAFkB,CAAN,CAGbI,KAAK,IAAG;EACvB,MAAM;IAAEC,KAAF;IAASC,OAAO,GAAG;EAAnB,IAAiCF,KAAvC;EACA,MAAM;IAAEG,UAAF;IAAcC,SAAd;IAAyBC,OAAzB;IAAkCC,UAAlC;IAA8CC;EAA9C,IAA2DZ,QAAQ,CAACK,KAAD,CAAzE;EACA,MAAMQ,QAAQ,GAAGX,UAAU,CAACG,KAAD,CAA3B;EAEA,MAAMS,UAAU,GAAGD,QAAQ,GAAGJ,SAAS,CAAC,IAAD,CAAZ,GAAqBD,UAAhD;EAEA,MAAM;IAAEO,EAAF;IAAMC;EAAN,IAAgBjB,eAAe,CAACQ,OAAD,EAAUD,KAAV,EAAiBM,QAAjB,CAArC;EAEA,OAAOhB,GAAG;aACCkB,UAAU;;iBAENH,UAAU,CAACM,GAAX,CAAeC,QAAQ;;;;;0BAKdH,EAAE;eACbC,KAAK;;;iBAGHA,KAAK;;;;;eAKPF,UAAU;;;;;;iBAMRJ,OAAO,CAACS,EAAE,IAAIT,OAAO,CAACU,EAAE;;;;GAvBvC;AA4BD,CAxC6B,CAAvB;AA0CP,OAAM,SAAUC,QAAV,OAA2E;EAAA,IAAxD;IAAEC,QAAF;IAAYC,SAAZ;IAAuBC,OAAvB;IAAgC,GAAGC;EAAnC,CAAwD;EAC/E,MAAMC,WAAW,GAAG/B,WAAW,CAC7BgC,KAAK,IAAG;IACN,IAAI,CAAC7B,EAAE,CAAC8B,QAAH,CAAYN,QAAZ,CAAD,IAA0BC,SAA9B,EAAyC;MACvCA,SAAS;IACV;;IAED,IAAIC,OAAJ,EAAa;MACXA,OAAO,CAACG,KAAD,CAAP;IACD;EACF,CAT4B,EAU7B,CAACL,QAAD,EAAWC,SAAX,EAAsBC,OAAtB,CAV6B,CAA/B;EAaA,IAAIK,OAAO,GAAGP,QAAd;;EAEA,IAAIxB,EAAE,CAAC8B,QAAH,CAAYN,QAAZ,KAAyBC,SAA7B,EAAwC;IACtCM,OAAO,GAAGP,QAAQ,CAAC;MAAEC;IAAF,CAAD,CAAlB;EACD,CAFD,MAEO,IAAI,CAAC9B,QAAQ,CAACqC,OAAT,CAAiBR,QAAjB,EAA2BS,KAA3B,CAAiCC,CAAC,IAAItC,cAAc,CAACsC,CAAD,CAApD,CAAL,EAA+D;IACpEH,OAAO,GAAGI,KAAC9B,SAAD,EAAU;MAAAmB,UAAEA;IAAF,CAAV,CAAV;EACD;;EAED,OACEW,KAAC7B,cAAD,EAAe;IAAA,uBAAqB,UAArB;IAAgCoB,OAAO,EAAEE,WAAzC;IAAoD,GAAMD,IAA1D;IAA8DH,UAC1EO;EADY,CAAf,CADF;AAKD","names":["Children","isValidElement","useCallback","css","styled","is","getColorVariant","getTheme","getStyledOptions","isDarkMode","Paragraph","StyledMenuItem","props","shade","variant","grayDarker","grayScale","spacing","typography","variants","darkMode","themeColor","bg","color","mid","fontSize","xs","sm","MenuItem","children","closeMenu","onClick","rest","handleClick","event","function","content","toArray","every","d","_jsx"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Menu/Item.tsx"],"sourcesContent":["import { Children, isValidElement, MouseEventHandler, ReactNode, useCallback } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport is from 'is-lite';\n\nimport { getColorVariant, getTheme } from '../modules/helpers';\nimport { getStyledOptions, isDarkMode } from '../modules/system';\nimport { Paragraph } from '../Paragraph';\nimport { WithColor } from '../types';\n\ninterface ChildProps {\n  closeMenu?: () => void;\n}\n\nexport interface MenuItemProps extends ChildProps, WithColor {\n  children: ((props: Required<ChildProps>) => ReactNode) | ReactNode;\n  onClick?: MouseEventHandler<HTMLDivElement>;\n}\n\nexport const StyledMenuItem = styled(\n  'div',\n  getStyledOptions(),\n)<MenuItemProps>(props => {\n  const { shade, variant = 'primary' } = props;\n  const { grayDarker, grayScale, spacing, typography, variants } = getTheme(props);\n  const darkMode = isDarkMode(props);\n\n  const themeColor = darkMode ? grayScale['20'] : grayDarker;\n\n  const { bg, color } = getColorVariant(variant, shade, variants);\n\n  return css`\n    color: ${themeColor};\n    cursor: pointer;\n    font-size: ${typography.mid.fontSize};\n    transition: background-color 0.3s;\n\n    &:hover,\n    &:active {\n      background-color: ${bg};\n      color: ${color};\n\n      * {\n        color: ${color};\n      }\n    }\n\n    a {\n      color: ${themeColor};\n      text-decoration: none;\n    }\n\n    > * {\n      display: flex !important;\n      padding: ${spacing.xs} ${spacing.sm} !important;\n      white-space: nowrap !important;\n      width: 100%;\n    }\n  `;\n});\n\nexport function MenuItem({ children, closeMenu, onClick, ...rest }: MenuItemProps): JSX.Element {\n  const handleClick = useCallback(\n    event => {\n      if (!is.function(children) && closeMenu) {\n        closeMenu();\n      }\n\n      if (onClick) {\n        onClick(event);\n      }\n    },\n    [children, closeMenu, onClick],\n  );\n\n  let content = children;\n\n  if (is.function(children) && closeMenu) {\n    content = children({ closeMenu });\n  } else if (!Children.toArray(children).every(d => isValidElement(d))) {\n    content = <Paragraph>{children}</Paragraph>;\n  }\n\n  return (\n    <StyledMenuItem data-component-name=\"MenuItem\" onClick={handleClick} {...rest}>\n      {content}\n    </StyledMenuItem>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}