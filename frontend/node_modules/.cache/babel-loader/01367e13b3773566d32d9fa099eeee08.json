{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { css, useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { Box } from './Box';\nimport { ButtonBase } from './ButtonBase';\nimport { H3 } from './Headings';\nimport { Icon } from './Icon';\nimport { getTheme, px } from './modules/helpers';\nimport { borderStyles, getStyledOptions, isDarkMode, paddingStyles, radiusStyles, shadowStyles } from './modules/system';\nimport { Portal } from './Portal';\nconst StyledModal = styled('div', getStyledOptions())(props => {\n  const {\n    maxWidth,\n    width\n  } = props;\n  const {\n    black,\n    darkColor,\n    white\n  } = getTheme(props);\n  const darkMode = isDarkMode(props);\n  return css`\n    background-color: ${darkMode ? darkColor : white};\n    color: ${darkMode ? white : black};\n    max-width: ${px(maxWidth)};\n    width: ${width ? px(width) : 'auto'};\n    ${borderStyles(props)};\n    ${paddingStyles(props)};\n    ${radiusStyles(props)};\n    ${shadowStyles(props)};\n  `;\n});\nconst StyledModalContent = styled('div', getStyledOptions())(props => {\n  const {\n    maxHeight,\n    padding\n  } = props;\n  const {\n    spacing\n  } = getTheme(props);\n  return css`\n    margin: 0 -${padding ? spacing[padding] : padding};\n    padding: 0 ${padding ? spacing[padding] : padding};\n    max-height: ${px(maxHeight)};\n    overflow-y: auto;\n  `;\n});\nexport function Modal(props) {\n  const {\n    children,\n    closeOnClickOverlay,\n    closeOnEsc,\n    hideCloseButton,\n    hideOverlay,\n    isActive,\n    maxHeight = '80vh',\n    onClose,\n    onOpen,\n    style,\n    title,\n    zIndex,\n    ...rest\n  } = props;\n  const {\n    padding = 'lg'\n  } = rest;\n  const {\n    black,\n    darkMode,\n    white\n  } = getTheme({\n    theme: useTheme()\n  });\n  const handlePortalClose = useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n  let header;\n\n  if (!hideCloseButton || title) {\n    header = _jsxs(Box, {\n      align: \"center\",\n      display: \"flex\",\n      justify: title ? 'space-between' : 'flex-end',\n      mb: \"md\",\n      children: [title && _jsx(H3, {\n        style: {\n          marginBottom: 0\n        },\n        children: title\n      }), !hideCloseButton && _jsx(ButtonBase, {\n        onClick: onClose,\n        children: _jsx(Icon, {\n          color: darkMode ? white : black,\n          name: \"close\",\n          size: 26\n        })\n      })]\n    });\n  }\n\n  return _jsx(Portal, {\n    closeOnClickOverlay: closeOnClickOverlay,\n    closeOnEsc: closeOnEsc,\n    hideOverlay: hideOverlay,\n    isActive: isActive,\n    onClose: handlePortalClose,\n    onOpen: onOpen,\n    zIndex: zIndex,\n    children: _jsxs(StyledModal, {\n      \"data-component-name\": \"Modal\",\n      ...rest,\n      style: style,\n      children: [header, _jsx(StyledModalContent, {\n        maxHeight: maxHeight,\n        padding: padding,\n        children: children\n      })]\n    })\n  });\n}\nModal.defaultProps = {\n  closeOnClickOverlay: true,\n  closeOnEsc: true,\n  hideCloseButton: false,\n  hideOverlay: false,\n  maxHeight: '80vh',\n  maxWidth: '100vw',\n  padding: 'lg',\n  radius: 'lg',\n  shadow: 'high',\n  zIndex: 1000\n};","map":{"version":3,"mappings":"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","names":["useCallback","css","useTheme","styled","Box","ButtonBase","H3","Icon","getTheme","px","borderStyles","getStyledOptions","isDarkMode","paddingStyles","radiusStyles","shadowStyles","Portal","StyledModal","props","maxWidth","width","black","darkColor","white","darkMode","StyledModalContent","maxHeight","padding","spacing","Modal","children","closeOnClickOverlay","closeOnEsc","hideCloseButton","hideOverlay","isActive","onClose","onOpen","style","title","zIndex","rest","theme","handlePortalClose","header","_jsxs","align","display","justify","mb","_jsx","marginBottom","onClick","color","name","size","defaultProps","radius","shadow"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Modal.tsx"],"sourcesContent":["import { CSSProperties, ReactNode, useCallback } from 'react';\nimport { css, useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { StringOrNumber } from '@gilbarbara/types';\nimport { StandardLonghandProperties } from 'csstype';\n\nimport { Box } from './Box';\nimport { ButtonBase } from './ButtonBase';\nimport { H3 } from './Headings';\nimport { Icon } from './Icon';\nimport { getTheme, px } from './modules/helpers';\nimport {\n  borderStyles,\n  getStyledOptions,\n  isDarkMode,\n  paddingStyles,\n  radiusStyles,\n  shadowStyles,\n} from './modules/system';\nimport { Portal, PortalProps } from './Portal';\nimport { StyledProps, WithBorder, WithPadding, WithRadius, WithShadow } from './types';\n\nexport interface ModalProps\n  extends StyledProps,\n    WithBorder,\n    WithPadding,\n    WithRadius,\n    WithShadow,\n    Omit<PortalProps, 'isActive' | 'showCloseButton'> {\n  hideCloseButton?: boolean;\n  isActive: boolean;\n  maxHeight?: StandardLonghandProperties['maxHeight'] | number;\n  maxWidth?: StandardLonghandProperties['maxWidth'] | number;\n  style?: CSSProperties;\n  title?: ReactNode;\n  width?: StringOrNumber;\n}\n\nconst StyledModal = styled(\n  'div',\n  getStyledOptions(),\n)<Omit<ModalProps, 'content' | 'isActive' | 'onClose' | 'onOpen' | 'title'>>(props => {\n  const { maxWidth, width } = props;\n  const { black, darkColor, white } = getTheme(props);\n  const darkMode = isDarkMode(props);\n\n  return css`\n    background-color: ${darkMode ? darkColor : white};\n    color: ${darkMode ? white : black};\n    max-width: ${px(maxWidth)};\n    width: ${width ? px(width) : 'auto'};\n    ${borderStyles(props)};\n    ${paddingStyles(props)};\n    ${radiusStyles(props)};\n    ${shadowStyles(props)};\n  `;\n});\n\nconst StyledModalContent = styled(\n  'div',\n  getStyledOptions(),\n)<Required<Pick<ModalProps, 'maxHeight' | 'padding'>>>(props => {\n  const { maxHeight, padding } = props;\n  const { spacing } = getTheme(props);\n\n  return css`\n    margin: 0 -${padding ? spacing[padding] : padding};\n    padding: 0 ${padding ? spacing[padding] : padding};\n    max-height: ${px(maxHeight)};\n    overflow-y: auto;\n  `;\n});\n\nexport function Modal(props: ModalProps) {\n  const {\n    children,\n    closeOnClickOverlay,\n    closeOnEsc,\n    hideCloseButton,\n    hideOverlay,\n    isActive,\n    maxHeight = '80vh',\n    onClose,\n    onOpen,\n    style,\n    title,\n    zIndex,\n    ...rest\n  } = props;\n  const { padding = 'lg' } = rest;\n  const { black, darkMode, white } = getTheme({ theme: useTheme() });\n\n  const handlePortalClose = useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  let header;\n\n  if (!hideCloseButton || title) {\n    header = (\n      <Box align=\"center\" display=\"flex\" justify={title ? 'space-between' : 'flex-end'} mb=\"md\">\n        {title && <H3 style={{ marginBottom: 0 }}>{title}</H3>}\n        {!hideCloseButton && (\n          <ButtonBase onClick={onClose}>\n            <Icon color={darkMode ? white : black} name=\"close\" size={26} />\n          </ButtonBase>\n        )}\n      </Box>\n    );\n  }\n\n  return (\n    <Portal\n      closeOnClickOverlay={closeOnClickOverlay}\n      closeOnEsc={closeOnEsc}\n      hideOverlay={hideOverlay}\n      isActive={isActive}\n      onClose={handlePortalClose}\n      onOpen={onOpen}\n      zIndex={zIndex}\n    >\n      <StyledModal data-component-name=\"Modal\" {...rest} style={style}>\n        {header}\n        <StyledModalContent maxHeight={maxHeight} padding={padding}>\n          {children}\n        </StyledModalContent>\n      </StyledModal>\n    </Portal>\n  );\n}\n\nModal.defaultProps = {\n  closeOnClickOverlay: true,\n  closeOnEsc: true,\n  hideCloseButton: false,\n  hideOverlay: false,\n  maxHeight: '80vh',\n  maxWidth: '100vw',\n  padding: 'lg',\n  radius: 'lg',\n  shadow: 'high',\n  zIndex: 1000,\n};\n"]},"metadata":{},"sourceType":"module"}