{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { css, keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { getColorVariant, getTheme, px } from '../modules/helpers';\nimport { getStyledOptions, isDarkMode } from '../modules/system';\n\nconst pulse = _ref => {\n  let {\n    size = 32\n  } = _ref;\n  return keyframes`\n  0% {\n    height: 0;\n    left: ${px(size / 2)};\n    opacity: 1;\n    top: ${px(size / 2)};\n    width: 0;\n  }\n\n  100% {\n    height: ${px(size)};\n    left: 0;\n    opacity: 0;\n    top: 0;\n    width: ${px(size)};\n  }\n`;\n};\n\nconst StyledLoaderPulse = styled('div', getStyledOptions())(props => {\n  const {\n    block,\n    color,\n    shade,\n    size = 32,\n    variant\n  } = props;\n  const {\n    darkColor,\n    lightColor,\n    spacing,\n    variants\n  } = getTheme(props);\n  const darkMode = isDarkMode(props);\n  let variantColor = darkMode ? lightColor : darkColor;\n\n  if (variant) {\n    variantColor = getColorVariant(variant, shade, variants).bg;\n  }\n\n  return css`\n    display: ${block ? 'flex' : 'inline-flex'};\n    height: ${px(size)};\n    margin: ${block ? spacing.lg : 0} auto;\n    position: relative;\n    width: ${px(size)};\n\n    > div {\n      animation: ${pulse(props)} 1.2s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n      border: ${px(Math.round(size / 16))} solid ${color || variantColor};\n      border-radius: 50%;\n      height: 0;\n      left: ${px(size / 2)};\n      opacity: 1;\n      position: absolute;\n      top: ${px(size / 2)};\n      transform-origin: center;\n      width: 0;\n    }\n\n    > div:nth-of-type(2) {\n      animation-delay: -0.5s;\n    }\n  `;\n});\nexport default function LoaderPulse(props) {\n  return _jsxs(StyledLoaderPulse, {\n    \"data-component-name\": \"LoaderPulse\",\n    ...props,\n    children: [_jsx(\"div\", {}), _jsx(\"div\", {})]\n  });\n}","map":{"version":3,"mappings":";AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,gBAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,EAApC,QAA8C,oBAA9C;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,mBAA7C;;AAGA,MAAMC,KAAK,GAAG;EAAA,IAAC;IAAEC,IAAI,GAAG;EAAT,CAAD;EAAA,OAAgCR,SAAS;;;YAG3CI,EAAE,CAACI,IAAI,GAAG,CAAR,CAAU;;WAEbJ,EAAE,CAACI,IAAI,GAAG,CAAR,CAAU;;;;;cAKTJ,EAAE,CAACI,IAAD,CAAM;;;;aAITJ,EAAE,CAACI,IAAD,CAAM;;CAdP;AAAA,CAAd;;AAkBA,MAAMC,iBAAiB,GAAGR,MAAM,CAC9B,KAD8B,EAE9BI,gBAAgB,EAFc,CAAN,CAGXK,KAAK,IAAG;EACrB,MAAM;IAAEC,KAAF;IAASC,KAAT;IAAgBC,KAAhB;IAAuBL,IAAI,GAAG,EAA9B;IAAkCM;EAAlC,IAA8CJ,KAApD;EACA,MAAM;IAAEK,SAAF;IAAaC,UAAb;IAAyBC,OAAzB;IAAkCC;EAAlC,IAA+Cf,QAAQ,CAACO,KAAD,CAA7D;EACA,MAAMS,QAAQ,GAAGb,UAAU,CAACI,KAAD,CAA3B;EAEA,IAAIU,YAAY,GAAGD,QAAQ,GAAGH,UAAH,GAAgBD,SAA3C;;EAEA,IAAID,OAAJ,EAAa;IACXM,YAAY,GAAGlB,eAAe,CAACY,OAAD,EAAUD,KAAV,EAAiBK,QAAjB,CAAf,CAA0CG,EAAzD;EACD;;EAED,OAAOtB,GAAG;eACGY,KAAK,GAAG,MAAH,GAAY,aAAa;cAC/BP,EAAE,CAACI,IAAD,CAAM;cACRG,KAAK,GAAGM,OAAO,CAACK,EAAX,GAAgB,CAAC;;aAEvBlB,EAAE,CAACI,IAAD,CAAM;;;mBAGFD,KAAK,CAACG,KAAD,CAAO;gBACfN,EAAE,CAACmB,IAAI,CAACC,KAAL,CAAWhB,IAAI,GAAG,EAAlB,CAAD,CAAuB,UAAUI,KAAK,IAAIQ,YAAY;;;cAG1DhB,EAAE,CAACI,IAAI,GAAG,CAAR,CAAU;;;aAGbJ,EAAE,CAACI,IAAI,GAAG,CAAR,CAAU;;;;;;;;GAfvB;AAwBD,CAtCyB,CAA1B;AAwCA,eAAc,SAAUiB,WAAV,CAAsBf,KAAtB,EAAwC;EACpD,OACEgB,MAACjB,iBAAD,EAAkB;IAAA,uBAAqB,aAArB;IAAkC,GAAKC,KAAvC;IAA4CiB,WAC5DC,eAD4D,EAE5DA,eAF4D;EAA5C,CAAlB,CADF;AAMD","names":["css","keyframes","styled","getColorVariant","getTheme","px","getStyledOptions","isDarkMode","pulse","size","StyledLoaderPulse","props","block","color","shade","variant","darkColor","lightColor","spacing","variants","darkMode","variantColor","bg","lg","Math","round","LoaderPulse","_jsxs","children","_jsx"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Loader/Pulse.tsx"],"sourcesContent":["import { css, keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { getColorVariant, getTheme, px } from '../modules/helpers';\nimport { getStyledOptions, isDarkMode } from '../modules/system';\nimport { LoaderProps } from '../types';\n\nconst pulse = ({ size = 32 }: LoaderProps) => keyframes`\n  0% {\n    height: 0;\n    left: ${px(size / 2)};\n    opacity: 1;\n    top: ${px(size / 2)};\n    width: 0;\n  }\n\n  100% {\n    height: ${px(size)};\n    left: 0;\n    opacity: 0;\n    top: 0;\n    width: ${px(size)};\n  }\n`;\n\nconst StyledLoaderPulse = styled(\n  'div',\n  getStyledOptions(),\n)<LoaderProps>(props => {\n  const { block, color, shade, size = 32, variant } = props;\n  const { darkColor, lightColor, spacing, variants } = getTheme(props);\n  const darkMode = isDarkMode(props);\n\n  let variantColor = darkMode ? lightColor : darkColor;\n\n  if (variant) {\n    variantColor = getColorVariant(variant, shade, variants).bg;\n  }\n\n  return css`\n    display: ${block ? 'flex' : 'inline-flex'};\n    height: ${px(size)};\n    margin: ${block ? spacing.lg : 0} auto;\n    position: relative;\n    width: ${px(size)};\n\n    > div {\n      animation: ${pulse(props)} 1.2s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n      border: ${px(Math.round(size / 16))} solid ${color || variantColor};\n      border-radius: 50%;\n      height: 0;\n      left: ${px(size / 2)};\n      opacity: 1;\n      position: absolute;\n      top: ${px(size / 2)};\n      transform-origin: center;\n      width: 0;\n    }\n\n    > div:nth-of-type(2) {\n      animation-delay: -0.5s;\n    }\n  `;\n});\n\nexport default function LoaderPulse(props: LoaderProps) {\n  return (\n    <StyledLoaderPulse data-component-name=\"LoaderPulse\" {...props}>\n      <div />\n      <div />\n    </StyledLoaderPulse>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}