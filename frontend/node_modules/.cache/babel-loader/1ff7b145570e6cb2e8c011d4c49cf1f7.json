{"ast":null,"code":"import hsl2rgb from './hsl2rgb';\nimport { invariant, isHSL, isNumber, isPlainObject, isRGB, messages } from './modules/utils';\nimport rgb2Hsl from './rgb2hsl';\nexport default function formatCSS(input) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  invariant(isPlainObject(input) && (isRGB(input) || isHSL(input)), messages.invalid);\n  const {\n    alpha,\n    model = isRGB(input) ? 'rgb' : 'hsl'\n  } = options;\n  const prefix = `${model}${isNumber(alpha) ? 'a' : ''}`;\n  let color = input;\n  let params = [];\n\n  if (model === 'rgb') {\n    if (isHSL(color)) {\n      color = hsl2rgb(color);\n    }\n\n    params = [Math.round(color.r), Math.round(color.g), Math.round(color.b)];\n  } else {\n    if (isRGB(color)) {\n      color = rgb2Hsl(color);\n    }\n\n    params = [Math.round(color.h), `${Math.round(color.s)}%`, `${Math.round(color.l)}%`];\n  }\n\n  if (isNumber(alpha)) {\n    params.push(alpha);\n  }\n\n  return `${prefix}(${params.join(', ')})`;\n}","map":{"version":3,"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,aAArC,EAAoDC,KAApD,EAA2DC,QAA3D,QAA2E,iBAA3E;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,eAAc,SAAUC,SAAV,CAAoBC,KAApB,EAAiE;EAAA,IAA3BC,OAA2B,uEAAF,EAAE;EAC7ET,SAAS,CAACG,aAAa,CAACK,KAAD,CAAb,KAAyBJ,KAAK,CAACI,KAAD,CAAL,IAAgBP,KAAK,CAACO,KAAD,CAA9C,CAAD,EAAyDH,QAAQ,CAACK,OAAlE,CAAT;EAEA,MAAM;IAAEC,KAAF;IAASC,KAAK,GAAGR,KAAK,CAACI,KAAD,CAAL,GAAe,KAAf,GAAuB;EAAxC,IAAkDC,OAAxD;EACA,MAAMI,MAAM,GAAG,GAAGD,KAAK,GAAGV,QAAQ,CAACS,KAAD,CAAR,GAAkB,GAAlB,GAAwB,EAAE,EAApD;EACA,IAAIG,KAAK,GAAGN,KAAZ;EACA,IAAIO,MAAM,GAAG,EAAb;;EAEA,IAAIH,KAAK,KAAK,KAAd,EAAqB;IACnB,IAAIX,KAAK,CAACa,KAAD,CAAT,EAAkB;MAChBA,KAAK,GAAGf,OAAO,CAACe,KAAD,CAAf;IACD;;IAEDC,MAAM,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,CAAjB,CAAD,EAAsBF,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACK,CAAjB,CAAtB,EAA2CH,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACM,CAAjB,CAA3C,CAAT;EACD,CAND,MAMO;IACL,IAAIhB,KAAK,CAACU,KAAD,CAAT,EAAkB;MAChBA,KAAK,GAAGR,OAAO,CAACQ,KAAD,CAAf;IACD;;IAEDC,MAAM,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACO,CAAjB,CAAD,EAAsB,GAAGL,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACQ,CAAjB,CAAmB,GAA5C,EAAiD,GAAGN,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACS,CAAjB,CAAmB,GAAvE,CAAT;EACD;;EAED,IAAIrB,QAAQ,CAACS,KAAD,CAAZ,EAAqB;IACnBI,MAAM,CAACS,IAAP,CAAYb,KAAZ;EACD;;EAED,OAAO,GAAGE,MAAM,IAAIE,MAAM,CAACU,IAAP,CAAY,IAAZ,CAAiB,GAArC;AACD","names":["hsl2rgb","invariant","isHSL","isNumber","isPlainObject","isRGB","messages","rgb2Hsl","formatCSS","input","options","invalid","alpha","model","prefix","color","params","Math","round","r","g","b","h","s","l","push","join"],"sources":["/My_WORK/graduate_React/frontend/node_modules/colorizr/src/format-css.ts"],"sourcesContent":["import hsl2rgb from './hsl2rgb';\nimport { invariant, isHSL, isNumber, isPlainObject, isRGB, messages } from './modules/utils';\nimport rgb2Hsl from './rgb2hsl';\nimport { FormatOptions, HSL, RGB } from './types';\n\nexport default function formatCSS(input: HSL | RGB, options: FormatOptions = {}): string {\n  invariant(isPlainObject(input) && (isRGB(input) || isHSL(input)), messages.invalid);\n\n  const { alpha, model = isRGB(input) ? 'rgb' : 'hsl' } = options;\n  const prefix = `${model}${isNumber(alpha) ? 'a' : ''}`;\n  let color = input;\n  let params = [];\n\n  if (model === 'rgb') {\n    if (isHSL(color)) {\n      color = hsl2rgb(color);\n    }\n\n    params = [Math.round(color.r), Math.round(color.g), Math.round(color.b)];\n  } else {\n    if (isRGB(color)) {\n      color = rgb2Hsl(color);\n    }\n\n    params = [Math.round(color.h), `${Math.round(color.s)}%`, `${Math.round(color.l)}%`];\n  }\n\n  if (isNumber(alpha)) {\n    params.push(alpha);\n  }\n\n  return `${prefix}(${params.join(', ')})`;\n}\n"]},"metadata":{},"sourceType":"module"}