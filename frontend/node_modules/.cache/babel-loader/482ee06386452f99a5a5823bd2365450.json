{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { px } from './modules/helpers';\nimport { getStyledOptions } from './modules/system';\nconst StyledTruncate = styled('span', getStyledOptions())(props => {\n  const {\n    lines,\n    maxWidth\n  } = props;\n\n  if (maxWidth) {\n    return css`\n      display: inline-block;\n      max-width: ${px(maxWidth)};\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n    `;\n  }\n\n  return css`\n    display: -webkit-box;\n    overflow: hidden;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: ${lines || 2};\n  `;\n});\nexport function Truncate(props) {\n  const {\n    children,\n    ...rest\n  } = props;\n  return _jsx(StyledTruncate, {\n    \"data-component-name\": \"Truncate\",\n    ...rest,\n    children: children\n  });\n}\nTruncate.defaultProps = {\n  lines: 2\n};","map":{"version":3,"mappings":";AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,SAASC,EAAT,QAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AASA,MAAMC,cAAc,GAAGH,MAAM,CAC3B,MAD2B,EAE3BE,gBAAgB,EAFW,CAAN,CAGNE,KAAK,IAAG;EACvB,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBF,KAA5B;;EAEA,IAAIE,QAAJ,EAAc;IACZ,OAAOP,GAAG;;mBAEKE,EAAE,CAACK,QAAD,CAAU;;;;;KAF3B;EAQD;;EAED,OAAOP,GAAG;;;;0BAIcM,KAAK,IAAI,CAAC;GAJlC;AAMD,CAvBsB,CAAvB;AAyBA,OAAM,SAAUE,QAAV,CAAmBH,KAAnB,EAAuC;EAC3C,MAAM;IAAEI,QAAF;IAAY,GAAGC;EAAf,IAAwBL,KAA9B;EAEA,OACEM,KAACP,cAAD,EAAe;IAAA,uBAAqB,UAArB;IAA+B,GAAKM,IAApC;IAAwCD,UACpDA;EADY,CAAf,CADF;AAKD;AAEDD,QAAQ,CAACI,YAAT,GAAwB;EACtBN,KAAK,EAAE;AADe,CAAxB","names":["css","styled","px","getStyledOptions","StyledTruncate","props","lines","maxWidth","Truncate","children","rest","_jsx","defaultProps"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Truncate.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { StringOrNumber } from '@gilbarbara/types';\n\nimport { px } from './modules/helpers';\nimport { getStyledOptions } from './modules/system';\nimport { StyledProps, WithChildren } from './types';\n\nexport interface TruncateProps extends StyledProps, WithChildren {\n  /** @default 2 */\n  lines?: number;\n  maxWidth?: StringOrNumber;\n}\n\nconst StyledTruncate = styled(\n  'span',\n  getStyledOptions(),\n)<TruncateProps>(props => {\n  const { lines, maxWidth } = props;\n\n  if (maxWidth) {\n    return css`\n      display: inline-block;\n      max-width: ${px(maxWidth)};\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n    `;\n  }\n\n  return css`\n    display: -webkit-box;\n    overflow: hidden;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: ${lines || 2};\n  `;\n});\n\nexport function Truncate(props: TruncateProps): JSX.Element {\n  const { children, ...rest } = props;\n\n  return (\n    <StyledTruncate data-component-name=\"Truncate\" {...rest}>\n      {children}\n    </StyledTruncate>\n  );\n}\n\nTruncate.defaultProps = {\n  lines: 2,\n};\n"]},"metadata":{},"sourceType":"module"}