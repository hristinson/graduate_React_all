{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport is from 'is-lite';\n/**\n * Convert primitive to string\n */\n\nfunction primitiveToString(value, key) {\n  if (key === 'control') {\n    return `{ RHF ${key} }`;\n  }\n\n  if (is.function(value)) {\n    return '{ Function }';\n  }\n\n  if (is.plainObject(value) || is.array(value)) {\n    return JSON.stringify(value, null, 2);\n  }\n\n  if (is.undefined(value)) {\n    return 'undefined';\n  }\n\n  return value.toString();\n}\n\nfunction FieldDebug(props) {\n  const {\n    debug,\n    name\n  } = props;\n\n  if (!debug) {\n    return null;\n  }\n\n  return _jsxs(\"code\", {\n    style: {\n      backgroundColor: '#eee',\n      fontSize: 12,\n      padding: 8\n    },\n    children: [_jsx(\"h4\", {\n      children: name\n    }), Object.entries(props).map(_ref => {\n      let [key, value] = _ref;\n      return _jsxs(\"div\", {\n        children: [_jsx(\"b\", {\n          children: key\n        }), \": \", primitiveToString(value, key)]\n      }, key);\n    })]\n  });\n}\n\nexport default FieldDebug;","map":{"version":3,"mappings":";AAAA,OAAOA,EAAP,MAAe,SAAf;AAOA;;;;AAGA,SAASC,iBAAT,CAA2BC,KAA3B,EAAuCC,GAAvC,EAAkD;EAChD,IAAIA,GAAG,KAAK,SAAZ,EAAuB;IACrB,OAAO,SAASA,GAAG,IAAnB;EACD;;EAED,IAAIH,EAAE,CAACI,QAAH,CAAYF,KAAZ,CAAJ,EAAwB;IACtB,OAAO,cAAP;EACD;;EAED,IAAIF,EAAE,CAACK,WAAH,CAAeH,KAAf,KAAyBF,EAAE,CAACM,KAAH,CAASJ,KAAT,CAA7B,EAA8C;IAC5C,OAAOK,IAAI,CAACC,SAAL,CAAeN,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAP;EACD;;EAED,IAAIF,EAAE,CAACS,SAAH,CAAaP,KAAb,CAAJ,EAAyB;IACvB,OAAO,WAAP;EACD;;EAED,OAAOA,KAAK,CAACQ,QAAN,EAAP;AACD;;AAED,SAASC,UAAT,CAAoBC,KAApB,EAAgC;EAC9B,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAkBF,KAAxB;;EAEA,IAAI,CAACC,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EAED,OACEE;IAAMC,KAAK,EAAE;MAAEC,eAAe,EAAE,MAAnB;MAA2BC,QAAQ,EAAE,EAArC;MAAyCC,OAAO,EAAE;IAAlD,CAAb;IAAkEC,WAChEC;MAAAD,UAAKN;IAAL,EADgE,EAE/DQ,MAAM,CAACC,OAAP,CAAeX,KAAf,EAAsBY,GAAtB,CAA0B;MAAA,IAAC,CAACrB,GAAD,EAAMD,KAAN,CAAD;MAAA,OACzBa;QAAAK,WACEC;UAAAD,UAAIjB;QAAJ,EADF,EACc,IADd,EACiBF,iBAAiB,CAACC,KAAD,EAAQC,GAAR,CADlC;MAAA,GAAUA,GAAV,CADyB;IAAA,CAA1B,CAF+D;EAAlE,EADF;AAUD;;AAED,eAAeQ,UAAf","names":["is","primitiveToString","value","key","function","plainObject","array","JSON","stringify","undefined","toString","FieldDebug","props","debug","name","_jsxs","style","backgroundColor","fontSize","padding","children","_jsx","Object","entries","map"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Field/Debug.tsx"],"sourcesContent":["import is from 'is-lite';\n\ninterface Props {\n  debug?: boolean;\n  name: string;\n}\n\n/**\n * Convert primitive to string\n */\nfunction primitiveToString(value: any, key: string): string {\n  if (key === 'control') {\n    return `{ RHF ${key} }`;\n  }\n\n  if (is.function(value)) {\n    return '{ Function }';\n  }\n\n  if (is.plainObject(value) || is.array(value)) {\n    return JSON.stringify(value, null, 2);\n  }\n\n  if (is.undefined(value)) {\n    return 'undefined';\n  }\n\n  return value.toString();\n}\n\nfunction FieldDebug(props: Props) {\n  const { debug, name } = props;\n\n  if (!debug) {\n    return null;\n  }\n\n  return (\n    <code style={{ backgroundColor: '#eee', fontSize: 12, padding: 8 }}>\n      <h4>{name}</h4>\n      {Object.entries(props).map(([key, value]) => (\n        <div key={key}>\n          <b>{key}</b>: {primitiveToString(value, key)}\n        </div>\n      ))}\n    </code>\n  );\n}\n\nexport default FieldDebug;\n"]},"metadata":{},"sourceType":"module"}