{"ast":null,"code":"import hex2hsl from './hex2hsl';\nimport hex2rgb from './hex2rgb';\nimport { invariant, isNumber, isString, messages } from './modules/utils';\nimport parseCSS from './parse-css';\n/**\n * Fade the color\n */\n\nexport default function fade(input) {\n  let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  let output = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'rgb';\n  invariant(isString(input), messages.inputString);\n  invariant(isNumber(amount), messages.amount);\n  const hex = parseCSS(input);\n  const percentage = (100 - amount) / 100;\n\n  if (output === 'rgb') {\n    const {\n      r,\n      g,\n      b\n    } = hex2rgb(hex);\n    return `rgba(${r}, ${g}, ${b}, ${percentage})`;\n  }\n\n  if (output === 'hsl') {\n    const {\n      h,\n      s,\n      l\n    } = hex2hsl(hex);\n    return `hsla(${h}, ${s}%, ${l}%, ${percentage})`;\n  }\n\n  return `${hex}${Math.round(percentage * 255).toString(16)}`;\n}","map":{"version":3,"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,QAAxC,QAAwD,iBAAxD;AACA,OAAOC,QAAP,MAAqB,aAArB;AAGA;;;;AAGA,eAAc,SAAUC,IAAV,CAAeC,KAAf,EAAqE;EAAA,IAAvCC,MAAuC,uEAA9B,EAA8B;EAAA,IAA1BC,MAA0B,uEAAL,KAAK;EACjFR,SAAS,CAACE,QAAQ,CAACI,KAAD,CAAT,EAAkBH,QAAQ,CAACM,WAA3B,CAAT;EACAT,SAAS,CAACC,QAAQ,CAACM,MAAD,CAAT,EAAmBJ,QAAQ,CAACI,MAA5B,CAAT;EAEA,MAAMG,GAAG,GAAGN,QAAQ,CAACE,KAAD,CAApB;EACA,MAAMK,UAAU,GAAG,CAAC,MAAMJ,MAAP,IAAiB,GAApC;;EAEA,IAAIC,MAAM,KAAK,KAAf,EAAsB;IACpB,MAAM;MAAEI,CAAF;MAAKC,CAAL;MAAQC;IAAR,IAAcf,OAAO,CAACW,GAAD,CAA3B;IAEA,OAAO,QAAQE,CAAC,KAAKC,CAAC,KAAKC,CAAC,KAAKH,UAAU,GAA3C;EACD;;EAED,IAAIH,MAAM,KAAK,KAAf,EAAsB;IACpB,MAAM;MAAEO,CAAF;MAAKC,CAAL;MAAQC;IAAR,IAAcnB,OAAO,CAACY,GAAD,CAA3B;IAEA,OAAO,QAAQK,CAAC,KAAKC,CAAC,MAAMC,CAAC,MAAMN,UAAU,GAA7C;EACD;;EAED,OAAO,GAAGD,GAAG,GAAGQ,IAAI,CAACC,KAAL,CAAWR,UAAU,GAAG,GAAxB,EAA6BS,QAA7B,CAAsC,EAAtC,CAAyC,EAAzD;AACD","names":["hex2hsl","hex2rgb","invariant","isNumber","isString","messages","parseCSS","fade","input","amount","output","inputString","hex","percentage","r","g","b","h","s","l","Math","round","toString"],"sources":["/My_WORK/graduate_React/frontend/node_modules/colorizr/src/fade.ts"],"sourcesContent":["import hex2hsl from './hex2hsl';\nimport hex2rgb from './hex2rgb';\nimport { invariant, isNumber, isString, messages } from './modules/utils';\nimport parseCSS from './parse-css';\nimport { ColorTypes } from './types';\n\n/**\n * Fade the color\n */\nexport default function fade(input: string, amount = 10, output: ColorTypes = 'rgb'): string {\n  invariant(isString(input), messages.inputString);\n  invariant(isNumber(amount), messages.amount);\n\n  const hex = parseCSS(input);\n  const percentage = (100 - amount) / 100;\n\n  if (output === 'rgb') {\n    const { r, g, b } = hex2rgb(hex);\n\n    return `rgba(${r}, ${g}, ${b}, ${percentage})`;\n  }\n\n  if (output === 'hsl') {\n    const { h, s, l } = hex2hsl(hex);\n\n    return `hsla(${h}, ${s}%, ${l}%, ${percentage})`;\n  }\n\n  return `${hex}${Math.round(percentage * 255).toString(16)}`;\n}\n"]},"metadata":{},"sourceType":"module"}