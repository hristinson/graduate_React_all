{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useState } from 'react';\nimport { usePrevious } from 'react-use';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { Radio } from './CheckboxAndRadio';\nimport { getTheme } from './modules/helpers';\nimport { getStyledOptions } from './modules/system';\nconst StyledRadioGroup = styled('div', getStyledOptions())(props => {\n  const {\n    inline\n  } = props;\n  const {\n    spacing\n  } = getTheme(props);\n  return css`\n    display: flex;\n    flex-direction: ${inline ? 'row' : 'column'};\n\n    ${inline && css`\n      margin-top: 0;\n\n      [data-component-name='Radio'] + [data-component-name='Radio'] {\n        margin-left: ${spacing.xs};\n      }\n    `};\n  `;\n});\nexport function RadioGroup(props) {\n  const {\n    defaultValue,\n    disabled,\n    inline,\n    items,\n    name,\n    onChange,\n    size,\n    value,\n    ...rest\n  } = props;\n  const [selectedValue, setSelectedValue] = useState(value ?? defaultValue);\n  const previousProps = usePrevious(props);\n  useEffect(() => {\n    if (previousProps && value && previousProps.value !== value) {\n      setSelectedValue(value);\n    }\n  }, [previousProps, value]);\n  const handleChange = useCallback(_ref => {\n    let {\n      target\n    } = _ref;\n    const numericValue = Number(target.value);\n    const currentValue = !Number.isNaN(numericValue) ? numericValue : target.value;\n    /* istanbul ignore else */\n\n    if (onChange) {\n      onChange(currentValue);\n    }\n\n    if (!value && !disabled) {\n      setSelectedValue(currentValue);\n    }\n  }, [disabled, onChange, value]);\n\n  if (!items || !items.length) {\n    return null;\n  }\n\n  const currentValue = !!value && value !== selectedValue ? value : selectedValue;\n  return _jsx(StyledRadioGroup, {\n    inline: inline,\n    ...rest,\n    \"data-component-name\": \"RadioGroup\",\n    role: \"radiogroup\",\n    children: items.map(d => _jsx(Radio, {\n      align: \"start\",\n      checked: d.value === currentValue,\n      disabled: disabled || d.disabled,\n      label: d.label || d.value,\n      mb: \"xxs\",\n      name: name,\n      onChange: handleChange,\n      size: size,\n      type: \"radio\",\n      value: d.value\n    }, d.value))\n  });\n}\nRadioGroup.defaultProps = {\n  disabled: false,\n  inline: false,\n  size: 'md'\n};","map":{"version":3,"mappings":"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","names":["useCallback","useEffect","useState","usePrevious","css","styled","Radio","getTheme","getStyledOptions","StyledRadioGroup","props","inline","spacing","xs","RadioGroup","defaultValue","disabled","items","name","onChange","size","value","rest","selectedValue","setSelectedValue","previousProps","handleChange","target","numericValue","Number","currentValue","isNaN","length","_jsx","role","children","map","d","align","checked","label","mb","type","defaultProps"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/RadioGroup.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { usePrevious } from 'react-use';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { StringOrNumber } from '@gilbarbara/types';\n\nimport { Radio, RadioProps } from './CheckboxAndRadio';\nimport { getTheme } from './modules/helpers';\nimport { getStyledOptions } from './modules/system';\nimport { RadioItem, WithComponentSize } from './types';\n\nexport interface RadioGroupProps\n  extends WithComponentSize,\n    Omit<RadioProps, 'align' | 'checked' | 'defaultChecked' | 'label'> {\n  defaultValue?: StringOrNumber;\n  inline?: boolean;\n  items: RadioItem[];\n}\n\nconst StyledRadioGroup = styled(\n  'div',\n  getStyledOptions(),\n)<Pick<RadioGroupProps, 'inline'>>(props => {\n  const { inline } = props;\n  const { spacing } = getTheme(props);\n\n  return css`\n    display: flex;\n    flex-direction: ${inline ? 'row' : 'column'};\n\n    ${inline &&\n    css`\n      margin-top: 0;\n\n      [data-component-name='Radio'] + [data-component-name='Radio'] {\n        margin-left: ${spacing.xs};\n      }\n    `};\n  `;\n});\n\nexport function RadioGroup(props: RadioGroupProps) {\n  const { defaultValue, disabled, inline, items, name, onChange, size, value, ...rest } = props;\n  const [selectedValue, setSelectedValue] = useState(value ?? defaultValue);\n  const previousProps = usePrevious(props);\n\n  useEffect(() => {\n    if (previousProps && value && previousProps.value !== value) {\n      setSelectedValue(value);\n    }\n  }, [previousProps, value]);\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const numericValue = Number(target.value);\n      const currentValue = !Number.isNaN(numericValue) ? numericValue : target.value;\n\n      /* istanbul ignore else */\n      if (onChange) {\n        onChange(currentValue);\n      }\n\n      if (!value && !disabled) {\n        setSelectedValue(currentValue);\n      }\n    },\n    [disabled, onChange, value],\n  );\n\n  if (!items || !items.length) {\n    return null;\n  }\n\n  const currentValue = !!value && value !== selectedValue ? value : selectedValue;\n\n  return (\n    <StyledRadioGroup inline={inline} {...rest} data-component-name=\"RadioGroup\" role=\"radiogroup\">\n      {items.map(d => (\n        <Radio\n          key={d.value}\n          align=\"start\"\n          checked={d.value === currentValue}\n          disabled={disabled || d.disabled}\n          label={d.label || d.value}\n          mb=\"xxs\"\n          name={name}\n          onChange={handleChange}\n          size={size}\n          type=\"radio\"\n          value={d.value}\n        />\n      ))}\n    </StyledRadioGroup>\n  );\n}\n\nRadioGroup.defaultProps = {\n  disabled: false,\n  inline: false,\n  size: 'md',\n};\n"]},"metadata":{},"sourceType":"module"}