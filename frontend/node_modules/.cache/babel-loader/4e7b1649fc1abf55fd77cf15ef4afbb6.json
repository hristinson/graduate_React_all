{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { BoxInline } from './Box';\nimport { Button } from './Button';\nimport { getTheme, px } from './modules/helpers';\nimport { baseStyles, getStyledOptions } from './modules/system';\nimport { Truncate } from './Truncate';\nexport const StyledFileInput = styled('div', getStyledOptions())(props => {\n  const {\n    width = '100%'\n  } = props;\n  const {\n    spacing\n  } = getTheme(props);\n  return css`\n    ${baseStyles(props)};\n    align-items: center;\n    display: flex;\n    width: ${px(width)};\n\n    [data-component-name='Truncate'] {\n      flex: 1;\n      margin-left: ${spacing.xs};\n\n      &:empty {\n        display: none;\n      }\n    }\n  `;\n});\nexport const StyledInput = styled('input', getStyledOptions())`\n  font-size: 48px;\n  left: 0;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  z-index: 1;\n`;\nexport const InputFile = forwardRef((props, ref) => {\n  const {\n    invert,\n    large,\n    name,\n    onChange,\n    placeholder,\n    value,\n    ...rest\n  } = props;\n  const [localValue, setLocalValue] = useState('');\n\n  const handleChange = event => {\n    const {\n      files\n    } = event.target;\n    setLocalValue(files?.length ? files[0].name : '');\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return _jsxs(StyledFileInput, {\n    \"data-component-name\": \"InputFile\",\n    ...rest,\n    children: [_jsxs(BoxInline, {\n      overflow: \"hidden\",\n      position: \"relative\",\n      children: [_jsx(Button, {\n        invert: invert,\n        size: large ? 'lg' : 'md',\n        children: placeholder\n      }), _jsx(StyledInput, {\n        ref: ref,\n        id: name,\n        name: name,\n        onChange: handleChange,\n        type: \"file\"\n      })]\n    }), _jsx(Truncate, {\n      maxWidth: \"100%\",\n      children: value || localValue\n    })]\n  });\n});\nInputFile.defaultProps = {\n  disabled: false,\n  invert: true,\n  large: false,\n  placeholder: 'Upload a file',\n  readOnly: false,\n  width: '100%'\n};","map":{"version":3,"mappings":";AAAA,SAAsBA,UAAtB,EAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,QAAT,EAAmBC,EAAnB,QAA6B,mBAA7B;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AACA,SAASC,QAAT,QAAyB,YAAzB;AAeA,OAAO,MAAMC,eAAe,GAAGR,MAAM,CACnC,KADmC,EAEnCM,gBAAgB,EAFmB,CAAN,CAGJG,KAAK,IAAG;EACjC,MAAM;IAAEC,KAAK,GAAG;EAAV,IAAqBD,KAA3B;EACA,MAAM;IAAEE;EAAF,IAAcR,QAAQ,CAACM,KAAD,CAA5B;EAEA,OAAOV,GAAG;MACNM,UAAU,CAACI,KAAD,CAAO;;;aAGVL,EAAE,CAACM,KAAD,CAAO;;;;qBAIDC,OAAO,CAACC,EAAE;;;;;;GAR7B;AAeD,CAtB8B,CAAxB;AAwBP,OAAO,MAAMC,WAAW,GAAGb,MAAM,CAAC,OAAD,EAAUM,gBAAgB,EAA1B,CAA6B;;;;;;;CAAvD;AASP,OAAO,MAAMQ,SAAS,GAAGjB,UAAU,CAAmC,CAACY,KAAD,EAAQM,GAAR,KAAe;EACnF,MAAM;IAAEC,MAAF;IAAUC,KAAV;IAAiBC,IAAjB;IAAuBC,QAAvB;IAAiCC,WAAjC;IAA8CC,KAA9C;IAAqD,GAAGC;EAAxD,IAAiEb,KAAvE;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,EAAD,CAA5C;;EAEA,MAAM2B,YAAY,GAAIC,KAAD,IAAyC;IAC5D,MAAM;MAAEC;IAAF,IAAYD,KAAK,CAACE,MAAxB;IAEAJ,aAAa,CAACG,KAAK,EAAEE,MAAP,GAAgBF,KAAK,CAAC,CAAD,CAAL,CAAST,IAAzB,GAAgC,EAAjC,CAAb;;IAEA,IAAIC,QAAJ,EAAc;MACZA,QAAQ,CAACO,KAAD,CAAR;IACD;EACF,CARD;;EAUA,OACEI,MAACtB,eAAD,EAAgB;IAAA,uBAAqB,WAArB;IAAgC,GAAKc,IAArC;IAAyCS,WACvDD,MAAC7B,SAAD,EAAU;MAAC+B,QAAQ,EAAC,QAAV;MAAmBC,QAAQ,EAAC,UAA5B;MAAsCF,WAC9CG,KAAChC,MAAD,EAAO;QAACc,MAAM,EAAEA,MAAT;QAAiBmB,IAAI,EAAElB,KAAK,GAAG,IAAH,GAAU,IAAtC;QAA0Cc,UAC9CX;MADI,CAAP,CAD8C,EAI9Cc,KAACrB,WAAD,EAAY;QAACE,GAAG,EAAEA,GAAN;QAAWqB,EAAE,EAAElB,IAAf;QAAqBA,IAAI,EAAEA,IAA3B;QAAiCC,QAAQ,EAAEM,YAA3C;QAAyDY,IAAI,EAAC;MAA9D,CAAZ,CAJ8C;IAAtC,CAAV,CADuD,EAOvDH,KAAC3B,QAAD,EAAS;MAAC+B,QAAQ,EAAC,MAAV;MAAgBP,UAAEV,KAAK,IAAIE;IAA3B,CAAT,CAPuD;EAAzC,CAAhB,CADF;AAWD,CAzBkC,CAA5B;AA2BPT,SAAS,CAACyB,YAAV,GAAyB;EACvBC,QAAQ,EAAE,KADa;EAEvBxB,MAAM,EAAE,IAFe;EAGvBC,KAAK,EAAE,KAHgB;EAIvBG,WAAW,EAAE,eAJU;EAKvBqB,QAAQ,EAAE,KALa;EAMvB/B,KAAK,EAAE;AANgB,CAAzB","names":["forwardRef","useState","css","styled","BoxInline","Button","getTheme","px","baseStyles","getStyledOptions","Truncate","StyledFileInput","props","width","spacing","xs","StyledInput","InputFile","ref","invert","large","name","onChange","placeholder","value","rest","localValue","setLocalValue","handleChange","event","files","target","length","_jsxs","children","overflow","position","_jsx","size","id","type","maxWidth","defaultProps","disabled","readOnly"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/InputFile.tsx"],"sourcesContent":["import { ChangeEvent, forwardRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { BoxInline } from './Box';\nimport { Button } from './Button';\nimport { getTheme, px } from './modules/helpers';\nimport { baseStyles, getStyledOptions } from './modules/system';\nimport { Truncate } from './Truncate';\nimport { ComponentProps, StyledProps, WithFormElements, WithInvert } from './types';\n\nexport interface InputFileKnownProps extends StyledProps, WithFormElements, WithInvert {\n  /** @default false */\n  large?: boolean;\n  value?: string;\n}\n\nexport type InputFileProps = ComponentProps<\n  HTMLInputElement,\n  InputFileKnownProps,\n  'name' | 'type' | 'width'\n>;\n\nexport const StyledFileInput = styled(\n  'div',\n  getStyledOptions(),\n)<Partial<InputFileProps>>(props => {\n  const { width = '100%' } = props;\n  const { spacing } = getTheme(props);\n\n  return css`\n    ${baseStyles(props)};\n    align-items: center;\n    display: flex;\n    width: ${px(width)};\n\n    [data-component-name='Truncate'] {\n      flex: 1;\n      margin-left: ${spacing.xs};\n\n      &:empty {\n        display: none;\n      }\n    }\n  `;\n});\n\nexport const StyledInput = styled('input', getStyledOptions())`\n  font-size: 48px;\n  left: 0;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  z-index: 1;\n`;\n\nexport const InputFile = forwardRef<HTMLInputElement, InputFileProps>((props, ref) => {\n  const { invert, large, name, onChange, placeholder, value, ...rest } = props;\n  const [localValue, setLocalValue] = useState('');\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { files } = event.target;\n\n    setLocalValue(files?.length ? files[0].name : '');\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return (\n    <StyledFileInput data-component-name=\"InputFile\" {...rest}>\n      <BoxInline overflow=\"hidden\" position=\"relative\">\n        <Button invert={invert} size={large ? 'lg' : 'md'}>\n          {placeholder}\n        </Button>\n        <StyledInput ref={ref} id={name} name={name} onChange={handleChange} type=\"file\" />\n      </BoxInline>\n      <Truncate maxWidth=\"100%\">{value || localValue}</Truncate>\n    </StyledFileInput>\n  );\n});\n\nInputFile.defaultProps = {\n  disabled: false,\n  invert: true,\n  large: false,\n  placeholder: 'Upload a file',\n  readOnly: false,\n  width: '100%',\n};\n"]},"metadata":{},"sourceType":"module"}