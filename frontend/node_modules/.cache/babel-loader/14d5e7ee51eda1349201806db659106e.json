{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Children, cloneElement } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { baseStyles, getStyledOptions } from './modules/system';\nexport const StyledButtonGroup = styled('div', getStyledOptions())(props => css`\n    ${baseStyles(props)};\n    display: inline-flex;\n\n    > button {\n      + button {\n        margin-left: -1px;\n      }\n\n      &:first-of-type {\n        border-bottom-right-radius: 0;\n        border-top-right-radius: 0;\n      }\n\n      &:last-of-type {\n        border-bottom-left-radius: 0;\n        border-top-left-radius: 0;\n      }\n\n      &:not(:first-of-type):not(:last-of-type) {\n        border-radius: 0;\n      }\n    }\n  `);\nexport function ButtonGroup(props) {\n  const {\n    children,\n    shade,\n    size,\n    variant,\n    ...rest\n  } = props;\n  const buttonProps = {\n    shade,\n    size,\n    variant\n  };\n  return _jsx(StyledButtonGroup, {\n    \"data-component-name\": \"ButtonGroup\",\n    ...rest,\n    children: Children.map(children, child => cloneElement(child, { ...buttonProps\n    }))\n  });\n}\nButtonGroup.defaultProps = {\n  shade: 'mid',\n  size: 'md',\n  variant: 'primary'\n};","map":{"version":3,"mappings":";AAAA,SAASA,QAAT,EAAmBC,YAAnB,QAAqD,OAArD;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AAWA,OAAO,MAAMC,iBAAiB,GAAGH,MAAM,CACrC,KADqC,EAErCE,gBAAgB,EAFqB,CAAN,CAI/BE,KAAK,IAAIL,GAAG;MACRE,UAAU,CAACG,KAAD,CAAO;;;;;;;;;;;;;;;;;;;;;;GALU,CAA1B;AA8BP,OAAM,SAAUC,WAAV,CAAsBD,KAAtB,EAA6C;EACjD,MAAM;IAAEE,QAAF;IAAYC,KAAZ;IAAmBC,IAAnB;IAAyBC,OAAzB;IAAkC,GAAGC;EAArC,IAA8CN,KAApD;EACA,MAAMO,WAAW,GAAG;IAClBJ,KADkB;IAElBC,IAFkB;IAGlBC;EAHkB,CAApB;EAMA,OACEG,KAACT,iBAAD,EAAkB;IAAA,uBAAqB,aAArB;IAAkC,GAAKO,IAAvC;IAA2CJ,UAC1DT,QAAQ,CAACgB,GAAT,CAAaP,QAAb,EAAuBQ,KAAK,IAAIhB,YAAY,CAACgB,KAAD,EAAwB,EAAE,GAAGH;IAAL,CAAxB,CAA5C;EADe,CAAlB,CADF;AAKD;AAEDN,WAAW,CAACU,YAAZ,GAA2B;EACzBR,KAAK,EAAE,KADkB;EAEzBC,IAAI,EAAE,IAFmB;EAGzBC,OAAO,EAAE;AAHgB,CAA3B","names":["Children","cloneElement","css","styled","baseStyles","getStyledOptions","StyledButtonGroup","props","ButtonGroup","children","shade","size","variant","rest","buttonProps","_jsx","map","child","defaultProps"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/ButtonGroup.tsx"],"sourcesContent":["import { Children, cloneElement, ReactElement } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { baseStyles, getStyledOptions } from './modules/system';\nimport { ComponentProps, StyledProps, WithChildren, WithColor, WithComponentSize } from './types';\n\nexport interface ButtonGroupKnownProps\n  extends StyledProps,\n    WithChildren,\n    WithColor,\n    WithComponentSize {}\n\nexport type ButtonGroupProps = ComponentProps<HTMLDivElement, ButtonGroupKnownProps>;\n\nexport const StyledButtonGroup = styled(\n  'div',\n  getStyledOptions(),\n)<Partial<ButtonGroupProps>>(\n  props => css`\n    ${baseStyles(props)};\n    display: inline-flex;\n\n    > button {\n      + button {\n        margin-left: -1px;\n      }\n\n      &:first-of-type {\n        border-bottom-right-radius: 0;\n        border-top-right-radius: 0;\n      }\n\n      &:last-of-type {\n        border-bottom-left-radius: 0;\n        border-top-left-radius: 0;\n      }\n\n      &:not(:first-of-type):not(:last-of-type) {\n        border-radius: 0;\n      }\n    }\n  `,\n);\n\nexport function ButtonGroup(props: ButtonGroupProps) {\n  const { children, shade, size, variant, ...rest } = props;\n  const buttonProps = {\n    shade,\n    size,\n    variant,\n  };\n\n  return (\n    <StyledButtonGroup data-component-name=\"ButtonGroup\" {...rest}>\n      {Children.map(children, child => cloneElement(child as ReactElement, { ...buttonProps }))}\n    </StyledButtonGroup>\n  );\n}\n\nButtonGroup.defaultProps = {\n  shade: 'mid',\n  size: 'md',\n  variant: 'primary',\n};\n"]},"metadata":{},"sourceType":"module"}