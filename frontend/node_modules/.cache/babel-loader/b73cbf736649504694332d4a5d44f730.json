{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useRef } from 'react';\nimport { useUpdateEffect } from 'react-use';\nimport { Checkbox } from '../CheckboxAndRadio';\nimport { Spacer } from '../Spacer';\n\nfunction FieldCheckbox(props) {\n  const {\n    currentValue,\n    items = [],\n    name = 'CheckboxGroup',\n    setValue\n  } = props;\n  const ref = useRef(null);\n  useUpdateEffect(() => {\n    currentValue.forEach(d => {\n      const input = ref.current?.querySelector(`[name=${d}]`);\n\n      if (input) {\n        input.checked = true;\n      }\n    });\n  }, [currentValue]);\n\n  const handleChange = event => {\n    const {\n      target\n    } = event;\n    const nextValue = target.checked ? [...currentValue, target.name] : currentValue?.filter(d => d !== target.name);\n    setValue(name, nextValue, {\n      shouldDirty: true,\n      shouldValidate: true\n    });\n  };\n\n  return _jsx(Spacer, {\n    mb: \"xs\",\n    children: items.map(d => _jsx(Checkbox, {\n      defaultChecked: currentValue.includes(d.name),\n      label: d.label,\n      name: d.name,\n      onChange: handleChange,\n      size: \"sm\"\n    }, d.name))\n  });\n}\n\nexport default FieldCheckbox;","map":{"version":3,"mappings":";AAAA,SAAsBA,MAAtB,QAAoC,OAApC;AAEA,SAASC,eAAT,QAAgC,WAAhC;AAIA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAOA,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;EACjC,MAAM;IAAEC,YAAF;IAAgBC,KAAK,GAAG,EAAxB;IAA4BC,IAAI,GAAG,eAAnC;IAAoDC;EAApD,IAAiEJ,KAAvE;EACA,MAAMK,GAAG,GAAGV,MAAM,CAAiB,IAAjB,CAAlB;EAEAC,eAAe,CAAC,MAAK;IACnBK,YAAY,CAACK,OAAb,CAAqBC,CAAC,IAAG;MACvB,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,EAAaC,aAAb,CAA2B,SAASH,CAAC,GAArC,CAAd;;MAEA,IAAIC,KAAJ,EAAW;QACTA,KAAK,CAACG,OAAN,GAAgB,IAAhB;MACD;IACF,CAND;EAOD,CARc,EAQZ,CAACV,YAAD,CARY,CAAf;;EAUA,MAAMW,YAAY,GAAIC,KAAD,IAAyC;IAC5D,MAAM;MAAEC;IAAF,IAAaD,KAAnB;IAEA,MAAME,SAAS,GAAGD,MAAM,CAACH,OAAP,GACd,CAAC,GAAGV,YAAJ,EAAkBa,MAAM,CAACX,IAAzB,CADc,GAEdF,YAAY,EAAEe,MAAd,CAAqBT,CAAC,IAAIA,CAAC,KAAKO,MAAM,CAACX,IAAvC,CAFJ;IAIAC,QAAQ,CAACD,IAAD,EAAOY,SAAP,EAAkB;MAAEE,WAAW,EAAE,IAAf;MAAqBC,cAAc,EAAE;IAArC,CAAlB,CAAR;EACD,CARD;;EAUA,OACEC,KAACrB,MAAD,EAAO;IAACsB,EAAE,EAAC,IAAJ;IAAQC,UACZnB,KAAK,CAACoB,GAAN,CAAUf,CAAC,IACVY,KAACtB,QAAD,EAAS;MAEP0B,cAAc,EAAEtB,YAAY,CAACuB,QAAb,CAAsBjB,CAAC,CAACJ,IAAxB,CAFT;MAGPsB,KAAK,EAAElB,CAAC,CAACkB,KAHF;MAIPtB,IAAI,EAAEI,CAAC,CAACJ,IAJD;MAKPuB,QAAQ,EAAEd,YALH;MAMPe,IAAI,EAAC;IANE,CAAT,EACOpB,CAAC,CAACJ,IADT,CADD;EADI,CAAP,CADF;AAcD;;AAED,eAAeJ,aAAf","names":["useRef","useUpdateEffect","Checkbox","Spacer","FieldCheckbox","props","currentValue","items","name","setValue","ref","forEach","d","input","current","querySelector","checked","handleChange","event","target","nextValue","filter","shouldDirty","shouldValidate","_jsx","mb","children","map","defaultChecked","includes","label","onChange","size"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Field/Checkbox.tsx"],"sourcesContent":["import { ChangeEvent, useRef } from 'react';\nimport { FieldValues, SetFieldValue } from 'react-hook-form';\nimport { useUpdateEffect } from 'react-use';\n\nimport { FieldCheckboxProps } from './types';\n\nimport { Checkbox } from '../CheckboxAndRadio';\nimport { Spacer } from '../Spacer';\n\ninterface Props extends FieldCheckboxProps {\n  currentValue: string[];\n  setValue: SetFieldValue<FieldValues>;\n}\n\nfunction FieldCheckbox(props: Props) {\n  const { currentValue, items = [], name = 'CheckboxGroup', setValue } = props;\n  const ref = useRef<HTMLDivElement>(null);\n\n  useUpdateEffect(() => {\n    currentValue.forEach(d => {\n      const input = ref.current?.querySelector(`[name=${d}]`) as HTMLInputElement;\n\n      if (input) {\n        input.checked = true;\n      }\n    });\n  }, [currentValue]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    const nextValue = target.checked\n      ? [...currentValue, target.name]\n      : currentValue?.filter(d => d !== target.name);\n\n    setValue(name, nextValue, { shouldDirty: true, shouldValidate: true });\n  };\n\n  return (\n    <Spacer mb=\"xs\">\n      {items.map(d => (\n        <Checkbox\n          key={d.name}\n          defaultChecked={currentValue.includes(d.name)}\n          label={d.label}\n          name={d.name}\n          onChange={handleChange}\n          size=\"sm\"\n        />\n      ))}\n    </Spacer>\n  );\n}\n\nexport default FieldCheckbox;\n"]},"metadata":{},"sourceType":"module"}