{"ast":null,"code":"import { pluralize } from './strings';\nexport var MINUTE = 60;\nexport var HOUR = MINUTE * 60;\nexport var DAY = HOUR * 24;\nexport var WEEK = DAY * 7;\nexport var MONTH = DAY * 30;\nexport var YEAR = 365 * DAY;\nexport function isIsoDate(input) {\n  if (!/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/.test(input)) {\n    return false;\n  }\n\n  var date = new Date(input);\n  return date.toISOString() === input;\n}\nexport function isoDate(input) {\n  if (typeof input !== 'undefined') {\n    return new Date(input).toISOString();\n  }\n\n  return new Date().toISOString();\n}\nexport function now() {\n  return Math.floor(Date.now() / 1000);\n}\n/**\n * Returns how much time has passed since the input.\n */\n\nexport function timeSince(input, options) {\n  var _a = options || {},\n      _b = _a.day,\n      day = _b === void 0 ? 'day' : _b,\n      days = _a.days,\n      _c = _a.hour,\n      hour = _c === void 0 ? 'hour' : _c,\n      hours = _a.hours,\n      _d = _a.minute,\n      minute = _d === void 0 ? 'minute' : _d,\n      minutes = _a.minutes,\n      _e = _a.month,\n      month = _e === void 0 ? 'month' : _e,\n      months = _a.months,\n      prefix = _a.prefix,\n      _f = _a.second,\n      second = _f === void 0 ? 'second' : _f,\n      seconds = _a.seconds,\n      _g = _a.skipWeeks,\n      skipWeeks = _g === void 0 ? false : _g,\n      _h = _a.suffix,\n      suffix = _h === void 0 ? 'ago' : _h,\n      _j = _a.week,\n      week = _j === void 0 ? 'week' : _j,\n      weeks = _a.weeks,\n      _k = _a.year,\n      year = _k === void 0 ? 'year' : _k,\n      years = _a.years;\n\n  var date = typeof input === 'number' ? input : timestamp(input);\n  var diff = now() - date;\n  var quantity = Math.floor(diff / YEAR);\n\n  var output = function (value, caption) {\n    return \"\".concat(prefix ? \"\".concat(prefix, \" \") : '').concat(value, \" \").concat(caption).concat(suffix ? \" \".concat(suffix) : '');\n  };\n\n  if (quantity >= 1) {\n    return output(quantity, pluralize(quantity, year, years));\n  }\n\n  quantity = Math.floor(diff / MONTH);\n\n  if (quantity > 1) {\n    return output(quantity, pluralize(quantity, month, months));\n  }\n\n  if (!skipWeeks) {\n    quantity = Math.floor(diff / WEEK);\n\n    if (quantity > 1) {\n      return output(quantity, pluralize(quantity, week, weeks));\n    }\n  }\n\n  quantity = Math.floor(diff / DAY);\n\n  if (quantity >= 1) {\n    return output(quantity, pluralize(quantity, day, days));\n  }\n\n  quantity = Math.floor(diff / HOUR);\n\n  if (quantity >= 1) {\n    return output(quantity, pluralize(quantity, hour, hours));\n  }\n\n  quantity = Math.floor(diff / MINUTE);\n\n  if (quantity > 1) {\n    return output(quantity, pluralize(quantity, minute, minutes));\n  }\n\n  return output(Math.floor(diff), pluralize(diff, second, seconds));\n}\n/**\n * Get the timestamp for a date.\n */\n\nexport function timestamp(input) {\n  if (!input) {\n    return now();\n  }\n\n  var date = typeof input === 'string' ? new Date(input) : input;\n  return Math.floor(date.getTime() / 1000);\n}","map":{"version":3,"mappings":"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","names":["pluralize","MINUTE","HOUR","DAY","WEEK","MONTH","YEAR","isIsoDate","input","test","date","Date","toISOString","isoDate","now","Math","floor","timeSince","options","_b","day","days","_c","hour","hours","_d","minute","minutes","_e","month","months","prefix","_f","second","seconds","_g","skipWeeks","_h","suffix","_j","week","weeks","_k","year","years","timestamp","diff","quantity","output","value","caption","concat","getTime"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/helpers/src/date.ts"],"sourcesContent":["import { pluralize } from './strings';\nimport { TimeSinceOptions } from './types';\n\nexport const MINUTE = 60;\nexport const HOUR = MINUTE * 60;\nexport const DAY = HOUR * 24;\nexport const WEEK = DAY * 7;\nexport const MONTH = DAY * 30;\nexport const YEAR = 365 * DAY;\n\nexport function isIsoDate(input: string) {\n  if (!/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/.test(input)) {\n    return false;\n  }\n\n  const date = new Date(input);\n\n  return date.toISOString() === input;\n}\n\nexport function isoDate(input?: string | number) {\n  if (typeof input !== 'undefined') {\n    return new Date(input).toISOString();\n  }\n\n  return new Date().toISOString();\n}\n\nexport function now() {\n  return Math.floor(Date.now() / 1000);\n}\n\n/**\n * Returns how much time has passed since the input.\n */\nexport function timeSince(input: Date | string | number, options?: TimeSinceOptions) {\n  const {\n    day = 'day',\n    days,\n    hour = 'hour',\n    hours,\n    minute = 'minute',\n    minutes,\n    month = 'month',\n    months,\n    prefix,\n    second = 'second',\n    seconds,\n    skipWeeks = false,\n    suffix = 'ago',\n    week = 'week',\n    weeks,\n    year = 'year',\n    years,\n  } = options || {};\n  const date = typeof input === 'number' ? input : timestamp(input);\n  const diff = now() - date;\n  let quantity = Math.floor(diff / YEAR);\n\n  const output = (value: number, caption: string) =>\n    `${prefix ? `${prefix} ` : ''}${value} ${caption}${suffix ? ` ${suffix}` : ''}`;\n\n  if (quantity >= 1) {\n    return output(quantity, pluralize(quantity, year, years));\n  }\n\n  quantity = Math.floor(diff / MONTH);\n\n  if (quantity > 1) {\n    return output(quantity, pluralize(quantity, month, months));\n  }\n\n  if (!skipWeeks) {\n    quantity = Math.floor(diff / WEEK);\n\n    if (quantity > 1) {\n      return output(quantity, pluralize(quantity, week, weeks));\n    }\n  }\n\n  quantity = Math.floor(diff / DAY);\n\n  if (quantity >= 1) {\n    return output(quantity, pluralize(quantity, day, days));\n  }\n\n  quantity = Math.floor(diff / HOUR);\n\n  if (quantity >= 1) {\n    return output(quantity, pluralize(quantity, hour, hours));\n  }\n\n  quantity = Math.floor(diff / MINUTE);\n\n  if (quantity > 1) {\n    return output(quantity, pluralize(quantity, minute, minutes));\n  }\n\n  return output(Math.floor(diff), pluralize(diff, second, seconds));\n}\n\n/**\n * Get the timestamp for a date.\n */\nexport function timestamp(input?: Date | string) {\n  if (!input) {\n    return now();\n  }\n\n  const date = typeof input === 'string' ? new Date(input) : input;\n\n  return Math.floor(date.getTime() / 1000);\n}\n"]},"metadata":{},"sourceType":"module"}