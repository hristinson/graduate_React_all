{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { Icon } from './Icon';\nimport { appearanceStyles, baseStyles, colorStyles, getStyledOptions, marginStyles, paddingStyles, textStyles } from './modules/system';\nexport const StyledButtonBase = styled('button', getStyledOptions())(props => {\n  const {\n    busy\n  } = props;\n  return css`\n    ${appearanceStyles};\n    ${baseStyles(props)};\n    align-items: center;\n    background-color: transparent;\n    border: 0;\n    color: inherit;\n    cursor: pointer;\n    display: inline-flex;\n    font-family: inherit;\n    line-height: 1;\n    padding: 0;\n    ${colorStyles(props)};\n    ${marginStyles(props)};\n    ${paddingStyles(props)};\n    ${textStyles(props)};\n\n    :disabled {\n      cursor: not-allowed;\n      opacity: 0.6;\n    }\n\n    ${!!busy && css`\n      pointer-events: none;\n    `};\n  `;\n});\nexport const ButtonBase = forwardRef((props, ref) => {\n  const {\n    busy,\n    children\n  } = props;\n  const {\n    fontSize = '16px'\n  } = textStyles(props);\n  return _jsxs(StyledButtonBase, {\n    ref: ref,\n    \"data-component-name\": \"ButtonBase\",\n    ...props,\n    children: [children, busy && _jsx(Icon, {\n      ml: \"xxs\",\n      name: \"spinner\",\n      size: parseInt(`${fontSize}`, 10) + 2,\n      spin: true\n    })]\n  });\n});\nButtonBase.defaultProps = {\n  bold: false,\n  busy: false,\n  disabled: false,\n  size: 'regular',\n  type: 'button'\n};","map":{"version":3,"mappings":";AAAA,SAA+BA,UAA/B,QAAiD,OAAjD;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,IAAT,QAAqB,QAArB;AACA,SACEC,gBADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,gBAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,UAPF,QAQO,kBARP;AAiCA,OAAO,MAAMC,gBAAgB,GAAGT,MAAM,CACpC,QADoC,EAEpCK,gBAAgB,EAFoB,CAAN,CAGbK,KAAK,IAAG;EACzB,MAAM;IAAEC;EAAF,IAAWD,KAAjB;EAEA,OAAOX,GAAG;MACNG,gBAAgB;MAChBC,UAAU,CAACO,KAAD,CAAO;;;;;;;;;;MAUjBN,WAAW,CAACM,KAAD,CAAO;MAClBJ,YAAY,CAACI,KAAD,CAAO;MACnBH,aAAa,CAACG,KAAD,CAAO;MACpBF,UAAU,CAACE,KAAD,CAAO;;;;;;;MAOjB,CAAC,CAACC,IAAF,IACFZ,GAAG;;KAEF;GAzBH;AA2BD,CAjC+B,CAAzB;AAmCP,OAAO,MAAMa,UAAU,GAAGd,UAAU,CAAqC,CAACY,KAAD,EAAQG,GAAR,KAAe;EACtF,MAAM;IAAEF,IAAF;IAAQG;EAAR,IAAqBJ,KAA3B;EACA,MAAM;IAAEK,QAAQ,GAAG;EAAb,IAAwBP,UAAU,CAACE,KAAD,CAAxC;EAEA,OACEM,MAACP,gBAAD,EAAiB;IAACI,GAAG,EAAEA,GAAN;IAAS,uBAAsB,YAA/B;IAA2C,GAAKH,KAAhD;IAAqDI,WACnEA,QADmE,EAEnEH,IAAI,IAAIM,KAAChB,IAAD,EAAK;MAACiB,EAAE,EAAC,KAAJ;MAAUC,IAAI,EAAC,SAAf;MAAyBC,IAAI,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,EAAZ,EAAgB,EAAhB,CAAR,GAA8B,CAA7D;MAAgEO,IAAI;IAApE,CAAL,CAF2D;EAArD,CAAjB,CADF;AAMD,CAVmC,CAA7B;AAYPV,UAAU,CAACW,YAAX,GAA0B;EACxBC,IAAI,EAAE,KADkB;EAExBb,IAAI,EAAE,KAFkB;EAGxBc,QAAQ,EAAE,KAHc;EAIxBL,IAAI,EAAE,SAJkB;EAKxBM,IAAI,EAAE;AALkB,CAA1B","names":["forwardRef","css","styled","Icon","appearanceStyles","baseStyles","colorStyles","getStyledOptions","marginStyles","paddingStyles","textStyles","StyledButtonBase","props","busy","ButtonBase","ref","children","fontSize","_jsxs","_jsx","ml","name","size","parseInt","spin","defaultProps","bold","disabled","type"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/ButtonBase.tsx"],"sourcesContent":["import { ButtonHTMLAttributes, forwardRef } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { Icon } from './Icon';\nimport {\n  appearanceStyles,\n  baseStyles,\n  colorStyles,\n  getStyledOptions,\n  marginStyles,\n  paddingStyles,\n  textStyles,\n} from './modules/system';\nimport {\n  ComponentProps,\n  StyledProps,\n  WithBusy,\n  WithChildren,\n  WithColor,\n  WithMargin,\n  WithPadding,\n  WithTextOptions,\n} from './types';\n\nexport interface ButtonBaseKnownProps\n  extends StyledProps,\n    WithBusy,\n    WithChildren,\n    WithColor,\n    WithMargin,\n    WithPadding,\n    WithTextOptions {\n  type?: ButtonHTMLAttributes<HTMLButtonElement>['type'];\n}\n\nexport type ButtonBaseProps = ComponentProps<HTMLButtonElement, ButtonBaseKnownProps>;\n\nexport const StyledButtonBase = styled(\n  'button',\n  getStyledOptions(),\n)<ButtonBaseProps>(props => {\n  const { busy } = props;\n\n  return css`\n    ${appearanceStyles};\n    ${baseStyles(props)};\n    align-items: center;\n    background-color: transparent;\n    border: 0;\n    color: inherit;\n    cursor: pointer;\n    display: inline-flex;\n    font-family: inherit;\n    line-height: 1;\n    padding: 0;\n    ${colorStyles(props)};\n    ${marginStyles(props)};\n    ${paddingStyles(props)};\n    ${textStyles(props)};\n\n    :disabled {\n      cursor: not-allowed;\n      opacity: 0.6;\n    }\n\n    ${!!busy &&\n    css`\n      pointer-events: none;\n    `};\n  `;\n});\n\nexport const ButtonBase = forwardRef<HTMLButtonElement, ButtonBaseProps>((props, ref) => {\n  const { busy, children } = props;\n  const { fontSize = '16px' } = textStyles(props);\n\n  return (\n    <StyledButtonBase ref={ref} data-component-name=\"ButtonBase\" {...props}>\n      {children}\n      {busy && <Icon ml=\"xxs\" name=\"spinner\" size={parseInt(`${fontSize}`, 10) + 2} spin />}\n    </StyledButtonBase>\n  );\n});\n\nButtonBase.defaultProps = {\n  bold: false,\n  busy: false,\n  disabled: false,\n  size: 'regular',\n  type: 'button',\n};\n"]},"metadata":{},"sourceType":"module"}