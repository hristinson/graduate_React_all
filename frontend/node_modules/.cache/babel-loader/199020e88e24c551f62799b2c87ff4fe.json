{"ast":null,"code":"import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { pick } from '@gilbarbara/helpers';\nimport { getTheme, px } from '../modules/helpers';\nimport { baseStyles, getStyledOptions, isDarkMode, marginStyles, outlineStyles } from '../modules/system';\nexport const StyledCheckboxRadioInput = styled('input', getStyledOptions())`\n  left: 0;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  z-index: -1;\n`;\nexport const StyledText = styled('span', getStyledOptions())(props => {\n  const {\n    size\n  } = props;\n  const {\n    typography\n  } = getTheme(props);\n  const {\n    fontSize\n  } = typography[size === 'sm' ? 'mid' : 'regular'];\n  return css`\n    font-size: ${fontSize};\n  `;\n});\nexport const StyledElement = styled('span', getStyledOptions('label'))(props => {\n  const {\n    category = 'checkbox',\n    label,\n    size\n  } = props;\n  const {\n    colors,\n    grayDark,\n    grayDarker,\n    grayLighter,\n    radius,\n    white\n  } = getTheme(props);\n  const darkMode = isDarkMode(props);\n  let after;\n  let dimensions = 18;\n\n  if (size === 'md') {\n    dimensions = 20;\n  }\n\n  if (size === 'lg') {\n    dimensions = 22;\n  }\n\n  if (category === 'checkbox') {\n    let height = 4;\n    let width = 7;\n\n    if (size === 'md') {\n      height = 6;\n      width = 9;\n    }\n\n    if (size === 'lg') {\n      height = 7;\n      width = 11;\n    }\n\n    after = css`\n      border-bottom: 2px solid ${colors.primary};\n      border-left: 2px solid ${colors.primary};\n      height: ${px(height)};\n      transform: rotate(-45deg) translateY(-100%);\n      width: ${px(width)};\n    `;\n  } else {\n    let innerDimensions = 6;\n\n    if (size === 'md') {\n      innerDimensions = 7;\n    }\n\n    if (size === 'lg') {\n      innerDimensions = 8;\n    }\n\n    after = css`\n      background-color: ${colors.primary};\n      border-radius: 50%;\n      height: ${px(innerDimensions)};\n      transform: translate(-50%, -50%);\n      width: ${px(innerDimensions)};\n    `;\n  }\n\n  return css`\n    ${baseStyles(props)};\n    background-color: ${darkMode ? grayDarker : white};\n    border: 2px solid ${grayDark};\n    border-radius: ${category === 'checkbox' ? radius.xxs : radius.round};\n    display: inline-flex;\n    flex-shrink: 0;\n    height: ${px(dimensions)};\n    margin-right: ${label ? '6px' : '0'};\n    overflow: hidden;\n    position: relative;\n    transition: background-color 0.2s, border-color 0.2s;\n    width: ${px(dimensions)};\n\n    &:focus {\n      filter: drop-shadow(0 0 2px ${colors.primary});\n      outline: none;\n    }\n\n    &:after {\n      content: '';\n      display: none;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      ${after};\n    }\n\n    input:checked ~ & {\n      border-color: ${colors.primary};\n\n      &:after {\n        display: inline-block;\n      }\n    }\n\n    input:disabled ~ & {\n      cursor: not-allowed;\n      opacity: 0.6;\n    }\n\n    input:not(:checked):disabled ~ & {\n      background-color: ${grayLighter};\n    }\n  `;\n});\nexport const StyledLabel = styled('label', getStyledOptions())(props => {\n  const {\n    align,\n    disabled\n  } = props;\n  return css`\n    ${marginStyles(props)};\n    align-items: ${align};\n    cursor: ${disabled ? 'default' : 'pointer'};\n    display: flex;\n    justify-content: flex-start;\n    position: relative;\n\n    &:focus,\n    &:hover {\n      [data-component-name='Checkbox'],\n      [data-component-name='Radio'] {\n        &:not(:checked) ~ [data-component-name='Checkbox'],\n        &:not(:checked) ~ [data-component-name='Radio'] {\n          ${outlineStyles(props)};\n        }\n\n        &:not(:disabled):checked ~ [data-component-name='Checkbox'],\n        &:not(:disabled):checked ~ [data-component-name='Radio'] {\n          ${outlineStyles(props)};\n        }\n      }\n    }\n  `;\n});\nexport function getMarginProps(props) {\n  return pick(props, 'margin', 'mb', 'ml', 'mr', 'mt', 'mx', 'my');\n}\nexport function handleKeyDown(event) {\n  const target = event.target;\n  const input = target.previousElementSibling;\n\n  if (!input || input.disabled || ![' ', 'Enter'].includes(event.key)) {\n    return;\n  }\n\n  input.checked = !input.checked;\n}","map":{"version":3,"mappings":"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","names":["css","styled","pick","getTheme","px","baseStyles","getStyledOptions","isDarkMode","marginStyles","outlineStyles","StyledCheckboxRadioInput","StyledText","props","size","typography","fontSize","StyledElement","category","label","colors","grayDark","grayDarker","grayLighter","radius","white","darkMode","after","dimensions","height","width","primary","innerDimensions","xxs","round","StyledLabel","align","disabled","getMarginProps","handleKeyDown","event","target","input","previousElementSibling","includes","key","checked"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/CheckboxAndRadio/utils.tsx"],"sourcesContent":["import { ChangeEventHandler, KeyboardEvent } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { pick } from '@gilbarbara/helpers';\n\nimport { getTheme, px } from '../modules/helpers';\nimport {\n  baseStyles,\n  getStyledOptions,\n  isDarkMode,\n  marginStyles,\n  outlineStyles,\n} from '../modules/system';\nimport {\n  CheckboxItem,\n  ComponentProps,\n  RadioItem,\n  StyledProps,\n  WithComponentSize,\n  WithFlexBox,\n  WithMargin,\n} from '../types';\n\nexport interface SharedProps extends StyledProps, WithComponentSize, WithMargin {\n  /** @default center */\n  align?: WithFlexBox['align'];\n  name: string;\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n}\n\nexport type CheckboxProps = ComponentProps<HTMLInputElement, SharedProps & CheckboxItem>;\nexport type RadioProps = ComponentProps<HTMLInputElement, SharedProps & RadioItem>;\n\ninterface InnerProps\n  extends Omit<CheckboxProps, 'name' | 'value'>,\n    Omit<RadioProps, 'name' | 'value'> {\n  category?: 'checkbox' | 'radio';\n}\n\nexport const StyledCheckboxRadioInput = styled('input', getStyledOptions())`\n  left: 0;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  z-index: -1;\n`;\n\nexport const StyledText = styled(\n  'span',\n  getStyledOptions(),\n)<InnerProps>(props => {\n  const { size } = props;\n  const { typography } = getTheme(props);\n\n  const { fontSize } = typography[size === 'sm' ? 'mid' : 'regular'];\n\n  return css`\n    font-size: ${fontSize};\n  `;\n});\n\nexport const StyledElement = styled(\n  'span',\n  getStyledOptions('label'),\n)<InnerProps>(props => {\n  const { category = 'checkbox', label, size } = props;\n  const { colors, grayDark, grayDarker, grayLighter, radius, white } = getTheme(props);\n  const darkMode = isDarkMode(props);\n\n  let after;\n  let dimensions = 18;\n\n  if (size === 'md') {\n    dimensions = 20;\n  }\n\n  if (size === 'lg') {\n    dimensions = 22;\n  }\n\n  if (category === 'checkbox') {\n    let height = 4;\n    let width = 7;\n\n    if (size === 'md') {\n      height = 6;\n      width = 9;\n    }\n\n    if (size === 'lg') {\n      height = 7;\n      width = 11;\n    }\n\n    after = css`\n      border-bottom: 2px solid ${colors.primary};\n      border-left: 2px solid ${colors.primary};\n      height: ${px(height)};\n      transform: rotate(-45deg) translateY(-100%);\n      width: ${px(width)};\n    `;\n  } else {\n    let innerDimensions = 6;\n\n    if (size === 'md') {\n      innerDimensions = 7;\n    }\n\n    if (size === 'lg') {\n      innerDimensions = 8;\n    }\n\n    after = css`\n      background-color: ${colors.primary};\n      border-radius: 50%;\n      height: ${px(innerDimensions)};\n      transform: translate(-50%, -50%);\n      width: ${px(innerDimensions)};\n    `;\n  }\n\n  return css`\n    ${baseStyles(props)};\n    background-color: ${darkMode ? grayDarker : white};\n    border: 2px solid ${grayDark};\n    border-radius: ${category === 'checkbox' ? radius.xxs : radius.round};\n    display: inline-flex;\n    flex-shrink: 0;\n    height: ${px(dimensions)};\n    margin-right: ${label ? '6px' : '0'};\n    overflow: hidden;\n    position: relative;\n    transition: background-color 0.2s, border-color 0.2s;\n    width: ${px(dimensions)};\n\n    &:focus {\n      filter: drop-shadow(0 0 2px ${colors.primary});\n      outline: none;\n    }\n\n    &:after {\n      content: '';\n      display: none;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      ${after};\n    }\n\n    input:checked ~ & {\n      border-color: ${colors.primary};\n\n      &:after {\n        display: inline-block;\n      }\n    }\n\n    input:disabled ~ & {\n      cursor: not-allowed;\n      opacity: 0.6;\n    }\n\n    input:not(:checked):disabled ~ & {\n      background-color: ${grayLighter};\n    }\n  `;\n});\n\nexport const StyledLabel = styled(\n  'label',\n  getStyledOptions(),\n)<InnerProps>(props => {\n  const { align, disabled } = props;\n\n  return css`\n    ${marginStyles(props)};\n    align-items: ${align};\n    cursor: ${disabled ? 'default' : 'pointer'};\n    display: flex;\n    justify-content: flex-start;\n    position: relative;\n\n    &:focus,\n    &:hover {\n      [data-component-name='Checkbox'],\n      [data-component-name='Radio'] {\n        &:not(:checked) ~ [data-component-name='Checkbox'],\n        &:not(:checked) ~ [data-component-name='Radio'] {\n          ${outlineStyles(props)};\n        }\n\n        &:not(:disabled):checked ~ [data-component-name='Checkbox'],\n        &:not(:disabled):checked ~ [data-component-name='Radio'] {\n          ${outlineStyles(props)};\n        }\n      }\n    }\n  `;\n});\n\nexport function getMarginProps(props: CheckboxProps | RadioProps) {\n  return pick(props, 'margin', 'mb', 'ml', 'mr', 'mt', 'mx', 'my');\n}\n\nexport function handleKeyDown(event: KeyboardEvent<HTMLSpanElement>) {\n  const target = event.target as HTMLSpanElement;\n  const input = target.previousElementSibling as HTMLInputElement;\n\n  if (!input || input.disabled || ![' ', 'Enter'].includes(event.key)) {\n    return;\n  }\n\n  input.checked = !input.checked;\n}\n"]},"metadata":{},"sourceType":"module"}