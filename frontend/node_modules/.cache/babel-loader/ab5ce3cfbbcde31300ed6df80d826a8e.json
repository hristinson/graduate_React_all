{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { Controller } from 'react-hook-form';\nimport is from 'is-lite';\nimport { Toggle } from '../Toggle';\n\nfunction FieldToggle(props) {\n  const {\n    disabled,\n    name,\n    onChange,\n    required,\n    setValue\n  } = props;\n  const handleClickToggle = useCallback(status => {\n    const nextValue = !status;\n    setValue(name, nextValue, {\n      shouldDirty: true,\n      shouldValidate: true\n    });\n\n    if (onChange) {\n      onChange(nextValue);\n    }\n  }, [name, onChange, setValue]);\n  return _jsx(Controller, {\n    name: name,\n    render: _ref => {\n      let {\n        field\n      } = _ref;\n      return _jsx(Toggle, {\n        checked: is.undefined(field.value) ? false : field.value,\n        disabled: disabled,\n        name: name,\n        onClick: handleClickToggle\n      });\n    },\n    rules: {\n      required\n    }\n  });\n}\n\nexport default FieldToggle;","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,UAAT,QAAyD,iBAAzD;AACA,OAAOC,EAAP,MAAe,SAAf;AAIA,SAASC,MAAT,QAAuB,WAAvB;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAAiC;EAC/B,MAAM;IAAEC,QAAF;IAAYC,IAAZ;IAAkBC,QAAlB;IAA4BC,QAA5B;IAAsCC;EAAtC,IAAmDL,KAAzD;EAEA,MAAMM,iBAAiB,GAAGX,WAAW,CAClCY,MAAD,IAAoB;IAClB,MAAMC,SAAS,GAAG,CAACD,MAAnB;IAEAF,QAAQ,CAACH,IAAD,EAAOM,SAAP,EAAkB;MACxBC,WAAW,EAAE,IADW;MAExBC,cAAc,EAAE;IAFQ,CAAlB,CAAR;;IAKA,IAAIP,QAAJ,EAAc;MACZA,QAAQ,CAACK,SAAD,CAAR;IACD;EACF,CAZkC,EAanC,CAACN,IAAD,EAAOC,QAAP,EAAiBE,QAAjB,CAbmC,CAArC;EAgBA,OACEM,KAACf,UAAD,EAAW;IACTM,IAAI,EAAEA,IADG;IAETU,MAAM,EAAE;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,OACNF,KAACb,MAAD,EAAO;QACLgB,OAAO,EAAEjB,EAAE,CAACkB,SAAH,CAAaF,KAAK,CAACG,KAAnB,IAA4B,KAA5B,GAAoCH,KAAK,CAACG,KAD9C;QAELf,QAAQ,EAAEA,QAFL;QAGLC,IAAI,EAAEA,IAHD;QAILe,OAAO,EAAEX;MAJJ,CAAP,CADM;IAAA,CAFC;IAUTY,KAAK,EAAE;MAAEd;IAAF;EAVE,CAAX,CADF;AAcD;;AAED,eAAeL,WAAf","names":["useCallback","Controller","is","Toggle","FieldToggle","props","disabled","name","onChange","required","setValue","handleClickToggle","status","nextValue","shouldDirty","shouldValidate","_jsx","render","field","checked","undefined","value","onClick","rules"],"sources":["/My_WORK/graduate_React/frontend/node_modules/@gilbarbara/components/src/Field/Toggle.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport { Controller, FieldValues, UseFormSetValue } from 'react-hook-form';\nimport is from 'is-lite';\n\nimport { FieldToggleProps } from './types';\n\nimport { Toggle } from '../Toggle';\n\ninterface Props extends FieldToggleProps {\n  setValue: UseFormSetValue<FieldValues>;\n}\n\nfunction FieldToggle(props: Props): JSX.Element {\n  const { disabled, name, onChange, required, setValue } = props;\n\n  const handleClickToggle = useCallback(\n    (status: boolean) => {\n      const nextValue = !status;\n\n      setValue(name, nextValue, {\n        shouldDirty: true,\n        shouldValidate: true,\n      });\n\n      if (onChange) {\n        onChange(nextValue);\n      }\n    },\n    [name, onChange, setValue],\n  );\n\n  return (\n    <Controller\n      name={name}\n      render={({ field }) => (\n        <Toggle\n          checked={is.undefined(field.value) ? false : field.value}\n          disabled={disabled}\n          name={name}\n          onClick={handleClickToggle}\n        />\n      )}\n      rules={{ required }}\n    />\n  );\n}\n\nexport default FieldToggle;\n"]},"metadata":{},"sourceType":"module"}